<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stance2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active = false
    exit;

//Make gravity
if zgravityon = 1
    zspeed += zgravity;
z += zspeed; //Changes the height of the jump (the greater z is, the higher Mario is)
if z &lt;= 0
{
    zspeed = 0;
    z = 0;
    zgravityon = 0;
    ground = 1;
}

if ground = 0
{
    if zspeed &gt; 0
        sprite_index = spr_mariochoosejump;
    else
        sprite_index =  spr_stance2;
}

if gamepad_button_check(0, global.buttonLeft) || keyboard_check(global.keyLeft) //Left
{
    if active = true &amp;&amp; collision = 0
        x -= 2;
}
if gamepad_button_check(0, global.buttonUp) || keyboard_check(global.keyUp) //Up
{
    if active = true &amp;&amp; collision = 0
        y -= 2;
}
if gamepad_button_check(0, global.buttonRight) || keyboard_check(global.keyRight) //Right
{
    if active = true &amp;&amp; collision = 0
        x += 2;
}
if gamepad_button_check(0, global.buttonDown) || keyboard_check(global.keyDown) //Down
{
    if active = true &amp;&amp; collision = 0
        y += 2;
}
if gamepad_button_check(0, global.buttonSelect) || keyboard_check(global.keySelect) //Select
|| gamepad_button_check(0, global.buttonA) || keyboard_check(global.keyA) //A
{
    if zgravityon = 0 &amp;&amp; active = true
    {
        zspeed = 12;
        ground = 0;
        zgravityon = 1;
        audio_play_sound(snd_jump,0,0);
    }
}
if gamepad_button_check(0, global.buttonStart) || keyboard_check(vk_enter) //Start
{
    /*if global.finalboss = false
    {
        audio_play_sound(snd_choose,0,0);
        global.finalboss = true;
    }
    else if global.finalboss = true
    {
        audio_play_sound(snd_cancel,0,0);
        global.finalboss = false;
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.275;
active = true;

z = 0;
ground = 1;
collision = 0; //If interacting with a solid
zspeed = 0; //Speed he drops
zgravity = -1; //Added to the zspeed every step
zgravityon = 0; //If zgravity will affect it
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Mario without moving his mask
draw_sprite(sprite_index,image_index,x,y-z);

//Draw shadow
if ground = 0
{
    if z &lt; 10
        draw_sprite(spr_shadow1,image_index,x,y);
    if z &gt;= 10 &amp;&amp; z &lt; 20
        draw_sprite(spr_shadow2,image_index,x,y);
    if z &gt;= 20
        draw_sprite(spr_shadow3,image_index,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
