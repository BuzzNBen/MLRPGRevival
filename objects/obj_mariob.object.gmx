<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stance1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ground = 1; //if he is on the ground
z = 0; //his height
/*
moveto is a variable for mario's moves.
0 is to his regular stance (start position)
1 is his jump
2 is his hammer
3 is his hand move
4 is vacant for a solo move
5 is Bros Attack
    5.1 is Green Shell
    5.2 is Fire Flower
6 is taking out an item
7 is tossing an item in the air
8 is eating the item
9 is healing from the item
10 is tossing an item to Luigi
11 is move to Luigi
*/
moveto = 0;
hurt = 0;

Jump = 0;
jump = 0;
roomin = 0;

zspeed = 0; //Speed he drops
zgravity = -1; //Added to the zspeed every step
zgravityon = 0; //If zgravity will affect it
stancex = x;
stancey = y;
image_speed = .275;
stance = 1; //Stance that Mario takes
control = 1; //If Mario can move
battleblock = 0; //What battle block is above Mario's head
if instance_exists(obj_battlestart)
    phase = 0; 
else
    phase = 1;
/* Phase of attacking
1 is choose type
2 is choose move
3 is choose enemy/brother
4 is the attack
5 is consuming an item
0 is standby while it is Luigi's turn
    0.15 is standby after Luigi falls in battle
    0.25 is standby during buffer period
    0.5 is standby during display of total damage
    0.75 is standy during fanfare
-1 is being attacked (jump defense)
-2 is being attacked (hammer defense)
-3 is running away
-4 is starting the battle
*/
offset = 0;
length = 5;
move = 0;

itemlist = ds_list_create();
itemamount = ds_list_create();

movechoose = 1; //Move that is chosen
itemdifmax = 0; //Amount of different items that exist, it will be set each step
brositemdifmax = 0; //Amount of different bros attacks are available
itemid = 0; //Item that is being chosen
itemnum = 0; //Item position
brositemnum = 0 //Bros Attack position
itemname = ""; //Item name
fed = 0; //If an item has been consumed
solonum = 3; //Number of solo attacks
brosnum = 1; //Number of bros attacks
runnum = 2; //Number of run commands
jumpchoosewait = 5; //Used in jumping to hit the block
jumpchoosego = 0; //If jumpchoosewait will count down
jumpingchoose = 0; //If you are jumping to choose a block
targetchoose = 1; //The brother/enemy that is chosen
targetchoosego = 0;
targetidaboutto = 0;
jumpdodgewait = 5; //Used in jumping to dodge
jumpdodgego = 0; //If jumpdodgewait will count down
jumpingdodge = 0; //If jumping to dodge
hammerdodgewait = 0; //Used in hammering to dodge
hammerdodgego = 0; //If hammerdodgewait will count down
hammeringdodge = 0; //If dodging with hammer
hammering = 0; //If ready to use hammer
page = 1;
pagenext = 1;
turnnext = 0;
win = 0; //If he won
rankbattle = 0;
pointsbattle = 0;
attacknum = 0;
held = 0; //If holding button
repeataction = 0; //If going for a double timed hit
damage = 0; //Damage dealt
reaction = 0; //If reacting to Luigi falling in battle
name = "Mario";
ID = 0;

/*originally = 0;
lerp_speed = 0;

x_block[0] = 0;
y_block[0] = 0;
x_block[1] = 0;
y_block[1] = 0;
x_block[2] = 0;
y_block[2] = 0;
x_block[3] = 0;
y_block[3] = 0;
x_block[4] = 0;
y_block[4] = 0;
instance_create(x,y,obj_jumpblock);
instance_create(x,y,obj_brosblock);
instance_create(x,y,obj_runblock);
instance_create(x,y,obj_itemblock);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(itemlist);
ds_list_destroy(itemamount);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Bros Attacks Selection
if battleblock = 1
{
    //Subtract BP
    if movechoose = 1 //or Green Shells
        global.MBP -= 4;
    if movechoose = 2 //or Fire Flower
        global.MBP -= 6;
    if movechoose = 3 //or Jump Helmet
        global.MBP -= 10;
    if movechoose = 4 //or Broken Heart
        global.MBP -= 14;
    //Take out Bros Attack Item
    moveto = 5;
    phase = 5;
    image_index = 0;
    sprite_index = spr_mariobtakeout;
    ID = instance_create(x+20,y-24,obj_brosattack);
    with ID attacknum = attacknum;
}
else
{
    //Item Index 
    if pagenext = 1
        itemid = 0;
    else if pagenext = 2
        itemid = 1;
    else if pagenext = 3
        itemid = 2;
    else if pagenext = 4
        itemid = 3;
    else if pagenext = 5
        itemid = 4;
    else if pagenext = 6
        itemid = 5;
    else if pagenext = 7
        itemid = 6;
    else if pagenext = 8
        itemid = 7;
    else if pagenext = 9
        itemid = 8;
    else if pagenext = 10
        itemid = 9;
    else if pagenext = 11
        itemid = 10;
    else if pagenext = 12
        itemid = 11;
    else if pagenext = 13
        itemid = 12;
    else if pagenext = 14
        itemid = 13;
    else if pagenext = 15
        itemid = 14;
    else if pagenext = 16
        itemid = 15;
    else if pagenext = 17
        itemid = 16;
    else if pagenext = 18
        itemid = 17;
    else if pagenext = 19
        itemid = 18;
    else if pagenext = 20
        itemid = 19;
    //Item Selection
    moveto = 6;
    phase = 5;
    image_index = 0;
    sprite_index = spr_mariobtakeout;
    instance_create(x+20,y-32,obj_itemb);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveto = 3; //Hand Attack
phase = 4;
sprite_index = spr_mariobwalking;
obj_battlecontrol.wintype = -3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveto = 2; //Hammer Attack
phase = 4;
sprite_index = spr_mariobwalking;
obj_battlecontrol.wintype = -2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveto = 1; //Jump Attack
phase = 4;
sprite_index = spr_mariobwalking;
obj_battlecontrol.wintype = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Running Away
if global.Ldead &gt; 0
{
    audio_play_sound(snd_jump,0,0);
    moveto = 11; //Move to Luigi
}
else
    phase = -3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Excellent Hit
if background_visible[7] = true
    background_visible[7] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Grab Luigi
audio_play_sound(snd_jump,0,0);
moveto = 11; //Move to Luigi
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_mariobwalkingback;
image_speed = 0.275;
moveto = 0;
if global.takedamage &gt; 0
    global.takedamage = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>luckyhit = true; //Lucky Hit
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Controls
if gamepad_button_check_pressed(0, global.buttonA) || keyboard_check_pressed(global.keyA) //A
    event_user(8);
if gamepad_button_check_released(0, global.buttonA) || keyboard_check_released(global.keyA) //A
    event_user(9);
if gamepad_button_check_pressed(0, global.buttonLeft) || keyboard_check_pressed(global.keyLeft) //Left
    event_user(10);
if gamepad_button_check_pressed(0, global.buttonUp) || keyboard_check_pressed(global.keyUp) //Up
    event_user(11);
if gamepad_button_check_pressed(0, global.buttonRight) || keyboard_check_pressed(global.keyRight) //Right
    event_user(12);
if gamepad_button_check_pressed(0, global.buttonDown) || keyboard_check_pressed(global.keyDown) //Down
    event_user(13);

/*if global.turn = 0
{
    //make blocks appear smoothly
    obj_jumpblock.image_alpha = lerp(obj_jumpblock.image_alpha,1,0.1);
    obj_brosblock.image_alpha = lerp(obj_brosblock.image_alpha,1,0.1);
    obj_runblock.image_alpha = lerp(obj_runblock.image_alpha,1,0.1);
    obj_itemblock.image_alpha = lerp(obj_itemblock.image_alpha,1,0.1);
}*/

if global.turn = 0 &amp;&amp; global.Ldead &gt; 0 &amp;&amp; phase &lt;&gt; 0.15 &amp;&amp; reaction = 0
    stance = 14;

if global.turn = 0 &amp;&amp; (phase = -1 or phase = -2 or phase = -4)
    phase = 1;

if global.turn = 0 &amp;&amp; global.Mdead &gt; 0 &amp;&amp; global.turn &gt; -1
    global.turn = 1;

//Make gravity
if zgravityon = 1
    zspeed += zgravity;
z += zspeed; //Changes the height of the jump (the greater z is, the higher Mario is)
if z &lt;= 0
{
    zspeed = 0;
    z = 0;
    zgravityon = 0;
    ground = 1 ;
    if moveto = -1 &amp;&amp; speed = 0.001
        sprite_index = spr_mhurt;
    if jumpingchoose = 1
    {
        control = 1;
        jumpingchoose = 0;
        
    }
    if jumpingdodge = 1
    {
        control = 1;
        jumpingdodge = 0;
    }
}
//Areas to move to

//Stance
if moveto = 0 &amp;&amp; battleblock &lt;&gt; 2 &amp;&amp; obj_luigib.battleblock &lt;&gt; 2
    mp_linear_step(stancex,stancey,4,0);

//Jump Attack
if moveto = 1
{
    /* Right now I don't know how to code the jump depending on the enemy's height
    if anybody can find a better way to make him jump to the enemy depending
    on the enemy's height, please change the game, highlight the parts you changed,
    and send it to me via email/discord*/
    mp_linear_step(targetx,targety,3,0);
    // makes him jump when half way to the enemy
    if x &gt; (targetx - x/2.5) &amp;&amp; ground = 1 &amp;&amp; phase = 4 &amp;&amp; sprite_index = spr_mariobwalking &amp;&amp; targetid.floating = 0
    {
        sprite_index = spr_mariobjumpstart;
        ground = 0;
        zspeed = 14;
        zgravityon = 1;
        if !audio_is_playing(snd_jump)
            audio_play_sound(snd_jump,0,0);
    }
    else if x &gt; (targetx - x/2.5) &amp;&amp; ground = 1 &amp;&amp; phase = 4 &amp;&amp; sprite_index = spr_mariobwalking &amp;&amp; targetid.floating = 1
    {
        sprite_index = spr_mariobjumpstart;
        ground = 0;
        zspeed = 18;
        zgravityon = 1;
        if !audio_is_playing(snd_jump)
            audio_play_sound(snd_jump,0,0);
    }
}

//Hammer Attack
if moveto = 2
{
    mp_linear_step(targetx - 26,targety,3,0);

    // initiates hammer animation
    if x = targetx - 26 &amp;&amp; y = targety 
    {
        if sprite_index = spr_mariobwalking
        {
            audio_play_sound(snd_hammerout,0,0);
            image_index = 0;
        }
        if sprite_index = spr_mariobhammerstrikefail
            sprite_index = spr_mariobhammerstrikefail;
        else if image_index &gt; 9 &amp;&amp; sprite_index = spr_mariobhammerstrikestart &amp;&amp; held = 1
        {
            audio_play_sound(snd_charge_up,0,0);
            sprite_index = spr_mariobhammerstrike;
        }
        else if sprite_index = spr_mariobhammerstrike
            sprite_index = spr_mariobhammerstrike;
        else if sprite_index = spr_mariobhammerstrikehit
        {
            audio_stop_sound(snd_charge_up);
            sprite_index = spr_mariobhammerstrikehit;
        }
        else
            sprite_index = spr_mariobhammerstrikestart;
    
        //Hits enemy
        if sprite_index = spr_mariobhammerstrikestart &amp;&amp; image_index &lt; 8 &amp;&amp; image_index &gt;= 4 &amp;&amp; targetid.hurt = 0 &amp;&amp; held = 2 //Good Hit
        {
            image_index = 12;
            global.hitrank = 1; //Good Hit
            sprite_index = spr_mariobhammerstrikehit;
            event_user(1);
            if !audio_is_playing(snd_miss) &amp;&amp; targetid.floating = 1
                audio_play_sound(snd_miss,0,0);
            else if !audio_is_playing(snd_strike) &amp;&amp; targetid.floating = 0
                audio_play_sound(snd_strike,0,0);
        }
        else if sprite_index = spr_mariobhammerstrikestart &amp;&amp; image_index &gt;= 8 &amp;&amp; image_index &lt;= 9 &amp;&amp; targetid.hurt = 0 &amp;&amp; held = 3 //Great Hit
        {
            image_index = 12;
            global.hitrank = 2; //Great Hit
            sprite_index = spr_mariobhammerstrikehit;
            event_user(1);
            if !audio_is_playing(snd_miss) &amp;&amp; targetid.floating = 1
                audio_play_sound(snd_miss,0,0);
            else if !audio_is_playing(snd_strike) &amp;&amp; targetid.floating = 0
                audio_play_sound(snd_strike,0,0);
        }
        else if sprite_index = spr_mariobhammerstrikehit &amp;&amp; image_index &gt; 9 &amp;&amp; targetid.hurt = 0 //Excellent Hit
        {
            global.hitrank = 3; //Excellent Hit
            event_user(1);
            if !audio_is_playing(snd_miss) &amp;&amp; targetid.floating = 1
                audio_play_sound(snd_miss,0,0);
            else if !audio_is_playing(snd_strike) &amp;&amp; targetid.floating = 0
                audio_play_sound(snd_strike,0,0);
        }
        else if sprite_index = spr_mariobhammerstrikefail &amp;&amp; image_index &lt; 16 &amp;&amp; image_index &gt;= 4 &amp;&amp; targetid.hurt = 0 //Ok Hit
        {
            global.hitrank = 0; //Ok Hit
            event_user(1);
            if !audio_is_playing(snd_throw)
                audio_play_sound(snd_throw,0,0);
        }
    }
}

//Hand Attack
if moveto = 3
{
    mp_linear_step(targetx - 26,targety,3,0);

    // initiates hand animation
    if x = targetx - 26 &amp;&amp; y = targety 
    {
        if sprite_index = spr_mariobwalking
        {
            audio_play_sound(snd_hammerout,0,0);
            image_index = 0;
            audio_play_sound(snd_charge_up,0,0);
            sprite_index = spr_mariobhandstrikestart;
        }
        else if image_index &gt; 14 &amp;&amp; sprite_index = spr_mariobhandstrikestart &amp;&amp; held = 1
        {
            audio_play_sound(snd_hit,0,0);
            audio_play_sound(snd_excellenthit,0,0);
            sprite_index = spr_mariobhandstrikehit;
        }
        else if sprite_index = spr_mariobhandstrikehit
            sprite_index = spr_mariobhandstrikehit
    
        //Hits enemy
        if sprite_index = spr_mariobhandstrikestart &amp;&amp; targetid.hurt = 0 &amp;&amp; held = 2 //Good Hit
        {
            image_index = 12;
            global.hitrank = 1; //Good Hit
            sprite_index = spr_mariobhandstrikehit;
            effect_create_above(ef_explosion,x+18,y-18,0.1,c_yellow);
            effect_create_above(ef_explosion,x+18,y-18,0.1,c_red);
            event_user(2);
            if !audio_is_playing(snd_miss) &amp;&amp; targetid.floating = 1
                audio_play_sound(snd_miss,0,0);
            else if !audio_is_playing(snd_strike) &amp;&amp; targetid.floating = 0
                audio_play_sound(snd_strike,0,0);
        }
        else if sprite_index = spr_mariobhandstrikestart &amp;&amp; targetid.hurt = 0 &amp;&amp; held = 3 //Great Hit
        {
            image_index = 12;
            global.hitrank = 2; //Great Hit
            sprite_index = spr_mariobhandstrikehit;
            effect_create_above(ef_explosion,x+18,y-18,0.1,c_yellow);
            effect_create_above(ef_explosion,x+18,y-18,0.1,c_red);
            event_user(2);
            if !audio_is_playing(snd_miss) &amp;&amp; targetid.floating = 1
                audio_play_sound(snd_miss,0,0);
            else if !audio_is_playing(snd_strike) &amp;&amp; targetid.floating = 0
                audio_play_sound(snd_strike,0,0);
        }
        else if sprite_index = spr_mariobhandstrikestart &amp;&amp; held = 4 //Excellent Hit
        {
            global.hitrank = 3; //Excellent Hit
            event_user(2);
            sprite_index = spr_mariobhandstrikehit
            effect_create_above(ef_explosion,x+18,y-18,0.15,c_yellow);
            effect_create_above(ef_explosion,x+18,y-18,0.1,c_red);
            if !audio_is_playing(snd_miss) &amp;&amp; targetid.floating = 1
                audio_play_sound(snd_miss,0,0);
            else if !audio_is_playing(snd_strike) &amp;&amp; targetid.firebrand = 0
                audio_play_sound(snd_strike,0,0);
            if !audio_is_playing(snd_luckyhit) &amp;&amp; targetid.firebrand = 1 &amp;&amp; targetid.floating = 0
            {
                global.criticalhit = true;
                audio_play_sound(snd_luckyhit,0,0);
            }
        }
        else if sprite_index = spr_mariobhandstrikefail &amp;&amp; image_index &lt; 2 &amp;&amp; targetid.hurt = 0 //Ok Hit
        {
            effect_create_above(ef_explosion,x+18,y-18,0.15,c_gray);
            global.hitrank = 0; //Ok Hit
            if targetid.floating = 0
                audio_play_sound(snd_explosion,0,0);
            else if targetid.floating = 1
                audio_play_sound(snd_miss,0,0);
            event_user(2);
        }
    }
}

//Perform Bros Attack
if moveto = 5
    event_user(7);

//Take out Item
if moveto = 6
    sprite_index = spr_mariobtakeout;

//Toss Item
if moveto = 7
    sprite_index = spr_mariobthrowup;

//Consume Item
if moveto = 8
    sprite_index = spr_mariobswallow;
    
//Healing from Item
if moveto = 9
{
    /*IF POISONED
    sprite_index = spr_mariobheal2;
    else*/
    sprite_index = spr_mariobheal;
}
    
//Toss Item to Luigi
if moveto = 10
    sprite_index = spr_mariobthrow;

//Pick up Luigi
if moveto = 11
{
    if battleblock = 2 &amp;&amp; global.Ldead = 1 &amp;&amp; movechoose = 1 //Run from Battle
    {
        if y = stancey+64
        {
            obj_luigib.visible = false;
            sprite_index = spr_mariopickupluigi; //Pick up Luigi
        }
        else
        {
            stance = 0;
            sprite_index = spr_mariochoosejump;
            depth = -y-1;
            mp_linear_step(stancex-12,stancey+64,4,0);
        }
    }
    else if battleblock &lt;&gt; 2 &amp;&amp; global.Ldead = 1 //Ready for enemy attack
    {
        if y = stancey+64
        {
            obj_luigib.visible = false;
            sprite_index = spr_mariopickupluigi; //Pick up Luigi
        }
        else
        {
            stance = 0;
            sprite_index = spr_mariochoosejump;
            depth = -y-1;
            mp_linear_step(stancex-12,stancey+64,4,0);
        }
    }
}

//Return to start position
if x = stancex &amp;&amp; y = stancey &amp;&amp; ground = 1
{
    if sprite_index = spr_mariobwalkingback
        sprite_index = spr_stance1;
    control = 1;
}

//Run Away
if battleblock = 2 &amp;&amp; phase = 0.25 //About to run
{
    if global.Ldead = 0
    {
        phase = -3;
        global.turn = 0;
        sprite_index = spr_mariobwalkingback;
        obj_luigib.sprite_index = spr_luigibwalkingback;
    }
}
if battleblock = 2 &amp;&amp; phase = -3 //Run off screen
{
    if global.Ldead = 0
    {
        stance = 6;
        with obj_luigib stance = 6;
        mp_linear_step(stancex-128,stancey,2,0);
        with obj_luigib mp_linear_step(stancex-128,stancey,2,0);
    }
    else if global.Ldead = 1
        mp_linear_step(-128,y,2,0);
}

//Changes turn to Luigi's turn or enemy's
if phase = 0.5 &amp;&amp; x = stancex &amp;&amp; y = stancey
{
    instance_create(global.posx,global.posy-16,obj_totaldamage);
    global.posx = 0;
    global.posy = 0;
    repeataction = 0;
}
if phase = 4 &amp;&amp; x = stancex &amp;&amp; y = stancey &amp;&amp; !instance_exists(obj_totaldamage)
&amp;&amp; global.turn &gt; -1
{
    if global.strike = 0
    {
        global.hitrank = 0;
        turnnext = 0;
        if obj_luigib.turnnext = 1
        {
            obj_luigib.phase = 1;
            global.turn = 1;
        }
        else
        {
            obj_luigib.turnnext = 1;
            if global.Ldead &gt; 0
                moveto = 11;
        }
    }
    else if global.strike &gt; 0
        with obj_battlecontrol event_user(8);
    if instance_exists(targetid)
        if targetid.hurt = -1
            targetid.hurt = 0;
}
if phase = 6 &amp;&amp; x = stancex &amp;&amp; y = stancey &amp;&amp; obj_luigib.x = obj_luigib.stancex
&amp;&amp; obj_luigib.y = obj_luigib.stancey &amp;&amp; global.turn &gt; -1
{
    if global.strike = 0
    {
        global.hitrank = 0;
        turnnext = 0;
        if obj_luigib.turnnext = 1
        {
            obj_luigib.phase = 1;
            global.turn = 1;
        }
        else
        {
            obj_luigib.turnnext = 1;
            if global.Ldead &gt; 0
                moveto = 11;
        }
    }
    else if global.strike &gt; 0
        with obj_battlecontrol event_user(8);
}

//Stances
if ground = 1 &amp;&amp; hurt = 0
{
    if stance = 0 //No stance
    {}
    if stance = 1 &amp;&amp; stancex = x &amp;&amp; stancey = y //Idle stance
    {
        image_speed = 0.275;
        mask_index = spr_mask;
        sprite_index = spr_stance1;
    }
    if stance = 2 //Idle Battle Block stance
    {
        image_speed = 0.275;
        global.takedamage = 0;
        mask_index = spr_mask;
        sprite_index = spr_stance2;
    }
    if stance = 3 //Jump guard
    {
        image_speed = 0.275;
        mask_index = spr_mask;
        /*if global.Ldead &gt; 0
            sprite_index = spr_stance3b;
        else*/
            sprite_index = spr_stance3;
    }
    if stance = 4 //Hammer guard
    {
        if hammeringdodge = 1 &amp;&amp; hammerdodgewait = 1 &amp;&amp; hammering = 0 &amp;&amp; hammerdodgego = 0 &amp;&amp; held = 2 &amp;&amp; hurt = 0
        {
            image_speed = 0.4;
            mask_index = spr_mask_hammer;
            sprite_index = spr_mariobhammerhit;
        }
        else if control = 1 &amp;&amp; hammering = 0
        {
            image_speed = 0.275;
            mask_index = spr_mask;
            /*if global.Ldead &gt; 0
                sprite_index = spr_stance4b;
            else*/
                sprite_index = spr_stance4;
        }
    }
    if stance = 5 //Ducking
    {
        image_speed = 0.275;
        mask_index = spr_mask;
        sprite_index = spr_stance5;
    }
    if stance = 6 //Running away
    {
        image_speed = 0.275;
        if global.Ldead = 1 &amp;&amp; phase = -3
            sprite_index = spr_mariobwalkingbackluigi;
        else
            sprite_index = spr_mariobwalkingback;
    }
    if stance = 7 //Victory
    {
        control = 0;
        sprite_index = spr_mariobwinspin;
    }
    if stance = 8 //Victory pose jump
    {
        control = 0;
        sprite_index = spr_mariobwinspin_jump;
    }
    if stance = 9 //Victory pose hammer
    {
        control = 0;
        sprite_index = spr_mariobwinspin_hammer;
    }
    if stance = 10 //Victory pose hand
    {
        control = 0;
        sprite_index = spr_mariobwinspin_hand;
    }
    if stance = 11 //Level Up
    {
        control = 0;
        sprite_index = spr_mariobwin;
    }
    if stance = 12 //Level Up Pose
    {
        control = 0;
        sprite_index = spr_mariobwinlevelup;
    }
    if stance = 13 //Level Up Pose
    {
        control = 0;
        if image_index &gt;= 10
            image_single = 10;
        sprite_index = spr_mariobwinlevelup2;
    }
    if stance = 14 &amp;&amp; reaction = 0 &amp;&amp; obj_luigib.sprite_index = spr_luigidead //Panic Pose
    {
        control = 0;
        if !audio_is_playing(snd_mario_cry_for_luigi) &amp;&amp; phase &lt;&gt; 0.15
        {
            phase = 0.15;
            audio_play_sound(snd_mario_cry_for_luigi,0,0);
        }
        sprite_index = spr_mariopanic;
    }    
    if stance = 15 &amp;&amp; instance_exists(obj_brosattack) //Green Shells
    {
        if sprite_index = spr_mariobgreenshellkick
            stance = 16;
        else if obj_brosattack.phase &lt;&gt; 4
            sprite_index = spr_mariobgreenshellstance;
        else if obj_brosattack.phase = 4
            sprite_index = spr_mariobgreenshellstance2;
    }
    if stance = 16 &amp;&amp; instance_exists(obj_brosattack) //Green Shells Idle
    {}
    if stance = 17 //Green Shells Failed
        sprite_index = spr_mariobgreenshellfall;
    if stance = 18 //Fire Flowers
    {
        if sprite_index = spr_mariobfireflowerstance
            stance = 19;
        else if obj_brosattack.phase &lt;&gt; 1
            sprite_index = spr_mariobfireflowerstance;
        else if obj_brosattack.phase = 1
            sprite_index = spr_mariobfireflowerstance;
    }
    if stance = 19 &amp;&amp; instance_exists(obj_brosattack) //Fire Flowers Idle
    {}
}

if ground = 0 &amp;&amp; hurt = 0
{
    if zspeed &gt; 0 &amp;&amp; repeataction = 0 &amp;&amp; phase = 4
    {
        sprite_index = spr_mariobjumpup;
        with obj_battlecontrol event_user(1);
    }
    else if zspeed &gt; 0 &amp;&amp; repeataction = 0
        sprite_index = spr_mariobjumpdown1;
    if zspeed &gt; 0 &amp;&amp; repeataction = 1   
        sprite_index = spr_mariobjumpland1;
    if zspeed &lt;= 15 &amp;&amp; repeataction = 0 &amp;&amp; phase = 4
        sprite_index = spr_mariobjumpdown1;
    else if zspeed &lt;= 15 &amp;&amp; repeataction = 0
        sprite_index = spr_mariobjumpup;
    if z &lt; 15
        sprite_index = spr_mariobjumpland2;
    if moveto = 0 &amp;&amp; phase = 4 or phase = 0.5 &amp;&amp; global.totaldamage &gt; 0
    {
        sprite_index = spr_mariobwalkingback;
        phase = 0.5;
    }
}
if phase = 1
{
    global.damage = 0;
    global.totaldamage = 0;
    global.luck = 0;
    global.lucky = 0;
    turnnext = 0;
    mask_index = spr_mask;
    obj_luigib.glitchfix = false;
    stance = 2;
}
if phase = 2 &amp;&amp; (!moveto = 5.1 &amp;&amp; !moveto = 5.2)
    stance = 1;

//Sets what items will appear (you might need to change this if you add more moves or items)
itemdifmax = 0
if global.mushrooms &gt; 0
    itemdifmax += 1;
if global.supermushrooms &gt; 0
    itemdifmax += 1;
if global.ultramushrooms &gt; 0
    itemdifmax += 1;
if global.maxmushrooms &gt; 0
    itemdifmax += 1;
if global.nuts &gt; 0
    itemdifmax += 1;
if global.supernuts &gt; 0
    itemdifmax += 1;
if global.ultranuts &gt; 0
    itemdifmax += 1;
if global.maxnuts &gt; 0
    itemdifmax += 1;
if global.starcandies &gt; 0
    itemdifmax += 1;
if global.syrups &gt; 0
    itemdifmax += 1;
if global.supersyrups &gt; 0
    itemdifmax += 1;
if global.ultrasyrups &gt; 0
    itemdifmax += 1;
if global.maxsyrups &gt; 0
    itemdifmax += 1;
if global.oneups &gt; 0
    itemdifmax += 1;
if global.oneupsupers &gt; 0
    itemdifmax += 1;
if global.herbs &gt; 0
    itemdifmax += 1;
if global.redpeppers &gt; 0
    itemdifmax += 1;
if global.greenpeppers &gt; 0
    itemdifmax += 1;
if global.boobiscuits &gt; 0
    itemdifmax += 1;
if global.retryclocks &gt; 0
    itemdifmax += 1;
    
//Sets what bros attacks are available
brositemdifmax = global.brosattacks;
    
//Sets what bros attacks will appear in the bros attacks menu

if movechoose &lt;= 0
{
    if battleblock = 0 //Solo
        movechoose = solonum;
    /*if battleblock = 1 //Bros
        movechoose = brosnum;*/
    if battleblock = 2 //Run
        movechoose = runnum;
}
if battleblock = 0 //Solo
{
    if movechoose &gt; solonum 
        movechoose = 1;
}
if battleblock = 1 &amp;&amp; phase = 2 //Bros
{
    if movechoose &gt; drawat
        movechoose = 1;
    else if movechoose &lt; 1
        movechoose = drawat;
}
if battleblock = 2 //Run
{
    if movechoose &gt; runnum
        movechoose = 1;
}

//Part of jumping to hit the block
if jumpchoosego = 1
    jumpchoosewait += -1;
if jumpchoosewait &lt;= -1 &amp;&amp; moveto &lt;&gt; 11
{
    zspeed = -10;
    jumpchoosego = 0;
    jumpchoosewait = 2;
    phase = 2;
    //Return if no items are currently in your inventory
    if battleblock = 3 &amp;&amp; itemdifmax = 0
    {
        audio_play_sound(snd_incorrect,0,0);
        phase = 1;
        z = 0;
    }
    //Return if no bros attacks are available
    else if battleblock = 1 &amp;&amp; brositemdifmax = 0
    {
        audio_play_sound(snd_incorrect,0,0);
        phase = 1;
        z = 0;
    }
    //Return if the run block is disabled
    else if battleblock = 2 &amp;&amp; global.runaway = 0
    {
        audio_play_sound(snd_incorrect,0,0);
        phase = 1;
        z = 0;
    }
    else
    {
        if battleblock = 3 &amp;&amp; phase = 2 //Items
        {
            //Display List
            ds_list_clear(itemlist);
            ds_list_clear(itemamount);
            if global.mushrooms &gt; 0
            {
                ds_list_add(itemlist, "Mushrooms");
                ds_list_add(itemamount, string(global.mushrooms));
            }
            if global.supermushrooms &gt; 0
            {
                ds_list_add(itemlist, "Super Mushrooms");
                ds_list_add(itemamount, string(global.supermushrooms));
            }
            if global.ultramushrooms &gt; 0
            {
                ds_list_add(itemlist, "Ultra Mushrooms");
                ds_list_add(itemamount, string(global.ultramushrooms));
            }
            if global.maxmushrooms &gt; 0
            {
                ds_list_add(itemlist, "Max Mushrooms");
                ds_list_add(itemamount, string(global.maxmushrooms));
            }
            if global.nuts &gt; 0
            {
                ds_list_add(itemlist, "Nuts");
                ds_list_add(itemamount, string(global.nuts));
            }
            if global.supernuts &gt; 0
            {
                ds_list_add(itemlist, "Super Nuts");
                ds_list_add(itemamount, string(global.supernuts));
            }
            if global.ultranuts &gt; 0
            {
                ds_list_add(itemlist, "Ultra Nuts");
                //ds_list_add(itemamount, string(global.ultranuts));
            }
            if global.maxnuts &gt; 0
            {
                ds_list_add(itemlist, "Max Nuts");
                //ds_list_add(itemamount, string(global.maxnuts));
            }
            if global.starcandies &gt; 0
            {
                ds_list_add(itemlist, "Star Candies");
                //ds_list_add(itemamount, string(global.starcandies));
            }
            if global.syrups &gt; 0
            {
                ds_list_add(itemlist, "Syrups");
                //ds_list_add(itemamount, string(global.syrups));
            }
            if global.supersyrups &gt; 0
            {
                ds_list_add(itemlist, "Super Syrups");
                //ds_list_add(itemamount, string(global.supersyrups));
            }
            if global.ultrasyrups &gt; 0
            {
                ds_list_add(itemlist, "Ultra Syrups");
                //ds_list_add(itemamount, string(global.ultrasyrups));
            }
            if global.maxsyrups &gt; 0
            {
                ds_list_add(itemlist, "Max Syrups");
                //ds_list_add(itemamount, string(global.maxsyrups));
            }
            if global.oneups &gt; 0
            {
                ds_list_add(itemlist, "1-Up Mushrooms");
                //ds_list_add(itemamount, string(global.oneups));
            }
            if global.oneupsupers &gt; 0
            {
                ds_list_add(itemlist, "1-Up Supers");
                //ds_list_add(itemamount, string(global.oneupsupers));
            }
            if global.herbs &gt; 0
            {
                ds_list_add(itemlist, "Refreshing Herbs");
                //ds_list_add(itemamount, string(global.herbs));
            }
            if global.redpeppers &gt; 0
            {
                ds_list_add(itemlist, "Red Peppers");
                //ds_list_add(itemamount, string(global.redpeppers));
            }
            if global.greenpeppers &gt; 0
            {
                ds_list_add(itemlist, "Green Peppers");
                //ds_list_add(itemamount, string(global.greenpeppers));
            }
            if global.boobiscuits &gt; 0
            {
                ds_list_add(itemlist, "Boo Biscuits");
                //ds_list_add(itemamount, string(global.boobiscuits));
            }
            if global.retryclocks &gt; 0
            {
                ds_list_add(itemlist, "Retry Clocks");
                //ds_list_add(itemamount, string(global.retryclocks));
            }
        }
        audio_play_sound(snd_confirm,0,0);
    }
}

//Jump dodge timing
if jumpdodgego = 1
    jumpdodgewait += -1;
if jumpdodgewait &lt;= -1
{
    zspeed = -10;
    jumpdodgego = 0;
    jumpdodgewait = 8;
}

//Hammer dodge timing
if phase = -2 &amp;&amp; hammerdodgewait = 0 &amp;&amp; hammering = 0 &amp;&amp; hammerdodgego = 1
{
    if !audio_is_playing(snd_hammer)
        audio_play_sound(snd_hammer,0,0);
    hammeringdodge = 1;
    hammerdodgewait = 1;
    hammering = 0;
    hammerdodgego = 0;
}

if phase = 3
{
    if battleblock = 2 //Run
    {}
    else
    {
        if targetchoose = 0
            stance = 2;
        if !targetchoose = 0 &amp;&amp; battleblock &lt;&gt; 3 //Choose enemy
        {
            stance = 1 ;
            targetidaboutto = obj_battlecontrol.enemyid[targetchoose];
        }
        if !targetchoose = 0 &amp;&amp; battleblock = 3 //Choose brother
        {
            stance = 1 ;
            targetidaboutto = obj_battlecontrol.broid[targetchoose];
        }
    }
}

if global.turn = 1 &amp;&amp; phase != 5
    phase = 0;
if phase = 0 &amp;&amp; (!moveto = 5.1 &amp;&amp; !moveto = 5.2)
    stance = 1;
if global.turn = 2
{
    if stance = 3
        phase = -1; //Jump dodge stance
    if stance = 4
        phase = -2; //Hammer dodge stance
}

//Max HP &amp; BP
if global.MHP &gt; global.maxMHP
    global.MHP = global.maxMHP;
if global.MBP &gt; global.maxMBP
    global.MBP = global.maxMBP;

//Win
if !instance_exists(obj_battlecontrol)
{
    global.stunned = true; //This could be the variable to avoid encountering same enemy in Overworld
    global.outcome = 1;
    global.runaway = 1;
    room = global.roomin;
}

//Lose
if global.Mdead = -0.25 &amp;&amp; x = stancex &amp;&amp; y = stancey
    global.Mdead = 0.5;
if global.Mdead = 0.5
{
    if !audio_is_playing(snd_mario_mamamia)
        audio_play_sound(snd_mario_mamamia,0,0);
    sprite_index = spr_mariodie;
    with obj_luigib phase = 0.25;
}
if global.Mdead = 1 &amp;&amp; sprite_index = spr_mariodie
{
    hurt = 2;
    sprite_index = spr_mariodead;
}

//Game Over
if global.Mdead = 1 &amp;&amp; global.Ldead = 1 &amp;&amp; hurt = 2 &amp;&amp; obj_luigib.hurt = 2
{
    hurt = 0;
    stance = -1;
    obj_luigib.stance = -1;
    with obj_battlecontrol event_user(2);
}


/*Move Battle Blocks Smoothly
if battleblock = 0
{
    //Jump Block
    obj_jumpblock.x = lerp(obj_jumpblock.x,x_block[1],lerp_speed);
    obj_jumpblock.originally = lerp(obj_jumpblock.originally,y_block[1],lerp_speed);
    obj_brosblock.x = lerp(obj_brosblock.x,x_block[2],lerp_speed);
    obj_brosblock.originally = lerp(obj_brosblock.originally,y_block[2],lerp_speed);
    obj_runblock.x = lerp(obj_runblock.x,x_block[3],lerp_speed);
    obj_runblock.originally = lerp(obj_runblock.originally,y_block[3],lerp_speed);
    obj_itemblock.x = lerp(obj_itemblock.x,x_block[4],lerp_speed);
    obj_itemblock.originally = lerp(obj_itemblock.originally,y_block[4],lerp_speed);
    obj_itemblock.depth = 0;
    obj_runblock.depth = 2;
    obj_brosblock.depth = 0;
    obj_jumpblock.depth = -1;
}
else if battleblock = 1
{
    //down - 1
    //right - 2
    //up - 3
    //left - 4
    //Bros Block
    obj_jumpblock.x = lerp(obj_jumpblock.x,x_block[4],lerp_speed);
    obj_jumpblock.originally = lerp(obj_jumpblock.originally,y_block[4],lerp_speed);
    obj_brosblock.x = lerp(obj_brosblock.x,x_block[1],lerp_speed);
    obj_brosblock.originally = lerp(obj_brosblock.originally,y_block[1],lerp_speed);
    obj_runblock.x = lerp(obj_runblock.x,x_block[2],lerp_speed);
    obj_runblock.originally = lerp(obj_runblock.originally,y_block[2],lerp_speed);
    obj_itemblock.x = lerp(obj_itemblock.x,x_block[3],lerp_speed);
    obj_itemblock.originally = lerp(obj_itemblock.originally,y_block[3],lerp_speed);
    obj_itemblock.depth = 2;
    obj_runblock.depth = 0;
    obj_brosblock.depth = -1;
    obj_jumpblock.depth = 0;
}
else if battleblock = 2
{
    //down - 1
    //right - 2
    //up - 3
    //left - 4
    //Run Block
    obj_jumpblock.x = lerp(obj_jumpblock.x,x_block[3],lerp_speed);
    obj_jumpblock.originally = lerp(obj_jumpblock.originally,y_block[3],lerp_speed);
    obj_brosblock.x = lerp(obj_brosblock.x,x_block[4],lerp_speed);
    obj_brosblock.originally = lerp(obj_brosblock.originally,y_block[4],lerp_speed);
    obj_runblock.x = lerp(obj_runblock.x,x_block[1],lerp_speed);
    obj_runblock.originally = lerp(obj_runblock.originally,y_block[1],lerp_speed);
    obj_itemblock.x = lerp(obj_itemblock.x,x_block[2],lerp_speed);
    obj_itemblock.originally = lerp(obj_itemblock.originally,y_block[2],lerp_speed);
    obj_itemblock.depth = 0;
    obj_runblock.depth = -1;
    obj_brosblock.depth = 0;
    obj_jumpblock.depth = 2;
}
else if battleblock = 3
{
    //Item Block
    obj_jumpblock.x = lerp(obj_jumpblock.x,x_block[2],lerp_speed);
    obj_jumpblock.originally = lerp(obj_jumpblock.originally,y_block[2],lerp_speed);
    obj_brosblock.x = lerp(obj_brosblock.x,x_block[3],lerp_speed);
    obj_brosblock.originally = lerp(obj_brosblock.originally,y_block[3],lerp_speed);
    obj_runblock.x = lerp(obj_runblock.x,x_block[4],lerp_speed);
    obj_runblock.originally = lerp(obj_runblock.originally,y_block[4],lerp_speed);
    obj_itemblock.x = lerp(obj_itemblock.x,x_block[1],lerp_speed);
    obj_itemblock.originally = lerp(obj_itemblock.originally,y_block[1],lerp_speed);
    obj_itemblock.depth = -1;
    obj_runblock.depth = 0;
    obj_brosblock.depth = 2;
    obj_jumpblock.depth = 0;
}
if global.turn = 1 or phase &gt;= 2
{
    obj_jumpblock.x = lerp(obj_jumpblock.x,x_block[0],lerp_speed);
    obj_jumpblock.originally = lerp(obj_jumpblock.originally,y_block[0],lerp_speed);
    obj_brosblock.x = lerp(obj_brosblock.x,x_block[0],lerp_speed);
    obj_brosblock.originally = lerp(obj_brosblock.originally,y_block[0],lerp_speed);
    obj_runblock.x = lerp(obj_runblock.x,x_block[0],lerp_speed);
    obj_runblock.originally = lerp(obj_runblock.originally,y_block[0],lerp_speed);
    obj_itemblock.x = lerp(obj_itemblock.x,x_block[0],lerp_speed);
    obj_itemblock.originally = lerp(obj_itemblock.originally,y_block[0],lerp_speed);
    obj_mariob.sprite_index = spr_stance1;
    //Make blocks disappear smoothly
    obj_jumpblock.image_alpha = lerp(obj_jumpblock.image_alpha,0,0.1);
    obj_brosblock.image_alpha = lerp(obj_brosblock.image_alpha,0,0.1);
    obj_runblock.image_alpha = lerp(obj_runblock.image_alpha,0,0.1);
    obj_itemblock.image_alpha = lerp(obj_itemblock.image_alpha,0,0.1);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_brosattack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.attacknum = 0 &amp;&amp; sprite_index = spr_mariobgreenshellkick //Green Shells Attack
{ 
    switch (global.turn)
    {
        case 0:
            if !instance_exists(obj_battlecontrol.enemyid[targetchoose])
            {
                do
                {
                    targetchoose += 1;
                    if targetchoose &gt; 5
                        targetchoose = 0;
                }
                until (instance_exists(obj_battlecontrol.enemyid[targetchoose]) or targetchoose = 0);
    
                if targetchoose = 0
                {
                    if instance_exists(obj_battlecontrol.enemyid[5])
                        targetchoose = 5;
                    else if instance_exists(obj_battlecontrol.enemyid[4])
                        targetchoose = 4;
                    else if instance_exists(obj_battlecontrol.enemyid[3])
                        targetchoose = 3;
                    else if instance_exists(obj_battlecontrol.enemyid[2])
                        targetchoose = 2;
                    else if instance_exists(obj_battlecontrol.enemyid[1])
                        targetchoose = 1;
                }
                
                targetx = obj_battlecontrol.enemyid[targetchoose].x;  
                targety = obj_battlecontrol.enemyid[targetchoose].y;
            }            
            break;
        case 1:
            if !instance_exists(obj_battlecontrol.enemyid[obj_luigib.targetchoose])
            {
                do
                {
                    obj_luigib.targetchoose += 1;
                    if obj_luigib.targetchoose &gt; 5
                        obj_luigib.targetchoose = 0;
                }
                until (instance_exists(obj_battlecontrol.enemyid[obj_luigib.targetchoose]) or obj_luigib.targetchoose = 0);

                if obj_luigib.targetchoose = 0
                {
                    if instance_exists(obj_battlecontrol.enemyid[5])
                        obj_luigib.targetchoose = 5;
                    else if instance_exists(obj_battlecontrol.enemyid[4])
                        obj_luigib.targetchoose = 4;
                    else if instance_exists(obj_battlecontrol.enemyid[3])
                        obj_luigib.targetchoose = 3;
                    else if instance_exists(obj_battlecontrol.enemyid[2])
                        obj_luigib.targetchoose = 2;
                    else if instance_exists(obj_battlecontrol.enemyid[1])
                        obj_luigib.targetchoose = 1;
                }                
                                
                obj_luigib.targetx = obj_battlecontrol.enemyid[obj_luigib.targetchoose].x;  
                obj_luigib.targety = obj_battlecontrol.enemyid[obj_luigib.targetchoose].y;
            }            
            break;            
    }
    
    audio_play_sound(snd_kick,0,0);
    other.phase = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyallspikedb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Damage all enemies
if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0
{
    hurt = 1;
    global.takedamage = 1; //Mario takes damage
    damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
    global.MHP += damage;
    global.damage = -damage; //Damage dealt
    if global.MHP &lt;= 0
        global.Mdead = -0.25;
    audio_play_sound(snd_takedamage,0,0);
    zspeed = 7;
    if !instance_exists(obj_rankbattle)
        instance_create(x-48,y-48,obj_rankbattle);
    if !instance_exists(obj_pointsbattle) &amp;&amp; repeataction = 0
    {
        instance_create(x,y,obj_pointsbattle);
        with obj_rankbattle image_single = 4; //Too Bad
        sprite_index = spr_mhurt;
    }
    x-= 12;
    y+= 8;
    speed = 0.001;
    moveto = -1;
    alarm[1] = 30;
    repeataction = 0;
    global.posx = x;
    global.posy = y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyallb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Damage all enemies
if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0
{
    //Hit all enemies with Jump
    if held = 1
    {
        held = 0;
        zspeed = 7;
        //Hurt all enemies at once
        if obj_battlecontrol.enemyid[1] &gt; 0
            obj_battlecontrol.enemyid[1].hurt = 1;
        if obj_battlecontrol.enemyid[2] &gt; 0
            obj_battlecontrol.enemyid[2].hurt = 1;
        if obj_battlecontrol.enemyid[3] &gt; 0
            obj_battlecontrol.enemyid[3].hurt = 1;
        if obj_battlecontrol.enemyid[4] &gt; 0
            obj_battlecontrol.enemyid[4].hurt = 1;
        if obj_battlecontrol.enemyid[5] &gt; 0
            obj_battlecontrol.enemyid[5].hurt = 1;
        event_user(5); //Determine luck
        global.damage = round(global.Mpow - other.def/100); //Takes Mario's pow for damage
        if global.luckyhit = true //Lucky Hit
        {
            audio_play_sound(snd_luckyhit,0,0);
            if obj_battlecontrol.enemyid[1] &gt; 0
                obj_battlecontrol.enemyid[1].hurt = 1;
            if obj_battlecontrol.enemyid[2] &gt; 0
                obj_battlecontrol.enemyid[2].hurt = 1;
            if obj_battlecontrol.enemyid[3] &gt; 0
                obj_battlecontrol.enemyid[3].hurt = 1;
            if obj_battlecontrol.enemyid[4] &gt; 0
                obj_battlecontrol.enemyid[4].hurt = 1;
            if obj_battlecontrol.enemyid[5] &gt; 0
                obj_battlecontrol.enemyid[5].hurt = 1;
            global.damage+= global.Mlvl; //Adds certain damage based on what level Mario is
            if obj_battlecontrol.enemyid[1] &gt; 0
            {
                obj_battlecontrol.enemyid[1].hp += -global.damage;
                obj_battlecontrol.enemyid[1] = instance_create(x,y,obj_pointsbattle);
            }
            if obj_battlecontrol.enemyid[2] &gt; 0
            {
                obj_battlecontrol.enemyid[2].hp += -global.damage;
                obj_battlecontrol.enemyid[2] = instance_create(x,y,obj_pointsbattle);
            }
            if obj_battlecontrol.enemyid[3] &gt; 0
            {
                obj_battlecontrol.enemyid[3].hp += -global.damage;
                obj_battlecontrol.enemyid[3] = instance_create(x,y,obj_pointsbattle);
            }
            if obj_battlecontrol.enemyid[4] &gt; 0
            {
                obj_battlecontrol.enemyid[4].hp += -global.damage;
                obj_battlecontrol.enemyid[4] = instance_create(x,y,obj_pointsbattle);
            }
            if obj_battlecontrol.enemyid[5] &gt; 0
            {
                obj_battlecontrol.enemyid[5].hp += -global.damage;
                obj_battlecontrol.enemyid[5] = instance_create(x,y,obj_pointsbattle);
            }
            with obj_pointsbattle reappear = 1;
        }
        else
        {
            if obj_battlecontrol.enemyid[1] &gt; 0
                obj_battlecontrol.enemyid[1].hp += -global.damage;
            if obj_battlecontrol.enemyid[2] &gt; 0
                obj_battlecontrol.enemyid[2].hp += -global.damage;
            if obj_battlecontrol.enemyid[3] &gt; 0
                obj_battlecontrol.enemyid[3].hp += -global.damage;
            if obj_battlecontrol.enemyid[4] &gt; 0
                obj_battlecontrol.enemyid[4].hp += -global.damage;
            if obj_battlecontrol.enemyid[5] &gt; 0
                obj_battlecontrol.enemyid[5].hp += -global.damage;
        }
        if instance_exists(obj_rankbattle)
            with obj_rankbattle instance_destroy();
        instance_create(x-48,y-48,obj_rankbattle);
        if repeataction = 1
        {
            audio_play_sound(snd_hit,0,0);
            audio_play_sound(snd_excellenthit,0,0);
            with obj_rankbattle image_single = 3; //Excellent Hit
            global.hitrank = 3;
            background_visible[7] = true; //Show Excellent Effect
            alarm[3] = 20;
            moveto = 0;
            global.totaldamage+= global.damage;
            repeataction = 0;
        }
        else
        {
            audio_play_sound(snd_hit,0,0);
            audio_play_sound(snd_goodhit,0,0);
            with obj_rankbattle image_single = 1; //Good Hit
            global.hitrank = 1;
            zspeed = 15;
            moveto = 1;
            global.totaldamage+= global.damage;
            repeataction = 1;
            with obj_battlecontrol event_user(1); //Another chance to land a lucky hit
        }
        if obj_rankbattle.image_single = 2 or obj_rankbattle.image_single = 3
        { 
            instance_create(x,y,obj_pointsbattle);
            obj_pointsbattle.totaldamage = 1;
        }
        else
            instance_create(x,y,obj_pointsbattle);
    }
    else
    {
        zspeed = 7;
        other.hurt = 1;
        event_user(5); //Determine luck
        global.damage = round(global.Mpow/2 - other.def/100); //Takes Mario's pow for damage
        other.hp += -global.damage; //Deals the damage based on Mario's pow
        if !instance_exists(obj_rankbattle)
            instance_create(x-48,y-48,obj_rankbattle);
        if !instance_exists(obj_pointsbattle) &amp;&amp; repeataction = 0
        {
            instance_create(x,y,obj_pointsbattle);
            with obj_rankbattle image_single = 0; //Ok Hit
            global.hitrank = 0;
            global.totaldamage+= global.damage;
            sprite_index = spr_mhurt;
        }
        else if repeataction = 1
        {
            with obj_rankbattle instance_destroy();
            instance_create(x-48,y-48,obj_rankbattle);
            instance_create(x,y,obj_pointsbattle);
            with obj_rankbattle image_single = 2; //Great Hit
            global.hitrank = 2;
            obj_pointsbattle.totaldamage = 1;
            global.totaldamage+= global.damage;
            sprite_index = spr_mariobwalkingback;
        }
        if sprite_index = spr_mhurt
        {
            x-= 12;
            y+= 8;
            speed = 0.001;
            moveto = -1;
            alarm[1] = 30;
        }
        else
        {
            moveto =  0;
            audio_play_sound(snd_hit,0,0);
        }
        repeataction = 0;
    }
    global.posx = x;
    global.posy = y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemysky">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Figure out how to make jumping on floating enemies work
if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0 &amp;&amp; obj_battlecontrol.enemyid[targetchoose] = other
    event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemyspikedground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0 &amp;&amp; obj_battlecontrol.enemyid[targetchoose] = other
{   
    hurt = 1;
    global.takedamage = 1; //Mario takes damage
    damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
    global.MHP += damage;
    global.damage = -damage; //Damage dealt
    if global.MHP &lt;= 0
        global.Mdead = -0.25;
    audio_play_sound(snd_takedamage,0,0);
    zspeed = 7;
    if !instance_exists(obj_rankbattle)
        instance_create(x-48,y-48,obj_rankbattle);
    if !instance_exists(obj_pointsbattle) &amp;&amp; repeataction = 0
    {
        instance_create(x,y,obj_pointsbattle);
        with obj_rankbattle image_single = 4; //Too Bad
        sprite_index = spr_mhurt;
    }
    x-= 12;
    y+= 8;
    speed = 0.001;
    moveto = -1;
    alarm[1] = 30;
    repeataction = 0;
    global.posx = x;
    global.posy = y;
}

if phase = -1 &amp;&amp; other.dead = 0 //Jump counterattack
{
    if z &lt;= other.headz
    {
        //Attacked
        if other.headz - z &gt; 5 &amp;&amp; hurt = 0
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        //Counterattack
        else if other.headz - z &lt;= 5
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
    }
}

if phase = -2 &amp;&amp; other.dead = 0 //Hammer counterattack
{
        //Counterattack
        if sprite_index = spr_mariobhammerhit &amp;&amp; image_index &gt; 2 &amp;&amp; other.x-12 &gt;= x &amp;&amp; other.hurt = 0
        {
            global.hurt = 1;
            other.hurt = 1;
            instance_create(other.xstart,other.ystart,obj_pointsbattle);
            damage = round(other.hp * other.def/100 - global.Mpow); //Enemy HP * Enemy defense/100 - Mario's POW
            if damage &gt;= 0
                damage = -1;
            other.hp += damage;
            global.damage = -damage; //Damage dealt
            audio_play_sound(snd_strike,0,0);
        }
        //Attacked
        else if hurt = 0
        {
            sprite_index = spr_mhurt;
            image_speed = 0.275;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemyground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0 &amp;&amp; obj_battlecontrol.enemyid[targetchoose] = other
    event_user(0);

if phase = -1 &amp;&amp; other.dead = 0 //Jump counterattack
{
    if z &lt;= other.headz
    {
        //Attacked
        if other.headz - z &gt; 5 &amp;&amp; hurt = 0
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        //Counterattack
        else if other.headz - z &lt;= 5
        {
            zspeed = 5;
            zgravityon = 1;
            global.hurt = 1;
            other.hurt = 1;
            instance_create(other.xstart,other.ystart,obj_pointsbattle);
            damage = round(other.hp * other.def/100 - global.Mpow); //Enemy HP * Enemy defense/100 - Mario's POW
            if damage &gt;= 0
                damage = -1;
            other.hp += damage;
            global.damage = -damage; //Damage dealt
            sprite_index = spr_mariobjumpland2; //Nailed hit
            audio_play_sound(snd_hit,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
    }
}
if phase = -2 &amp;&amp; other.dead = 0 //Hammer counterattack
{
        //Counterattack
        if sprite_index = spr_mariobhammerhit &amp;&amp; image_index &gt; 2 &amp;&amp; other.x-12 &gt;= x &amp;&amp; other.hurt = 0
        {
            global.hurt = 1;
            other.hurt = 1;
            instance_create(other.xstart,other.ystart,obj_pointsbattle);
            damage = round(other.hp * other.def/100 - global.Mpow); //Enemy HP * Enemy defense/100 - Mario's POW
            if damage &gt;= 0
                damage = -1;
            other.hp += damage;
            global.damage = -damage; //Damage dealt
            audio_play_sound(snd_strike,0,0);
        }
        //Attacked
        else if hurt = 0
        {
            sprite_index = spr_mhurt;
            image_speed = 0.275;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shyguyb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0 &amp;&amp; obj_battlecontrol.enemyid[targetchoose] = other
    event_user(0);

if phase = -1 &amp;&amp; other.dead = 0
{
    if z &lt;= other.headz
    {
        //Attacked
        if other.headz - z &gt; 5 &amp;&amp; hurt = 0
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        //Counterattack
        else if other.headz - z &lt;= 5
        {
            zspeed = 5;
            zgravityon = 1;
            global.hurt = 1;
            other.hurt = 1;
            instance_create(other.xstart,other.ystart,obj_pointsbattle);
            damage = round(other.hp * other.def/100 - global.Mpow); //Enemy HP * Enemy defense/100 - Mario's POW
            if damage &gt;= 0
                damage = -1;
            other.hp += damage;
            global.damage = -damage; //Damage dealt
            sprite_index = spr_mariobjumpland2; //Nailed hit
            audio_play_sound(snd_hit,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lakituball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if phase = -1 &amp;&amp; other.dead = 0 //Jump counterattack
{
    if z &lt;= other.headz
    {
        //Attacked
        if other.headz - z &gt; 5 &amp;&amp; hurt = 0
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        //Counterattack
        else if other.headz - z &lt;= 5
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
    }
}

if phase = -2 &amp;&amp; other.dead = 0 //Hammer counterattack
{
        //Counterattack
        if sprite_index = spr_mariobhammerhit &amp;&amp; image_index &gt; 2 &amp;&amp; other.hurt = 0
        {
            global.hurt = 1;
            other.hurt = 1;
            //instance_create(other.xstart,other.ystart,obj_pointsbattle);
            damage = round(other.hp * other.def/100 - global.Mpow); //Enemy HP * Enemy defense/100 - Mario's POW
            if damage &gt;= 0
                damage = -1;
            other.hp += damage;
            global.damage = -damage; //Damage dealt
            audio_play_sound(snd_strike,0,0);
        }
        //Attacked
        else if hurt = 0 &amp;&amp; global.takedamage = 0
        {
            sprite_index = spr_mhurt;
            image_speed = 0.275;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        other.turndone = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mossyb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0 &amp;&amp; obj_battlecontrol.enemyid[targetchoose] = other
    event_user(0);

if phase = -1 &amp;&amp; other.dead = 0
{
    if z &lt;= other.headz
    {
        //Attacked
        if other.headz - z &gt; 5 &amp;&amp; hurt = 0
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        //Counterattack
        else if other.headz - z &lt;= 5
        {
            zspeed = 5;
            zgravityon = 1;
            global.hurt = 1;
            other.hurt = 1;
            instance_create(other.xstart,other.ystart,obj_pointsbattle);
            damage = round(other.hp * other.def/100 - global.Mpow); //Enemy HP * Enemy defense/100 - Mario's POW
            if damage &gt;= 0
                damage = -1;
            other.hp += damage;
            global.damage = -damage; //Damage dealt
            sprite_index = spr_mariobjumpland2; //Nailed hit
            audio_play_sound(snd_hit,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_goombab">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if moveto = 1 &amp;&amp; z &lt;= other.headz &amp;&amp; other.dead = 0 &amp;&amp; obj_battlecontrol.enemyid[targetchoose] = other
    event_user(0);

if phase = -1 &amp;&amp; other.dead = 0
{
    if z &lt;= other.headz
    {
        //Attacked
        if other.headz - z &gt; 5 &amp;&amp; hurt = 0
        {
            sprite_index = spr_mhurt;
            hurt = 1;
            global.takedamage = 1; //Mario takes damage
            instance_create(x+16,y,obj_pointsbattle);
            damage = round(global.MHP * global.Mdef/100 - other.pow); //Mario HP * Mario defense/100 - Enemy's POW
            global.MHP += damage;
            global.damage = -damage; //Damage dealt
            if global.MHP &lt;= 0
                global.Mdead = 0.5;
            audio_play_sound(snd_takedamage,0,0);
        }
        //Counterattack
        else if other.headz - z &lt;= 5
        {
            zspeed = 5;
            zgravityon = 1;
            global.hurt = 1;
            other.hurt = 1;
            instance_create(other.xstart,other.ystart,obj_pointsbattle);
            damage = round(other.hp * other.def/100 - global.Mpow); //Enemy HP * Enemy defense/100 - Mario's POW
            if damage &gt;= 0
                damage = -1;
            other.hp += damage;
            global.damage = -damage; //Damage dealt
            sprite_index = spr_mariobjumpland2; //Nailed hit
            audio_play_sound(snd_hit,0,0);
        }
        other.moveto = 0;
        other.turndone = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DOWN
if phase = 2
{
    if drawat &gt; 1 or page &gt; 1
    {
        audio_play_sound(snd_select,0,0);
        movechoose += 1;
    }
    if battleblock = 3
    {
        pagenext += 1;
        if movechoose = 6 &amp;&amp; page = 1 //&amp;&amp; itemdifmax &gt; 5
        {
            page = 2;
            movechoose = 1;
        }
        else if movechoose = 6 &amp;&amp; page = 2 //&amp;&amp; itemdifmax &gt; 10
        {
            page = 3;
            movechoose = 1;
        }
        else if movechoose = 6 &amp;&amp; page = 3 //&amp;&amp; itemdifmax &gt; 15
        {
            page = 4;
            movechoose = 1;
        }
        else if movechoose = 6 &amp;&amp; page = 4
        {
            page = 1;
            pagenext = 1;
            movechoose = 1;
        }
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//RIGHT
if global.turn = 0
{
    if battleblock = 2 &amp;&amp; phase = 3
    {}
    else
    {
        pagenext = 1;
        page = 1;
        if phase = 1 or phase = 2
        {
            audio_play_sound(snd_choose,0,0);
            battleblock += 1;
            movechoose = 1;
        }
        if battleblock = 4
            battleblock = 0;
        if phase = 2
            phase = 1;
        if phase = 3
        {
            targetchoosego = 0;
            if (global.Ldead &gt; 0 &amp;&amp; targetchoose = 0 &amp;&amp; pagenext &lt;&gt; 14 &amp;&amp; pagenext &lt;&gt; 15 &amp;&amp; battleblock = 3)
            or (global.Ldead = 0)
                targetchoose += 1;
            else if global.Ldead &gt; 0 &amp;&amp; targetchoose = 0 &amp;&amp; battleblock = 3
            {
                if pagenext = 14 or pagenext = 15
                    targetchoose = 2;
            }
            else if battleblock &lt;&gt; 3
                targetchoose += 1;
            if battleblock &lt;&gt; 3 //Select enemy
            {
                if !instance_exists(obj_battlecontrol.enemyid[targetchoose])
                {
                    do
                    {
                        targetchoose += 1;
                        if targetchoose &gt; 5
                            targetchoose = 0;
                    }
                    until (instance_exists(obj_battlecontrol.enemyid[targetchoose]) or targetchoose = 0);
                }
            }
            if battleblock = 3 //Select brother
            {
                if !instance_exists(obj_battlecontrol.broid[targetchoose]) &amp;&amp; global.Ldead = 0
                {
                    do
                    {
                        targetchoose += 1;
                        if targetchoose &gt; 2
                            targetchoose = 0;
                    }
                    until (instance_exists(obj_battlecontrol.broid[targetchoose]) or targetchoose = 0);
                }             
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//UP
if phase = 2
{
    if drawat &gt; 1 or page &gt; 1
    {
        audio_play_sound(snd_select,0,0);
        movechoose += -1;
    }
    if battleblock = 3
    {
        pagenext -= 1;
        if movechoose = 0 &amp;&amp; page = 1
        {
            page = 4;
            movechoose = 5;
            pagenext = 20;
        }
        if movechoose = 0 &amp;&amp; page = 2
        {
            page = 1;
            movechoose = 5;
        }
        else if movechoose = 0 &amp;&amp; page = 3
        {
            page = 2;
            movechoose = 5;
        }
        else if movechoose = 0 &amp;&amp; page = 4
        {
            page = 3;
            movechoose = 5;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LEFT
if global.turn = 0
{
    if battleblock = 2 &amp;&amp; phase = 3
    {}
    else
    {
        pagenext = 1;
        page = 1;
        if phase = 1 or phase = 2
        {
            audio_play_sound(snd_choose,0,0);
            battleblock += -1;
            movechoose = 1;
        }
        if battleblock = -1
            battleblock = 3;
        if phase = 2
            phase = 1;
        if phase = 3
        {
            if (global.Ldead &gt; 0 &amp;&amp; targetchoose = 1 &amp;&amp; pagenext &lt;&gt; 14 &amp;&amp; pagenext &lt;&gt; 15 &amp;&amp; battleblock = 3)
            or global.Ldead = 0
                targetchoose -= 1;
            else if global.Ldead &gt; 0 &amp;&amp; targetchoose = 2 &amp;&amp; battleblock = 3
            {
                if pagenext = 14 or pagenext = 15
                    targetchoose = 0;
            }
            else if battleblock &lt;&gt; 3
                targetchoose -= 1;
            if targetchoose &lt; 0 &amp;&amp; battleblock &lt;&gt; 3
                targetchoose = 5;
            if targetchoose &lt; 0 &amp;&amp; battleblock = 3
            {
                targetchoosego = 0;
                targetchoose = 3;
            }
            if battleblock &lt;&gt; 3 //Select enemy
            {
                if !instance_exists(obj_battlecontrol.enemyid[targetchoose])
                {
                    do
                        targetchoose += -1;
                    until(instance_exists(obj_battlecontrol.enemyid[targetchoose]) or targetchoose = 0);
                }
            }
            if battleblock = 3 //Select brother
            {
                if !instance_exists(obj_battlecontrol.broid[targetchoose]) &amp;&amp; global.Ldead = 0
                { 
                    if targetchoose = 0 &amp;&amp; targetchoosego = 0
                    {
                        targetchoosego = 1;
                        targetchoose = 1;
                    }
                    else if targetchoose = 0 &amp;&amp; targetchoosego = 1
                    {
                        targetchoosego = 0;
                        targetchoose = 3;
                    }                   
                    targetchoose -= 1;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>held = 0;

//Striking with Hammer
if sprite_index = spr_mariobhammerstrikestart &amp;&amp; image_index &lt; 8
    held = 2;

//Dodging
if global.turn = 2 &amp;&amp; phase = -2 &amp;&amp; hammering = 1 &amp;&amp; hammerdodgewait = 0 &amp;&amp; hurt = 0 //Hammer releasing
{
    if !image_index = 0
        image_index = 0;
    sprite_index = spr_mariobhammer;
    hammering = 0;
    hammerdodgewait = 0;
    hammerdodgego = 1;
    control = 0;
    held = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stance = 7
    exit;
else
{
    //Initiate holding
    if sprite_index = spr_mariobjumpdown1 or sprite_index = spr_mariobjumpdown2
    or sprite_index = spr_mariobjumpland1 or sprite_index = spr_mariobjumpland2
    or sprite_index = spr_mariobhammerstart or sprite_index = spr_mariobhammer
    or sprite_index = spr_stance4 or sprite_index = spr_mariobhammerstrikestart
    or sprite_index = spr_mariobhandstrikestart
    &amp;&amp; held = 0
        held = 1;
    
    //Striking with Hammer
    if sprite_index = spr_mariobhammerstrikestart &amp;&amp; image_index &gt;= 8 &amp;&amp; image_index &lt;= 9
        held = 3;
    if sprite_index = spr_mariobhammerstrikestart &amp;&amp; image_index &lt; 8 &amp;&amp; image_index &gt;= 4
        held = 2;
        
    //Striking with Hand
    if sprite_index = spr_mariobhandstrikestart &amp;&amp; image_index &gt; 14
        held = 4;
    else if sprite_index = spr_mariobhandstrikestart &amp;&amp; image_index &gt;= 12 &amp;&amp; image_index &lt;= 14
        held = 3;
    else if sprite_index = spr_mariobhandstrikestart &amp;&amp; image_index &lt; 12 &amp;&amp; image_index &gt;= 9
        held = 2;
    else if sprite_index = spr_mariobhandstrikestart &amp;&amp; image_index &lt; 9
    {
        image_index = 0;
        sprite_index = spr_mariobhandstrikefail;
    }

    //Trigger Battle Block Commands
    if phase = 1 &amp;&amp; jumpchoosego = 0 &amp;&amp; control = 1 //Hit Battle Block
    {
        sprite_index = spr_mariochoosejump;
        audio_play_sound(snd_jump,0,0);
        zspeed = 5;
        jumpchoosewait = 6;
        jumpchoosego = 1;
        control = 0;
        jumpingchoose = 1;
    }
    if phase = 2 &amp;&amp; battleblock = 2 //Ready to run
    {
        if movechoose = 1 //Run Away
        {
            if global.Mdead = 0 &amp;&amp; global.Ldead = 0
                alarm[4] = 30; //Buffer
            else
                alarm[4] = 15; //Buffer
        }
        if movechoose = 2 //Idle
        {
            global.hitrank = 0;
            turnnext = 0;
            if obj_luigib.turnnext = 1
            {
                obj_luigib.phase = 1;
                obj_luigib.moveto = 0;
                obj_luigib.phase = 0;   
                battleblock = 0;          
                global.turn = 1;
            }
            else
            {
                if global.Ldead &gt; 0
                    alarm[2] = 15; //Buffer
                global.turn = 2;
            }
        }
    }
    if phase = 2 &amp;&amp; battleblock = 1 //Ready to use Bros Attack
    {}
    if phase = 3 &amp;&amp; control = 1 &amp;&amp; targetchoose != 0 &amp;&amp; battleblock &lt;&gt; 2 //Choose Target
    {
        targetid = targetidaboutto;
        targetx = targetid.x;
        targety = targetid.y;
         
        if battleblock = 0 //Solo
        {
            if movechoose = 1 //Choose Jump Attack
            {
                alarm[5] = 20; //Buffer
                phase = 0.25;
                zspeed = 0;
                stance = 0; //stance 0 means that he is not in a stance
                control = 0;
            }
            if movechoose = 2 //Choose Hammer Attack
            {
                alarm[6] = 20; //Buffer
                phase = 0.25;
                stance = 0; //stance 0 means that he is not in a stance
                control = 0;
            }
            if movechoose = 3 //Choose Hand Attack
            {
                alarm[7] = 20; //Buffer
                phase = 0.25;
                stance = 0; //stance 0 means that he is not in a stance
                control = 0;
            }
            audio_play_sound(snd_confirm,0,0);
        }
        if battleblock = 1 //Bros
        {
            alarm[8] = 20;
            phase = 0.25;
            zspeed = 0;
            stance = 0; //stance 0 means that he is not in a stance
            control = 0;
            audio_play_sound(snd_confirm,0,0);
        }
        if battleblock = 3 //Items
        {
            //show_message(string(ds_list_find_value(itemlist,move))); //debug for now
            alarm[8] = 20; //Select item
            phase = 0.25;
            zspeed = 0;
            stance = 0; //stance 0 means that he is not in a stance
            control = 0;
            audio_play_sound(snd_confirm,0,0);
        }
    }

    if phase = 3 &amp;&amp; targetchoose = 0
    {
        sprite_index = spr_mariochoosejump;
        zspeed = 5;
        jumpchoosewait = 6;
        jumpchoosego = 1;
        control = 0;
        jumpingchoose = 1;
    }

    if phase = 2 &amp;&amp; battleblock &lt;&gt; 3 //Choose an enemy
    {
        if phase = 2 &amp;&amp; battleblock = 1 //Bros Attack
        {
            if global.MBP &lt; 4 or global.brosattacks = 0 or brositemdifmax = 0 or global.Ldead &gt; 0
                audio_play_sound(snd_incorrect,0,0);
            else if movechoose = 1 &amp;&amp; global.brosattacks &gt;= 1 &amp;&amp; global.MBP &gt;= 4
            {
                //Set Bros Attack to Green Shells
                event_user(6);
            }
            else if movechoose = 2 &amp;&amp; global.brosattacks &gt;= 2 &amp;&amp; global.MBP &gt;= 6
            {
                //Set Bros Attack to Fire Flower
                event_user(6);
            }
            else if movechoose = 3 &amp;&amp; global.brosattacks &gt;= 3 &amp;&amp; global.MBP &gt;= 10
            {
                //Set Bros Attack to Jump Helmet
                event_user(6);
            }
            else if movechoose = 4 &amp;&amp; global.brosattacks &gt;= 4 &amp;&amp; global.MBP &gt;= 14
            {
                //Set Bros Attack to Broken Heart
                event_user(6);
            }
            else
                audio_play_sound(snd_incorrect,0,0);
        }
        else //Solo Attack
            event_user(6);
    }
    if phase = 2 &amp;&amp; battleblock = 3 //Choose a brother and select item
        event_user(4);
        
    //Bros Attacks
    if instance_exists(obj_brosattack)
    {
        //Green Shell
        if moveto = 5.1 &amp;&amp; obj_brosattack.phase = 4
            sprite_index = spr_mariobgreenshellkick;
    }
        
    //Dodging
    if control = 1 &amp;&amp; ground = 1 &amp;&amp; global.Mdead = 0
    {
        if phase = -1 //Jump dodging
        {
            zspeed = 4.5;
            ground = 0;
            jumpdodgewait = 16;
            audio_play_sound(snd_jump,0,0);
            jumpdodgego = 1;
            control = 0;
            jumpingdodge = 1;
        }
        else if phase = -2 &amp;&amp; held = 1 //Hammer dodging
        {
            sprite_index = spr_mariobhammerstart;
            hammering = 1;
            hammerdodgewait = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Bros Attacks
if movechoose = 1 &amp;&amp; instance_exists(obj_brosattack) //Green Shells
    obj_brosattack.attacknum = 0;
if movechoose = 2 &amp;&amp; instance_exists(obj_brosattack) //Fire Flower
    obj_brosattack.attacknum = 1;
if movechoose = 3 &amp;&amp; instance_exists(obj_brosattack) //Jump Helmet
    obj_brosattack.attacknum = 2;
if movechoose = 4 &amp;&amp; instance_exists(obj_brosattack) //Broken Heart
{
    obj_brosattack.attacknum = 3;
    /*mp_linear_step(targetx-171,targety,10,0) //Depending on what enemy you choose, Mario will stand in front of it
    if x = targetx-171 &amp;&amp; y = targety &amp;&amp; sprite_index = spr_mariobwalking
        sprite_index = spr_fluddstand;*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Choose Enemy Target
do
{
    targetchoose += 1;
    if targetchoose &gt; 5
        targetchoose = 0;
}
until (instance_exists(obj_battlecontrol.enemyid[targetchoose]));
phase = 3;
audio_play_sound(snd_confirm,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Luck System:
//The higher global.Mstache is, the luckier Mario is.

if global.Mstache &gt;= 999
{
    global.Mstache = 999;
    global.luckyhit = true;
}
else
{
    if global.Mstache &gt;= random(999)
        global.luckyhit = true;
    else
        global.luckyhit = false; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Item Index
itemindex[1,0] = false;
itemindex[1,1] = false;
itemindex[1,2] = false;
itemindex[1,3] = false;
itemindex[1,4] = false;
itemindex[1,5] = false;
itemindex[1,6] = false;
itemindex[1,7] = false;
itemindex[1,8] = false;
itemindex[1,9] = false;
itemindex[1,10] = false;
itemindex[1,11] = false;
itemindex[1,12] = false;
itemindex[1,13] = false;
itemindex[1,14] = false;
itemindex[1,15] = false;
itemindex[1,16] = false;
itemindex[1,17] = false;
itemindex[1,18] = false;
itemindex[1,19] = false;
itemindex[2,0] = false;
itemindex[2,1] = false;
itemindex[2,2] = false;
itemindex[2,3] = false;
itemindex[2,4] = false;
itemindex[2,5] = false;
itemindex[2,6] = false;
itemindex[2,7] = false;
itemindex[2,8] = false;
itemindex[2,9] = false;
itemindex[2,10] = false;
itemindex[2,11] = false;
itemindex[2,12] = false;
itemindex[2,13] = false;
itemindex[2,14] = false;
itemindex[2,15] = false;
itemindex[2,16] = false;
itemindex[2,17] = false;
itemindex[2,18] = false;
itemindex[2,19] = false;
itemindex[3,0] = false;
itemindex[3,1] = false;
itemindex[3,2] = false;
itemindex[3,3] = false;
itemindex[3,4] = false;
itemindex[3,5] = false;
itemindex[3,6] = false;
itemindex[3,7] = false;
itemindex[3,8] = false;
itemindex[3,9] = false;
itemindex[3,10] = false;
itemindex[3,11] = false;
itemindex[3,12] = false;
itemindex[3,13] = false;
itemindex[3,14] = false;
itemindex[3,15] = false;
itemindex[3,16] = false;
itemindex[3,17] = false;
itemindex[3,18] = false;
itemindex[3,19] = false;

//Select and use item
if global.Ldead &gt; 0 &amp;&amp; itemid = 13 &amp;&amp; global.oneups &gt; 0
{
    targetchoose = 2;
    phase = 3;
    audio_play_sound(snd_confirm,0,0);
}
else if global.Ldead &gt; 0 &amp;&amp; itemid = 14 &amp;&amp; global.oneupsupers &gt; 0
{
    targetchoose = 2;
    phase = 3;
    audio_play_sound(snd_confirm,0,0);
}
else if global.Ldead = 0 &amp;&amp; itemid = 13 &amp;&amp; global.oneups &gt; 0
    audio_play_sound(snd_incorrect,0,0);
else if global.Ldead = 0 &amp;&amp; itemid = 14 &amp;&amp; global.oneupsupers &gt; 0
    audio_play_sound(snd_incorrect,0,0);
else if global.Ldead &gt; 0
{
    targetchoose = 1;
    phase = 3;
    audio_play_sound(snd_confirm,0,0);
}
else
{
    do
    {
        if targetchoose = 0
            targetchoose += 1;
        if targetchoose &gt; 2
            targetchoose = 0;
    }
    until (instance_exists(obj_battlecontrol.broid[targetchoose]));
    phase = 3;
    audio_play_sound(snd_confirm,0,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Item Selection
draw_sprite(spr_text_box_3,0,x+164,y-84);
draw_sprite(spr_mariochoose2,-1,x+164,y-100+(20*movechoose));
//Page 1
if page = 1
{
    draw_set_color(c_white);
    draw_set_font(fnt_items);
    draw_set_halign(fa_left);
    //Mushrooms
    if global.mushrooms &gt; 0
    {
        draw_sprite_ext(spr_items,0,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Mushrooms");
        if global.mushrooms &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.mushrooms,1,0.75,0.75,0,c_yellow,1);
        else if global.mushrooms &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.mushrooms,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.mushrooms = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Super Mushrooms
    if global.supermushrooms &gt; 0
    {
        draw_sprite_ext(spr_items,1,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Super Mushrooms");
        if global.supermushrooms &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.supermushrooms,1,0.75,0.75,0,c_yellow,1);
        else if global.supermushrooms &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.supermushrooms,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.supermushrooms = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Ultra Mushrooms
    if global.ultramushrooms &gt; 0
    {
        draw_sprite_ext(spr_items,2,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Ultra Mushrooms");
        if global.ultramushrooms &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.ultramushrooms,1,0.75,0.75,0,c_yellow,1);
        else if global.ultramushrooms &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.ultramushrooms,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.ultramushrooms = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }    
    //Max Mushrooms
    if global.maxmushrooms &gt; 0
    {
        draw_sprite_ext(spr_items,3,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Max Mushrooms");
        if global.maxmushrooms &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.maxmushrooms,1,0.75,0.75,0,c_yellow,1);
        else if global.maxmushrooms &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.maxmushrooms,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.maxmushrooms = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Nuts
    if global.nuts &gt; 0
    {
        draw_sprite_ext(spr_items,4,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Nuts");
        if global.nuts &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.nuts,1,0.75,0.75,0,c_yellow,1);
        else if global.nuts &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.nuts,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.nuts = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
}
//Page 2
if page = 2
{
    draw_set_color(c_white);
    draw_set_font(fnt_items);
    draw_set_halign(fa_left);
    //Super Nuts
    if global.supernuts &gt; 0
    {
        draw_sprite_ext(spr_items,5,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Super Nuts");
        if global.supernuts &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.supernuts,1,0.75,0.75,0,c_yellow,1);
        else if global.supernuts &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.supernuts,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.supernuts = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Ultra Nuts
    if global.ultranuts &gt; 0
    {
        draw_sprite_ext(spr_items,6,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Ultra Nuts");
        if global.ultranuts &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.ultranuts,1,0.75,0.75,0,c_yellow,1);
        else if global.ultranuts &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.ultranuts,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.ultranuts = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Max Nuts
    if global.maxnuts &gt; 0
    {
        draw_sprite_ext(spr_items,7,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Max Nuts");
        if global.maxnuts &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.maxnuts,1,0.75,0.75,0,c_yellow,1);
        else if global.maxnuts &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.maxnuts,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.maxnuts = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Star Candies
    if global.starcandies &gt; 0
    {
        draw_sprite_ext(spr_items,8,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Star Candies");
        if global.starcandies &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.starcandies,1,0.75,0.75,0,c_yellow,1);
        else if global.starcandies &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.starcandies,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.starcandies = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Syrups
    if global.syrups &gt; 0
    {
        draw_sprite_ext(spr_items,9,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Syrups");
        if global.syrups &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.syrups,1,0.75,0.75,0,c_yellow,1);
        else if global.syrups &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.syrups,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;   
    }
    else if global.syrups = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
}
//Page 3
if page = 3
{
    draw_set_color(c_white);
    draw_set_font(fnt_items);
    draw_set_halign(fa_left);
    //Super Syrups
    if global.supersyrups &gt; 0
    {
        draw_sprite_ext(spr_items,10,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Super Syrups");
        if global.supersyrups &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.supersyrups,1,0.75,0.75,0,c_yellow,1);
        else if global.supersyrups &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.supersyrups,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.supersyrups = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Ultra Syrups
    if global.ultrasyrups &gt; 0
    {
        draw_sprite_ext(spr_items,11,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Ultra Syrups");
        if global.ultrasyrups &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.ultrasyrups,1,0.75,0.75,0,c_yellow,1);
        else if global.ultrasyrups &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.ultrasyrups,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.ultrasyrups = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }    
    //Max Syrups
    if global.maxsyrups &gt; 0
    {
        draw_sprite_ext(spr_items,12,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Max Syrups");
        if global.maxsyrups &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.maxsyrups,1,0.75,0.75,0,c_yellow,1);
        else if global.maxsyrups &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.maxsyrups,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.maxsyrups = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //1-Up Mushrooms    
    if global.oneups &gt; 0
    {
        draw_sprite_ext(spr_items,13,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"1-Up Mushrooms");
        if global.oneups &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.oneups,1,0.75,0.75,0,c_yellow,1);
        else if global.oneups &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.oneups,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }   
    else if global.oneups = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //1-Up Supers 
    if global.oneupsupers &gt; 0
    {
        draw_sprite_ext(spr_items,14,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"1-Up Supers");
        if global.oneupsupers &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.oneupsupers,1,0.75,0.75,0,c_yellow,1);
        else if global.oneupsupers &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.oneupsupers,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.oneupsupers = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }    
}
//Page 4
if page = 4
{
    draw_set_color(c_white);
    draw_set_font(fnt_items);
    draw_set_halign(fa_left);
    //Refreshing Herbs
    if global.herbs &gt; 0
    {
        draw_sprite_ext(spr_items,15,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Refreshing Herbs");
        if global.herbs &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.herbs,1,0.75,0.75,0,c_yellow,1);
        else if global.herbs &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.herbs,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.herbs = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Red Peppers
    if global.redpeppers &gt; 0
    {
        draw_sprite_ext(spr_items,16,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Red Peppers");
        if global.redpeppers &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.redpeppers,1,0.75,0.75,0,c_yellow,1);
        else if global.redpeppers &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.redpeppers,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }    
    else if global.redpeppers = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
    //Green Peppers 
    if global.greenpeppers &gt; 0
    {
        draw_sprite_ext(spr_items,17,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Green Peppers");
        if global.greenpeppers &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.greenpeppers,1,0.75,0.75,0,c_yellow,1);
        else if global.greenpeppers &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.greenpeppers,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }   
    else if global.greenpeppers = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }  
    //Boo Biscuits
    if global.boobiscuits &gt; 0
    {
        draw_sprite_ext(spr_items,18,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Boo Biscuits");
        if global.boobiscuits &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.boobiscuits,1,0.75,0.75,0,c_yellow,1);
        else if global.boobiscuits &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.boobiscuits,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.boobiscuits = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }  
    //Retry Clocks
    if global.retryclocks &gt; 0
    {
        draw_sprite_ext(spr_items,19,x+158,y-84+(20*drawat),0.75,0.75,0,-1,1); //Draw item
        draw_text(x+181,y-84+(20*drawat),"Retry Clocks");
        if global.retryclocks &lt; 10
            scr_draw_numbers_empty(x+314,y-82+(20*drawat),global.retryclocks,1,0.75,0.75,0,c_yellow,1);
        else if global.retryclocks &lt; 100
            scr_draw_numbers_empty(x+308,y-82+(20*drawat),global.retryclocks,2,0.75,0.75,0,c_yellow,1);
        drawat += 1;
    }
    else if global.retryclocks = 0
    {
        draw_text(x+181,y-84+(20*drawat),"????????????");
        drawat += 1;
    }
}

draw_sprite(spr_uparrow,-1,x+241,y-100);
draw_sprite(spr_downarrow,-1,x+241,y+18);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hit enemy with Fire Attack
if targetid.floating = 1
{
    targetid.hurt = 0;
    if instance_exists(obj_rankbattle)
        with obj_rankbattle instance_destroy();
    instance_create(x-48,y-48,obj_rankbattle);
    with obj_rankbattle image_single = 4;
}
else if targetid.floating = 0
{
    if targetid.firebrand = 2
    {
        targetid.hurt = -1;
        global.damage = round(global.Mpow - targetid.def/100);
        if global.hitrank = 0 //Ok Hit
            global.damage = round(global.Mpow/2 - targetid.def/100);
        if global.hitrank = 1 //Good Hit
            global.damage = round(global.Mpow - targetid.def/100);
        if global.hitrank = 2 //Great Hit
            global.damage += round(global.Mpow/2 - targetid.def/100);
        if global.hitrank = 3 //Excellent Hit
            global.damage += round(global.Mpow/2 - targetid.def/100);
        targetid.hp += global.damage;
        audio_play_sound(snd_item_use,0,0);
        
        if instance_exists(obj_rankbattle)
            with obj_rankbattle instance_destroy();
        instance_create(x-48,y-48,obj_rankbattle);
        with obj_rankbattle image_single = global.hitrank;
        alarm[3] = 20;
        repeataction = 0;
        if global.hitrank = 2 or global.hitrank = 3
        { 
            instance_create(x+24,y,obj_healpointsbattle);
            obj_healpointsbattle.totaldamage = 1;
        }
        else
            instance_create(x+24,y,obj_healpointsbattle);
    }
    else if targetid.firebrand &lt; 2
    {
        //Hit enemy with Hand Attack
        targetid.hurt = 1;
        event_user(5); //Determine luck
        global.damage = round(global.Mpow - targetid.def/100);
        if global.hitrank = 0 //Ok Hit
            global.damage = round(global.Mpow/2 - targetid.def/100);
        if global.hitrank = 1 //Good Hit
            global.damage = round(global.Mpow - targetid.def/100);
        if global.hitrank = 2 //Great Hit
            global.damage += round(global.Mpow/2 - targetid.def/100); //Takes Mario's pow for damage
        if global.hitrank = 3 //Excellent Hit
        {
            global.damage *= 2;
            global.damage += global.Mlvl;
        }
        
        if global.luckyhit = true //Lucky Hit
        {
            audio_play_sound(snd_luckyhit,0,0);
            targetid.hurt = 1;
            global.damage+= global.Mlvl; //Adds certain damage based on what level Mario is
            targetid.hp += -global.damage;
        }
        else
            targetid.hp += -global.damage; //Deals the damage based on Mario's pow
            
            if instance_exists(obj_rankbattle)
                with obj_rankbattle instance_destroy();
            instance_create(x-48,y-48,obj_rankbattle);
            if global.hitrank = 3
            {
                background_visible[7] = true; //Show Excellent Effect
                audio_play_sound(snd_excellenthit,0,0);
            }
            with obj_rankbattle image_single = global.hitrank;
            alarm[3] = 20;
            repeataction = 0;
            if global.hitrank = 2 or global.hitrank = 3
            { 
                instance_create(x+24,y,obj_pointsbattle);
                obj_pointsbattle.totaldamage = 1;
            }
            else
                instance_create(x+24,y,obj_pointsbattle);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hit enemy with Hammer Attack
if targetid.floating = 1
{
    targetid.hurt = 0;
    if instance_exists(obj_rankbattle)
        with obj_rankbattle instance_destroy();
    instance_create(x-48,y-48,obj_rankbattle);
    with obj_rankbattle image_single = 4;
}
else if targetid.floating = 0
{
    targetid.hurt = 1;
    event_user(5); //Determine luck
    global.damage = round(global.Mpow - targetid.def/100);
    if global.hitrank = 0 //Ok Hit
        global.damage = round(global.Mpow/2 - targetid.def/100);
    if global.hitrank = 1 //Good Hit
        global.damage = round(global.Mpow - targetid.def/100);
    if global.hitrank = 2 //Great Hit
        global.damage += round(global.Mpow/2 - targetid.def/100); //Takes Mario's pow for damage
    if global.hitrank = 3 //Excellent Hit
        global.damage *= 2;
    
    if global.luckyhit = true //Lucky Hit
    {
        audio_play_sound(snd_luckyhit,0,0);
        targetid.hurt = 1;
        global.damage+= global.Mlvl; //Adds certain damage based on what level Mario is
        targetid.hp += -global.damage;
    }
    else
        targetid.hp += -global.damage; //Deals the damage based on Mario's pow
    if instance_exists(obj_rankbattle)
        with obj_rankbattle instance_destroy();
    instance_create(x-48,y-48,obj_rankbattle);
    if global.hitrank = 3
    {
        background_visible[7] = true; //Show Excellent Effect
        audio_play_sound(snd_excellenthit,0,0);
    }
    else if global.hitrank = 3
        audio_play_sound(snd_greathit,0,0);
    else if global.hitrank = 2
        audio_play_sound(snd_goodhit,0,0);
    else
        audio_play_sound(snd_okhit,0,0);
    with obj_rankbattle image_single = global.hitrank;
    alarm[3] = 20;
    repeataction = 0;
    if obj_rankbattle.image_single = 2 or obj_rankbattle.image_single = 3
    { 
        instance_create(x+24,y,obj_pointsbattle);
        obj_pointsbattle.totaldamage = 1;
    }
    else
        instance_create(x+24,y,obj_pointsbattle);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hit enemy with Jump Attack
if held = 1
{
    held = 0;
    zspeed = 7;
    other.hurt = 1;
    event_user(5); //Determine luck
    global.damage = round(global.Mpow - other.def/100); //Takes Mario's pow for damage
    if global.luckyhit = true //Lucky Hit
    {
        audio_play_sound(snd_luckyhit,0,0);
        other.hurt = 1;
        global.damage+= global.Mlvl; //Adds certain damage based on what level Mario is
        other.hp += -global.damage;
        instance_create(x,y,obj_pointsbattle);
        obj_pointsbattle.reappear = 1
    }
    else
        other.hp += -global.damage; //Deals the damage based on Mario's pow
    if instance_exists(obj_rankbattle)
        with obj_rankbattle instance_destroy();
    instance_create(x-48,y-48,obj_rankbattle);
    if repeataction = 1
    {
        audio_play_sound(snd_excellenthit,0,0);
        with obj_rankbattle image_single = 3; //Excellent Hit
        global.hitrank = 3;
        background_visible[7] = true; //Show Excellent Effect
        alarm[3] = 20;
        moveto = 0;
        global.totaldamage+= global.damage;
        repeataction = 0;
    }
    else
    {
        audio_play_sound(snd_goodhit,0,0);
        with obj_rankbattle image_single = 1; //Good Hit
        global.hitrank = 1;
        zspeed = 15;
        moveto = 1;
        global.totaldamage+= global.damage;
        repeataction = 1;
        with obj_battlecontrol event_user(1); //Another chance to land a lucky hit
    }
    if obj_rankbattle.image_single = 2 or obj_rankbattle.image_single = 3
    { 
        instance_create(x,y,obj_pointsbattle);
        obj_pointsbattle.totaldamage = 1;
    }
    else
        instance_create(x,y,obj_pointsbattle);
}
else
{
    zspeed = 7;
    other.hurt = 1;
    event_user(5); //Determine luck
    global.damage = round(global.Mpow/2 - other.def/100); //Takes Mario's pow for damage
    other.hp += -global.damage; //Deals the damage based on Mario's pow
    if !instance_exists(obj_rankbattle)
        instance_create(x-48,y-48,obj_rankbattle);
    if !instance_exists(obj_pointsbattle) &amp;&amp; repeataction = 0
    {
        instance_create(x,y,obj_pointsbattle);
        with obj_rankbattle image_single = 0; //Ok Hit
        global.hitrank = 0;
        global.totaldamage+= global.damage;
        sprite_index = spr_mhurt;
    }
    else if repeataction = 1
    {
        with obj_rankbattle instance_destroy();
        instance_create(x-48,y-48,obj_rankbattle);
        instance_create(x,y,obj_pointsbattle);
        with obj_rankbattle image_single = 2; //Great Hit
        global.hitrank = 2;
        obj_pointsbattle.totaldamage = 1;
        global.totaldamage+= global.damage;
        sprite_index = spr_mariobwalkingback;
    }
    if sprite_index = spr_mhurt
    {
        x-= 12;
        y+= 8;
        speed = 0.001;
        moveto = -1;
        alarm[1] = 30;
    }
    else
    {
        moveto =  0;
        audio_play_sound(snd_hit,0,0);
    }
    repeataction = 0;
}
global.posx = x;
global.posy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets that at the end of certain animations, to change to the next
if sprite_index = spr_mhurt &amp;&amp; global.turn = 0
{
    image_speed = 0;
    image_single = 0;
}
else
{
    if sprite_index = spr_mariobjumpstart
        sprite_index = spr_mariobjumpup;
    if sprite_index = spr_mariobhammerstart &amp;&amp; hurt = 0
    {
        image_index = 0;
        sprite_index = spr_mariobhammer;
        mask_index = spr_mask;
    }
    if sprite_index = spr_mariobhammerhit &amp;&amp; hurt = 0
    {
        hammeringdodge = 0;
        hammerdodgewait = 1;
        hammering = 0;
        hammerdodgego = 0;
        control = 1;
        hammeringdodge = 0;
        sprite_index = spr_stance4;
        mask_index = spr_mask;
    }
    if sprite_index = spr_mariobjumpdown1
        sprite_index = spr_mariobjumpdown2;
    if sprite_index = spr_mariobjumpland2 
    {
        stance = 1;
        if moveto = 5 
        {
            stance = 0;
            if obj_luigib.fluddthunderon = 1
                sprite_index = spr_fluddstand;
       }
    }
}

if sprite_index = spr_mariobjumpland2 &amp;&amp; phase = 1
    sprite_index = spr_stance2;
if sprite_index = spr_mhurt &amp;&amp; global.turn = 2 //Counterattacking
{
    if phase = -2
    {
        hammeringdodge = 0;
        sprite_index = spr_stance4;
    }
    else
        sprite_index = spr_stance3;
    hurt = 0;
}
if sprite_index = spr_mariobhammerstrikehit or sprite_index = spr_mariobhammerstrikefail
{
    sprite_index = spr_mariobwalkingback;
    moveto = 0;
}
if sprite_index = spr_mariobhammerstrikestart
    sprite_index = spr_mariobhammerstrikefail;
if sprite_index = spr_mariobhammerstrike
    sprite_index = spr_mariobhammerstrikehit;
if sprite_index = spr_mariobhandstrikehit or sprite_index = spr_mariobhandstrikefail
{
    sprite_index = spr_mariobwalkingback;
    moveto = 0;
}
if sprite_index = spr_mariobhandstrikestart
    sprite_index = spr_mariobhandstrikefail;
if sprite_index = spr_fluddshoot
{
    moveto = 0;
    sprite_index = spr_mariobwalkingback;
    obj_luigib.moveto = 0;
    obj_luigib.sprite_index = spr_luigibwalkingback;
}
if sprite_index = spr_mariobthrow or sprite_index = spr_mariobheal
{
    sprite_index = spr_stance1;
    stance = 1;
}
if sprite_index = spr_mariobswallow
{
    moveto = 9;
}
if sprite_index = spr_mariobthrowup
    moveto = 8;
if sprite_index = spr_mariobthrow
    moveto = 11;
if sprite_index = spr_mariopanic
{
    phase = 1;
    stance = 2;
    control = 1;
    reaction = 1;
}
if sprite_index = spr_mariopickupluigi &amp;&amp; global.Ldead = 1 &amp;&amp; stance &lt;&gt; 6 //Run with Luigi
{
    if battleblock = 2 //Run from Battle
    {
        phase = -3;
        stance = 6;
        sprite_index = spr_mariobwalkingbackluigi;
    }
    else if battleblock &lt;&gt; 2 //Enemy Attacks
    {
        sprite_index = spr_stance1b;
        global.turn = 2;
    }
}

//Green Shell
if sprite_index = spr_mariobgreenshellkick &amp;&amp; stance = 16
{
    image_index = 0;
    sprite_index = spr_mariobgreenshellstance;
    stance = 15;
}
if sprite_index = spr_mariobgreenshellfall
{
    var i;
    for (i = 0; i &lt; 10; i++) //Repeat animation
        image_index = 0;
    stance = 1;
}
//Fire Flower
if sprite_index = spr_mariobfireflowertransform
{
    instance_create(x-16,y-24,obj_fireballm);
    instance_create(obj_luigib.x-16,obj_luigib.y-24,obj_fireballl);
    sprite_index = spr_mariobfireflowerstance2;
}
if sprite_index = spr_mariobfireflowerstance2
{
    stance = 18;
    sprite_index = spr_mariobfireflowerstance;
}
if sprite_index = spr_mariobfireflowertransform2
{
    stance = 1;
    if instance_exists(obj_brosattack)
        with obj_brosattack instance_destroy();
    if instance_exists(obj_fireballprojectile)
        with obj_fireballprojectile instance_destroy();
}
if sprite_index = spr_mariobfireflowershoot or sprite_index = spr_mariobfireflowershoot2
{
    if instance_exists(obj_fireballm)
        obj_fireballm.visible = true;
    sprite_index = spr_mariobfireflowerstance;
}

//Win
if sprite_index = spr_mariobwinspin_jump or sprite_index = spr_mariobwinspin_hammer or sprite_index = spr_mariobwinspin_hand
    image_single = 3;
//Lose
if sprite_index = spr_mariodie
    global.Mdead = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_alpha &gt; 0 &amp;&amp; global.strike = 0
    with obj_battlecontrol event_user(0);
image_alpha = 0;
with obj_luigib image_alpha = 0;
audio_sound_gain(global.music,-0.025,1000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite(mask_index,image_index,x,y); //For debugging

//Draw shadow
if ground = 0
{
    if z &lt; 10
        draw_sprite(spr_shadow1,image_index,x,y);
    if z &gt;= 10 &amp;&amp; z &lt; 20
        draw_sprite(spr_shadow2,image_index,x,y);
    if z &gt;= 20
        draw_sprite(spr_shadow3,image_index,x,y);
}
/*if ground = 1
    draw_sprite(spr_shadow2,image_index,x,y-2);*/
    
//Draw Battle Block Shadows
if global.turn = 0 &amp;&amp; phase = 1 or phase = 2
{
    draw_sprite_ext(spr_battleblock_shadow,1,x,y+8,1,1,0,-1,1);
    draw_sprite_ext(spr_battleblock_shadow,-1,x,y-24,0.75,0.75,0,-1,1);
    draw_sprite_ext(spr_battleblock_shadow,1,x-32,y-8,0.85,0.85,0,-1,1);
    draw_sprite_ext(spr_battleblock_shadow,1,x+32,y-8,0.85,0.85,0,-1,1);
}

//Draw Mario without moving his mask
draw_sprite(sprite_index,image_index,x,y-z);
    
//Draws Battle Blocks
if global.turn = 0 &amp;&amp; phase = 1 or phase = 2
{
    if battleblock = 0 //Solo Block
    {
        if global.runaway = 0
            draw_sprite_ext(spr_runblock2,0,x,y-83,0.75,0.75,0,-1,1);
        else
            draw_sprite_ext(spr_runblock,0,x,y-83,0.75,0.75,0,-1,1);
        if phase = 1
            draw_sprite(spr_soloblock,-1,x,y-67); //Solo
        else if phase = 2
        {
            if movechoose = 1
                draw_sprite(spr_jumpblock,-1,x,y-67); //Jump
            else if movechoose = 2
                draw_sprite(spr_hammerblock,-1,x,y-67); //Hammer
            else if movechoose = 3
                draw_sprite(spr_handblock,-1,x,y-67); //Hand
        }
        if itemdifmax = 0
            draw_sprite_ext(spr_itemblock2,0,x-32,y-72,0.85,0.85,0,-1,1);
        else
            draw_sprite_ext(spr_itemblock,0,x-32,y-72,0.85,0.85,0,-1,1);
        if brositemdifmax = 0 or global.MBP &lt; 4 or global.Ldead &gt; 0
            draw_sprite_ext(spr_brosblock2,0,x+32,y-72,0.85,0.85,0,-1,1);
        else
            draw_sprite_ext(spr_brosblock,0,x+32,y-72,0.85,0.85,0,-1,1);
    }
    if battleblock = 1 //Bros Block
    {
        if itemdifmax = 0
            draw_sprite_ext(spr_itemblock2,0,x,y-83,0.75,0.75,0,-1,1);
        else
            draw_sprite_ext(spr_itemblock,0,x,y-83,0.75,0.75,0,-1,1);
        if brositemdifmax = 0 or global.MBP &lt; 4 or global.Ldead &gt; 0
            draw_sprite(spr_brosblock2,-1,x,y-67); //Bros
        else
            draw_sprite(spr_brosblock,-1,x,y-67); //Bros
        draw_sprite_ext(spr_soloblock,0,x-32,y-72,0.85,0.85,0,-1,1);
        if global.runaway = 0
            draw_sprite_ext(spr_runblock2,0,x+32,y-72,0.85,0.85,0,-1,1);
        else
            draw_sprite_ext(spr_runblock,0,x+32,y-72,0.85,0.85,0,-1,1);
    }
    if battleblock = 2 //Run Block
    {
        draw_sprite_ext(spr_soloblock,0,x,y-83,0.75,0.75,0,-1,1);
        if global.runaway = 0
            draw_sprite(spr_runblock2,-1,x,y-67);
        else
            draw_sprite(spr_runblock,-1,x,y-67); //Run
        if brositemdifmax = 0 or global.MBP &lt; 4 or global.Ldead &gt; 0
            draw_sprite_ext(spr_brosblock2,0,x-32,y-72,0.85,0.85,0,-1,1);
        else
            draw_sprite_ext(spr_brosblock,0,x-32,y-72,0.85,0.85,0,-1,1);
        if itemdifmax = 0
            draw_sprite_ext(spr_itemblock2,0,x+32,y-72,0.85,0.85,0,-1,1);
        else
            draw_sprite_ext(spr_itemblock,0,x+32,y-72,0.85,0.85,0,-1,1);
    }
    if battleblock = 3 //Item Block
    {
        if brositemdifmax = 0 or global.MBP &lt; 4 or global.Ldead &gt; 0
            draw_sprite_ext(spr_brosblock2,0,x,y-83,0.75,0.75,0,-1,1);
        else
            draw_sprite_ext(spr_brosblock,0,x,y-83,0.75,0.75,0,-1,1);
        if itemdifmax = 0
            draw_sprite(spr_itemblock2,-1,x,y-67);
        else
            draw_sprite(spr_itemblock,-1,x,y-67); //Item
        if global.runaway = 0
            draw_sprite_ext(spr_runblock2,0,x-32,y-72,0.85,0.85,0,-1,1);
        else
            draw_sprite_ext(spr_runblock,0,x-32,y-72,0.85,0.85,0,-1,1);
        draw_sprite_ext(spr_soloblock,0,x+32,y-72,0.85,0.85,0,-1,1);
    }
}

if global.turn = 0 &amp;&amp; phase = 3
{
    if targetchoose = 0
        draw_sprite(spr_back1,0,0,8);
    if targetchoose &lt; 0
        draw_sprite(spr_back2,0,0,8);
}

if global.turn = 1
    phase = 0;
if global.turn = 2
{
    if stance = 4
        phase = -2;
    else
        phase = -1;
}

//Create Fireball
if sprite_index = spr_mariobhandstrikestart
    draw_sprite(spr_fireballb,-1,x+20,y-20);
    
//Draws the A symbol
if phase = 1
    draw_sprite(spr_mariochoose,-1,x-12,y-32);

draw_set_font(Mario_font);
draw_set_halign(fa_right);
draw_set_color(c_white);

//Draws second phase choices
if phase = 2
{
    //if someone has an easier way to do this, then change it and send me the file via email
    drawat = 0;
    itemnum = 0;
    //Solo
    if battleblock = 0
    {
        draw_sprite(spr_text_box_2,0,x+64,y-40);
        draw_sprite(spr_mariochoose2,-1,x+64,y-56+(16*movechoose));
        drawat = solonum;
        //itemnum = solonum;
        if solonum &gt; 0
            draw_sprite(spr_jumpcommand,0,x+112,y-30);
        if solonum &gt; 1
            draw_sprite(spr_hammercommand,0,x+112,y-16);
        if solonum &gt; 2
            draw_sprite(spr_handcommand,0,x+112,y);
    }
    //Bros
    if battleblock = 1
    {
        draw_sprite(spr_text_box_4,0,x+64,y-44-24); //Bros Attacks HUD
        //draw_sprite(spr_button_help,0,x+68,y+66-12); //Bros Attacks HELP Button
        //draw_sprite(spr_button_practice,0,x+168,y+66-12); //Bros Attacks PRACTICE Button
        draw_sprite(spr_mariochoose2,-1,x+64,y-64-24+(23*movechoose)); //Selector
        
        draw_set_font(fnt_items);
        draw_set_halign(fa_left);
        draw_set_color(c_white);
        
        drawat = brositemdifmax;
        if brositemdifmax &gt; 0 //Green Shells
        {
            if global.MBP &gt;= 4
            {
                draw_text_transformed(x+92,y-40-24+(23*0),"Green Shell",0.75,0.75,0);
                draw_sprite_ext(spr_brositems,0,x+64,y-44-24,0.75,0.75,0,-1,1);
                scr_draw_numbers_empty_blue(x+212,y-40-24,4,2,0.75,0.75,0,c_white,1); //Cost of 4 BP
            }
            else
            {
                draw_text_transformed_colour(x+92,y-40-24+(23*0),"Green Shell",0.75,0.75,0,c_gray,c_gray,c_gray,c_gray,1);
                draw_sprite_ext(spr_brositems,0,x+64,y-44-24,0.75,0.75,0,c_gray,1);
                scr_draw_numbers_empty_blue(x+212,y-40-24,4,2,0.75,0.75,0,c_gray,1); //Not enough BP
            }
        }
        if brositemdifmax &gt; 1 //Fire Flowers
        {
            if global.MBP &gt;= 6
            {
                draw_text_transformed(x+92,y-40-24+(23*1),"Fire Flower",0.75,0.75,0);
                draw_sprite_ext(spr_brositems,1,x+64,y-22-24,0.75,0.75,0,-1,1);
                scr_draw_numbers_empty_blue(x+212,y-18-24,6,2,0.75,0.75,0,c_white,1); //Cost of 6 BP
            }
            else
            {
                draw_text_transformed_colour(x+92,y-40-24+(23*1),"Fire Flower",0.75,0.75,0,c_gray,c_gray,c_gray,c_gray,1);
                draw_sprite_ext(spr_brositems,1,x+64,y-22-24,0.75,0.75,0,c_gray,1);
                scr_draw_numbers_empty_blue(x+212,y-18-24,6,2,0.75,0.75,0,c_gray,1); //Not enough BP
            }
        }
        if brositemdifmax &gt; 2 //Jump Helmets
        {
            if global.MBP &gt;= 10
            {
                draw_text_transformed(x+92,y-40-24+(23*2),"Jump Helmet",0.75,0.75,0);
                draw_sprite_ext(spr_brositems,2,x+64,y+2-24,0.75,0.75,0,-1,1);
                scr_draw_numbers_empty_blue(x+212,y+4-24,10,2,0.75,0.75,0,c_white,1); //Cost of 10 BP
            }
            else
            {
                draw_text_transformed_colour(x+92,y-40-24+(23*2),"Fire Flower",0.75,0.75,0,c_gray,c_gray,c_gray,c_gray,1);
                draw_sprite_ext(spr_brositems,2,x+64,y+2-24,0.75,0.75,0,c_gray,1);
                scr_draw_numbers_empty_blue(x+212,y+4-24,10,2,0.75,0.75,0,c_gray,1); //Not enough BP
            }
        }
        if brositemdifmax &gt; 3 //Broken Hearts
        {
            if global.MBP &gt;= 14
            {
                draw_text_transformed(x+92,y-40-24+(23*3),"Broken Heart",0.75,0.75,0);
                draw_sprite_ext(spr_brositems,3,x+64,y+24-24,0.75,0.75,0,-1,1);
                scr_draw_numbers_empty_blue(x+212,y+26-24,14,2,0.75,0.75,0,c_white,1); //Cost of 14 BP
            }
            else
            {
                draw_text_transformed_colour(x+92,y-40-24+(23*3),"Broken Heart",0.75,0.75,0,c_gray,c_gray,c_gray,c_gray,1);
                draw_sprite_ext(spr_brositems,3,x+64,y+24-24,0.75,0.75,0,c_gray,1);
                scr_draw_numbers_empty_blue(x+212,y+26-24,14,2,0.75,0.75,0,c_gray,1); //Not enough BP
            }
        }        
        if brositemdifmax &gt; 4
        {
            //draw_sprite(spr_uparrow,-1,200,88);
            //draw_sprite(spr_downarrow,-1,304,y+180);
        }
    }
    //Run
    if battleblock = 2
    {
        drawat = 2;
        draw_sprite(spr_text_box_2,0,x+64,y-40);
        draw_sprite(spr_mariochoose2,-1,x+64,y-56+(16*movechoose));
        draw_sprite(spr_runawaycommand,0,x+102,y-30);
        draw_sprite(spr_idlecommand,0,x+102,y-16);
    }
    //Items
    if battleblock = 3
        event_user(3);
}

if phase = 3 &amp;&amp; battleblock &lt; 2 &amp;&amp; battleblock &lt;&gt; 3 //Choose enemy
{
    if targetchoose != 0
    {
        if instance_exists(obj_battlecontrol.enemyid[targetchoose])
            draw_sprite(spr_mariochoose3,-1,targetidaboutto.x,targetidaboutto.y-targetidaboutto.headz);
    }
    if targetchoose = 0
        draw_sprite(spr_mariochoose,-1,x-12,y-32);
}
if phase = 3 &amp;&amp; battleblock = 3 //Choose brother
{
    if targetchoose != 0
    {
        if instance_exists(obj_battlecontrol.broid[targetchoose])
            draw_sprite(spr_mariochoose3,-1,targetidaboutto.x,targetidaboutto.y-targetidaboutto.z-24);
    }
    if targetchoose = 0
        draw_sprite(spr_mariochoose,-1,x-12,y-32);
}

//Show Display
if phase = -3 or phase = 3 or phase = 4 or phase = 0.25 or phase = 0.5 or phase = 0.75
or phase = 5 or obj_luigib.phase = -3 or obj_luigib.phase = 3 or obj_luigib.phase = 4
or obj_luigib.phase = 0.25 or obj_luigib.phase = 0.5 or obj_luigib.phase = 0.75
or obj_luigib.phase = 5 or stance = 7 or obj_luigib.stance = 7 or stance = 8
or obj_luigib.stance = 8
{
    if global.takedamage = 1
    {
        if global.turn = 0 //If it is Mario's turn
        {
            draw_sprite(spr_mariodisplay,0,84,214); //Full Display
            //Show BP
            if global.MBP &lt;= global.maxMBP*0.10 &amp;&amp; global.turn = 0 //Show this when BP is less than 10%
                scr_draw_numbers_empty(95,222,global.MBP,3,.75,.75,0,c_red,1);
            else if global.turn = 0
                scr_draw_numbers_empty(95,222,global.MBP,3,.75,.75,0,c_aqua,1);
            //Show HP
            if global.MHP &lt;= global.maxMHP*0.10 //Show this when HP is less than 10%
                scr_draw_numbers_empty(91,222-16,global.MHP,3,.75,.75,0,c_red,1);
            else
                scr_draw_numbers_empty(91,222-16,global.MHP,3,.75,.75,0,c_yellow,1);
            draw_sprite(spr_hpdisplay,-1,76,224-16);
            draw_sprite(spr_bpdisplay,-1,80,224);
        }
        else
        {
            draw_sprite(spr_mariodisplay,0,84,214+16); //Half Display
            //Show HP
            if global.MHP &lt;= global.maxMHP*0.10 //Show this when HP is less than 10%
                scr_draw_numbers_empty(95,222,global.MHP,3,.75,.75,0,c_red,1);
            else
                scr_draw_numbers_empty(95,222,global.MHP,3,.75,.75,0,c_yellow,1);
            draw_sprite(spr_hpdisplay,-1,76,224);
        }
    }
}
else
{
    if global.turn = 0 //If it is Mario's turn
    {
        draw_sprite(spr_mariodisplay,0,84,214); //Full Display
        //Show BP
        if global.MBP &lt;= global.maxMBP*0.10 &amp;&amp; global.turn = 0 //Show this when BP is less than 10%
            scr_draw_numbers_empty(95,222,global.MBP,3,.75,.75,0,c_red,1);
        else if global.turn = 0
            scr_draw_numbers_empty(95,222,global.MBP,3,.75,.75,0,c_aqua,1);
        //Show HP
        if global.MHP &lt;= global.maxMHP*0.10 //Show this when HP is less than 10%
            scr_draw_numbers_empty(91,222-16,global.MHP,3,.75,.75,0,c_red,1);
        else
            scr_draw_numbers_empty(91,222-16,global.MHP,3,.75,.75,0,c_yellow,1);
        draw_sprite(spr_hpdisplay,-1,76,224-16);
        draw_sprite(spr_bpdisplay,-1,80,224);
    }
    else
    {
        draw_sprite(spr_mariodisplay,0,84,214+16); //Half Display
        //Show HP
        if global.MHP &lt;= global.maxMHP*0.10 //Show this when HP is less than 10%
            scr_draw_numbers_empty(95,222,global.MHP,3,.75,.75,0,c_red,1);
        else
            scr_draw_numbers_empty(95,222,global.MHP,3,.75,.75,0,c_yellow,1);
        draw_sprite(spr_hpdisplay,-1,76,224);
    }
}
//Show Enemy Bar Display
if phase = 3 &amp;&amp; control = 1 &amp;&amp; targetchoose &gt; 0 &amp;&amp; battleblock &lt;&gt; 2
{
    draw_sprite(spr_enemyhud,0,400,23);
    draw_set_font(fnt_enemyname);
    draw_set_color(c_black);
    if battleblock &lt;&gt; 3
        draw_text(400,12,obj_battlecontrol.enemyid[targetchoose].name);
    else if battleblock = 3
        draw_text(400,12,obj_battlecontrol.broid[targetchoose].name);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
