<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mplayer_3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>par_player</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0;
moving = 0;
xscale = 1;
z = 0;
zspeed = 0;
zgravity = 0;
landing = 0;
xscale = 1;
invincible = false;

jump = 0;
hammer = 0;
hand = 0;

electrodir = 0;
electromoving = 0;

x1 = x;
x2 = x;
x3 = x;
x4 = x;
x5 = x;
x6 = x;
x7 = x;
x8 = x;

y1 = y;
y2 = y;
y3 = y;
y4 = y;
y5 = y;
y6 = y;
y7 = y;
y8 = y;

dir0c = 1
dir2c = 1
dir4c = 1
dir6c = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = true;
hspeed = 0;
vspeed = 0;
image_single = dir;
alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Invincibility Frames
if invincible = true
{
    visible = !visible;
    alarm[0] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y+16

if instance_exists(obj_dark)
{
  size = 32
  draw_set_blend_mode(bm_subtract)
  surface_set_target(global.light)
  draw_ellipse_color(x-size-view_xview,y-size-view_yview-z-8,x+size-view_xview,y+size-view_yview-z-8,c_white,c_black,false)
  surface_reset_target()
  draw_set_blend_mode(bm_normal)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z+=zspeed
zspeed-=zgravity
if z&lt;landing{z=landing zspeed=0 zgravity=0}
if z&gt;landing{zgravity=1}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_lplayer_2) {otro = obj_lplayer_2}
if instance_exists(obj_lplayer_dunk) {otro = obj_lplayer_dunk}
if instance_exists(obj_lplayer_change) {otro = obj_lplayer_change}

//Press Enter Button/Key
if (gamepad_button_check_pressed(0, global.buttonStart) || keyboard_check_pressed(global.keyStart))
{
 if jump = 0 &amp;&amp; hammer = 0 &amp;&amp; hand = 0 &amp;&amp; otro.jump = 0 &amp;&amp; otro.hammer = 0 &amp;&amp; otro.hand = 0 &amp;&amp; global.electrocute = 0 &amp;&amp; !instance_exists(obj_thunder) &amp;&amp; !instance_exists(obj_fire) &amp;&amp; distance_to_object(obj_lplayer_dunk) &gt; 19
 {
   if instance_exists(obj_lplayer_dunk) {sound_play(snd_mplayer_letsgo)}
   instance_change(obj_mplayer,false)
 }
}

if moving = 1 &amp;&amp; global.electrocute = 0
{
  if point_direction(x,y,otro.x1,otro.y1) &gt; 340 or point_direction(x,y,otro.x1,otro.y1) &lt;=  20 {dir = 0}
  if point_direction(x,y,otro.x1,otro.y1) &gt;  20 &amp;&amp; point_direction(x,y,otro.x1,otro.y1) &lt;=  70 {dir = 1}
  if point_direction(x,y,otro.x1,otro.y1) &gt;  70 &amp;&amp; point_direction(x,y,otro.x1,otro.y1) &lt;= 110 {dir = 2}
  if point_direction(x,y,otro.x1,otro.y1) &gt; 110 &amp;&amp; point_direction(x,y,otro.x1,otro.y1) &lt;= 160 {dir = 3}
  if point_direction(x,y,otro.x1,otro.y1) &gt; 160 &amp;&amp; point_direction(x,y,otro.x1,otro.y1) &lt;= 200 {dir = 4}
  if point_direction(x,y,otro.x1,otro.y1) &gt; 200 &amp;&amp; point_direction(x,y,otro.x1,otro.y1) &lt;= 250 {dir = 5}
  if point_direction(x,y,otro.x1,otro.y1) &gt; 250 &amp;&amp; point_direction(x,y,otro.x1,otro.y1) &lt;= 290 {dir = 6}
  if point_direction(x,y,otro.x1,otro.y1) &gt; 290 &amp;&amp; point_direction(x,y,otro.x1,otro.y1) &lt;= 340 {dir = 7}
}

if moving = 0 {dir = otro.dir}

if !hammer = 1 &amp;&amp; !hand = 1 &amp;&amp; !otro.hammer = 1 &amp;&amp; !otro.hand = 1 &amp;&amp; !instance_exists(obj_fire) &amp;&amp; !instance_exists(obj_thunder) &amp;&amp; global.electrocute = 0
{
  if keyboard_check(vk_left)or keyboard_check(vk_right) or keyboard_check(vk_up)or keyboard_check(vk_down){moving = 1}
  if keyboard_check(vk_left)&amp;&amp; keyboard_check(vk_right) {moving = 0}
  if keyboard_check(vk_up)&amp;&amp; keyboard_check(vk_down) {moving = 0}
}

if otro.moving = 1
{
  if otro.dir = 0 &amp;&amp; otro.dir0c = 0 {moving = 0}
  if otro.dir = 1 &amp;&amp; otro.dir0c = 0 &amp;&amp; otro.dir2c = 0 {moving = 0}
  if otro.dir = 2 &amp;&amp; otro.dir2c = 0 {moving = 0}
  if otro.dir = 3 &amp;&amp; otro.dir2c = 0 &amp;&amp; otro.dir4c = 0 {moving = 0}
  if otro.dir = 4 &amp;&amp; otro.dir4c = 0 {moving = 0}
  if otro.dir = 5 &amp;&amp; otro.dir4c = 0 &amp;&amp; otro.dir6c = 0 {moving = 0}
  if otro.dir = 6 &amp;&amp; otro.dir6c = 0 {moving = 0}
  if otro.dir = 7 &amp;&amp; otro.dir6c = 0 &amp;&amp; otro.dir0c = 0 {moving = 0}
}

if landing = z &amp;&amp; jump = 0 &amp;&amp; hammer = 0 &amp;&amp; hand = 0 &amp;&amp; global.electrocute = 0
{
  if dir=0 {sprite_index=spr_mplayer_3 xscale = 1}
  if dir=1 {sprite_index=spr_mplayer_4 xscale = 1}
  if dir=2 {sprite_index=spr_mplayer_5 xscale = 1}
  if dir=3 {sprite_index=spr_mplayer_4 xscale = -1}
  if dir=4 {sprite_index=spr_mplayer_3 xscale = -1}
  if dir=5 {sprite_index=spr_mplayer_2 xscale = -1}
  if dir=6 {sprite_index=spr_mplayer_1 xscale = 1}
  if dir=7 {sprite_index=spr_mplayer_2 xscale = 1}
}

if jump = 1 &amp;&amp; zspeed &gt;0
{
  if dir=0 {sprite_index=spr_mplayer_0 image_index = 2 xscale = 1}
  if dir=1 {sprite_index=spr_mplayer_0 image_index = 3 xscale = 1}
  if dir=2 {sprite_index=spr_mplayer_0 image_index = 4 xscale = 1}
  if dir=3 {sprite_index=spr_mplayer_0 image_index = 3 xscale = -1}
  if dir=4 {sprite_index=spr_mplayer_0 image_index = 2 xscale = -1}
  if dir=5 {sprite_index=spr_mplayer_0 image_index = 1 xscale = -1}
  if dir=6 {sprite_index=spr_mplayer_0 image_index = 0 xscale = 1}
  if dir=7 {sprite_index=spr_mplayer_0 image_index = 1 xscale = 1}
}

if jump = 1 &amp;&amp; zspeed &lt;= 0
{
  if dir=0 {sprite_index=spr_mplayer_0 image_index = 2 xscale = 1}
  if dir=1 {sprite_index=spr_mplayer_0 image_index = 3 xscale = 1}
  if dir=2 {sprite_index=spr_mplayer_0 image_index = 4 xscale = 1}
  if dir=3 {sprite_index=spr_mplayer_0 image_index = 3 xscale = -1}
  if dir=4 {sprite_index=spr_mplayer_0 image_index = 2 xscale = -1}
  if dir=5 {sprite_index=spr_mplayer_0 image_index = 1 xscale = -1}
  if dir=6 {sprite_index=spr_mplayer_0 image_index = 0 xscale = 1}
  if dir=7 {sprite_index=spr_mplayer_0 image_index = 1 xscale = 1}
}

if landing = z {jump = 0}

if global.spin3 = 1 {x = otro.x y = otro.y z = otro.z visible = false}
if global.spin3 = 0 {visible = true}

if hammer = 1 &amp;&amp; moving = 2
{
  if dir=0 {sprite_index=spr_mplayer_8 xscale = 1}
  if dir=1 {sprite_index=spr_mplayer_9 xscale = 1}
  if dir=2 {sprite_index=spr_mplayer_10 xscale = 1}
  if dir=3 {sprite_index=spr_mplayer_9 xscale = -1}
  if dir=4 {sprite_index=spr_mplayer_8 xscale = -1}
  if dir=5 {sprite_index=spr_mplayer_7 xscale = -1}
  if dir=6 {sprite_index=spr_mplayer_6 xscale = 1}
  if dir=7 {sprite_index=spr_mplayer_7 xscale = 1}
}
if hammer = 1 &amp;&amp; image_index &gt; 5 {hammer = 0 moving = 0}

if hand = 1 &amp;&amp; keyboard_check(ord("Z"))
{
  if dir=0 {sprite_index=spr_mplayer_13 xscale = 1}
  if dir=1 {sprite_index=spr_mplayer_14 xscale = 1}
  if dir=2 {sprite_index=spr_mplayer_15 xscale = 1}
  if dir=3 {sprite_index=spr_mplayer_14 xscale = -1}
  if dir=4 {sprite_index=spr_mplayer_13 xscale = -1}
  if dir=5 {sprite_index=spr_mplayer_12 xscale = -1}
  if dir=6 {sprite_index=spr_mplayer_11 xscale = 1}
  if dir=7 {sprite_index=spr_mplayer_12 xscale = 1}
  }
if hand = 1 &amp;&amp; moving = 0 &amp;&amp; !keyboard_check (ord("Z")) {hand = 1 moving = 2 global.fire = 1}

if global.fire = 1 &amp;&amp; !keyboard_check (ord("Z"))
{
  moving = 2
  if image_index &gt; 4 {global.fire = 0 moving = 0 hand = 0}
}
if global.electrocute = 1 {moving = 1}

if global.electrocute = 1
{
  if dir=0 {sprite_index=spr_mplayer_48 xscale = 1}
  if dir=1 {sprite_index=spr_mplayer_49 xscale = 1}
  if dir=2 {sprite_index=spr_mplayer_50 xscale = 1}
  if dir=3 {sprite_index=spr_mplayer_49 xscale = -1}
  if dir=4 {sprite_index=spr_mplayer_48 xscale = -1}
  if dir=5 {sprite_index=spr_mplayer_47 xscale = -1}
  if dir=6 {sprite_index=spr_mplayer_46 xscale = 1}
  if dir=7 {sprite_index=spr_mplayer_47 xscale = 1}
}


if dir = otro.dir {global.can = 1} else {global.can = 0}
if z = otro.z {global.zcan = 1} else {global.zcan = 0}

if not keyboard_check(vk_left)&amp;&amp; not keyboard_check(vk_right) &amp;&amp; not keyboard_check(vk_up)&amp;&amp; not keyboard_check(vk_down) &amp;&amp; !hammer = 1 &amp;&amp; !hand = 1 &amp;&amp; global.electrocute = 0
{moving = 0}

if moving = 0 {image_speed = 0 image_index = 0}
if moving = 1 {image_speed = 0.6}
if moving = 2 {image_speed = 0.6}

//Determine distance to Luigi
if distance_to_object(otro) &gt; 19
{
    dir0c = 0;
    dir4c = 0;
    dir6c = 0;
    dir2c = 0;
}

//Luigi's movements with Mario
if moving = 1 &amp;&amp; hammer = 0 &amp;&amp; hand = 0 &amp;&amp; otro.hammer = 0 &amp;&amp; otro.hand = 0 &amp;&amp; global.electrocute = 0
{
  if dir = 0 &amp;&amp; dir0c = 1 {x+=4}    
  if dir = 1 {if dir0c = 1 &amp;&amp; dir2c = 1 {x+=3 y+=-3}
        else {if dir0c = 1 &amp;&amp; dir2c = 0 {x+=4}
              if dir0c = 0 &amp;&amp; dir2c = 1 {y-=4}}}
  if dir = 2 &amp;&amp; dir2c = 1 {y-=4}     
  if dir = 3 {if dir2c = 1 &amp;&amp; dir4c = 1 {x-=3 y-=3}
        else {if dir2c = 1 &amp;&amp; dir4c = 0 {y-=4}
              if dir2c = 0 &amp;&amp; dir4c = 1 {x-=4}}}
  if dir = 4 &amp;&amp; dir4c = 1 {x-=4} 
  if dir = 5 {if dir4c = 1 &amp;&amp; dir6c = 1 {x-=3 y+=3}
        else {if dir4c = 1 &amp;&amp; dir6c = 0 {x-=4}
              if dir4c = 0 &amp;&amp; dir6c = 1 {y+=4}}}
  if dir = 6 &amp;&amp; dir6c = 1 {y+=4}
  if dir = 7 {if dir6c = 1 &amp;&amp; dir0c = 1 {x+=3 y+=3}
        else {if dir6c = 1 &amp;&amp; dir0c = 0 {y+=4}
              if dir6c = 0 &amp;&amp; dir0c = 1 {x+=4}}}
}

//Luigi's movements when electrocuting Mario?
if global.electrocute = 1 &amp;&amp; hand = 0
{
  if dir = 0 &amp;&amp; dir0c = 1 {x+=8}
  if dir = 1 {if dir0c = 1 &amp;&amp; dir2c = 1 {x+=7 y+=-7}
        else {if dir0c = 1 &amp;&amp; dir2c = 0 {x+=8}
              if dir0c = 0 &amp;&amp; dir2c = 1 {y-=8}}}
  if dir = 2 &amp;&amp; dir2c = 1 {y-=8}
  if dir = 3 {if dir2c = 1 &amp;&amp; dir4c = 1 {x-=7 y-=7}
        else {if dir2c = 1 &amp;&amp; dir4c = 0 {y-=8}
              if dir2c = 0 &amp;&amp; dir4c = 1 {x-=8}}}
  if dir = 4 &amp;&amp; dir4c = 1 {x-=8}
  if dir = 5 {if dir4c = 1 &amp;&amp; dir6c = 1 {x-=7 y+=7}
        else {if dir4c = 1 &amp;&amp; dir6c = 0 {x-=8}
              if dir4c = 0 &amp;&amp; dir6c = 1 {y+=8}}}
  if dir = 6 &amp;&amp; dir6c = 1 {y+=8}
  if dir = 7 {if dir6c = 1 &amp;&amp; dir0c = 1 {x+=7 y+=7}
        else {if dir6c = 1 &amp;&amp; dir0c = 0 {y+=8}
              if dir6c = 0 &amp;&amp; dir0c = 1 {x+=8}}}
}

dir0c = 1;
dir2c = 1;
dir4c = 1;
dir6c = 1;

//Check Collisions
scr_collision_checking();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_zmask">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z &gt;= other.z {landing = other.z}
if z+20 &gt;= other.z-24 &amp;&amp; landing &lt; other.z {zspeed = -2}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.hand2 = 1 &amp;&amp; !otro.hammer = 1 &amp;&amp; !otro.hand = 1
&amp;&amp; moving = 0 &amp;&amp; global.can = 1 &amp;&amp; global.zcan = 1
&amp;&amp; global.dontmove = 0 &amp;&amp; distance_to_object(otro) &lt; 19
&amp;&amp; !instance_exists(obj_fire) &amp;&amp; !instance_exists(obj_thunder)
&amp;&amp; !instance_exists(obj_lplayer_change)
{
    hand = 1;
    moving = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fix animation errors while walking
if sprite_index = spr_mplayer_1 or sprite_index = spr_mplayer_2
or sprite_index = spr_mplayer_3 or sprite_index = spr_mplayer_4
or sprite_index = spr_mplayer_5
    image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dir = 0 or dir = 1 or dir = 7
{
    draw_sprite(spr_shadow,zgravity,x-6,y-landing);
    draw_sprite_ext(sprite_index,image_index,x-6,y-z,xscale,1,0,c_white,1);
}
else if dir = 2
{
    draw_sprite(spr_shadow,zgravity,x,(y+6)-landing);
    draw_sprite_ext(sprite_index,image_index,x,(y+6)-z,xscale,1,0,c_white,1);
}
else if dir = 6
{
    draw_sprite(spr_shadow,zgravity,x,(y-6)-landing);
    draw_sprite_ext(sprite_index,image_index,x,(y-6)-z,xscale,1,0,c_white,1);
}
else if dir = 3 or dir = 4 or dir = 5
{
    draw_sprite(spr_shadow,zgravity,x+6,y-landing);
    draw_sprite_ext(sprite_index,image_index,x+6,y-z,xscale,1,0,c_white,1);
}
 

/*Directions
dir = 0 is Right
dir = 1 is Up Right
dir = 2 is Up
dir = 3 is Up Left
dir = 4 is Left
dir = 5 is Down Left
dir = 6 is Down
dir = 7 is Down Right
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !otro.hammer = 1 &amp;&amp; !otro.hand = 1 &amp;&amp; distance_to_object(otro) &lt; 19 &amp;&amp; global.dontmove = 0 &amp;&amp; !instance_exists(obj_fire) &amp;&amp; !instance_exists(obj_thunder) &amp;&amp; !instance_exists(obj_lplayer_change)
{
  if global.jump2 = 1 &amp;&amp; z = landing &amp;&amp; jump = 0
  {
    zspeed = 6
    jump = 1
    audio_play_sound(snd_jump,0,0);
  }
  if global.super = 1
  {
    if global.zcan = 1
    {
      global.spin = 1
    }
    if global.zcan = 0 &amp;&amp; z = landing
    {
      zspeed = 5
      jump = 1
      audio_play_sound(snd_jump,0,0);
    }
  }
  if global.hammer2 = 1 &amp;&amp; moving = 0 &amp;&amp; global.can = 1 &amp;&amp; global.zcan = 1 &amp;&amp; !distance_to_object(obj_metal_solid) &lt; 1
  {
    hammer = 1
    moving = 2
    if instance_exists(obj_lplayer_2) {audio_play_sound(snd_hammer_dunk,0,0);}
    if instance_exists(obj_lplayer_dunk) {audio_play_sound(snd_hammer,0,0);}
  }
  if global.hand2 = 1 &amp;&amp; moving = 0 &amp;&amp; global.can = 1  &amp;&amp; global.zcan = 1
  {
    instance_create(x,y,obj_fire)
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
