<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_brositems</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Attack to use in battle
switch (global.turn)
{
    case 0:
        switch (obj_mariob.movechoose)
        {
            case 1:
                sprite_index = spr_greenshellb;
                attacknum = 0;
                break;
            case 2:
                sprite_index = spr_fireflowerb;
                attacknum = 1;
                break;
            case 3:
                sprite_index = spr_jumphelmetb;
                attacknum = 2;
                break;
            case 4:
                sprite_index = spr_brokenheartb;
                attacknum = 3;
                break;
            default:
                sprite_index = spr_greenshellb;
                attacknum = 0;
                break;
        }
        break;
    case 1:
        switch (obj_luigib.movechoose)
        {
            case 1:
                sprite_index = spr_greenshellb;
                attacknum = 0;
                break;
            case 2:
                sprite_index = spr_fireflowerb;
                attacknum = 1;
                break;
            case 3:
                sprite_index = spr_jumphelmetb;
                attacknum = 2;
                break;
            case 4:
                sprite_index = spr_brokenheartb;
                attacknum = 3;
                break;
            default:
                sprite_index = spr_greenshellb;
                attacknum = 0;
                break;
        }
        break;
}

//Grow item
image_xscale = 0;
image_yscale = 0;
alarm[0] = 50;

image_speed = .275;
z = 0;
ground = 1;
ready = 0;
zspeed = 0;
zgravity = -1;
zgravityon = 0;
falling = 0;
amount = 0;
ID = 0;

rank = 0; //Rank increments
phase = 0; //Phase of the attack
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_mariob.targetx = 0;
obj_mariob.targety = 0;
obj_luigib.targetx = 0;
obj_luigib.targety = 0;
obj_mariob.moveto = 0;
obj_luigib.moveto = 0;
obj_mariob.stance = 1;
obj_luigib.stance = 1;

//Excellent Hit
if background_visible[7] = true
    background_visible[7] = false;
    
with obj_battlecontrol alarm[2] = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ready = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ID.hurt = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Excellent Hit
if background_visible[7] = false
    background_visible[7] = true;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(attacknum)
{
    //Begin Green Shell Attack
    case 0:
        obj_mariob.sprite_index = spr_mariobgreenshellstance;
        obj_luigib.sprite_index = spr_luigibgreenshellstance;  
        audio_play_sound(snd_kick,0,0);
        z = 0;
        //Green Shell Attack Phases
        //1 for shell heads to enemy from Mario
        //2 for shell heads to Luigi from enemy
        //3 for shell heads to enemy from Luigi
        //4 for shell heads to Mario from enemy
        obj_mariob.moveto = 5.1;
        obj_luigib.moveto = 5.1;
        obj_mariob.stance = 15;
        obj_luigib.stance = 15;
    break;
    //Begin Fire Flower Attack
    case 1:
        obj_mariob.moveto = 5.2;
        obj_luigib.moveto = 5.2;
        obj_mariob.stance = 0;
        obj_luigib.stance = 0;
        //Fire Flower Attack Phases
        //1 for Mario's firing turn
        //2 for Luigi's firing turn
        //3 for both firing
        with obj_mariob image_index = 0;
        with obj_mariob image_speed = 0.275;
        with obj_mariob sprite_index = spr_mariobfireflowertransform;
        with obj_luigib image_index = 0;
        with obj_luigib image_speed = 0.275;
        with obj_luigib sprite_index = spr_luigibfireflowertransform;
        audio_play_sound(snd_powerup,0,0);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mario throws the item
if global.turn = 0
{
    //Green Shells
    if attacknum = 0
    {
        with obj_mariob image_index = 0;
        with obj_mariob image_speed = 0.275;
        with obj_mariob sprite_index = spr_mariobgreenshellkick;
        with obj_luigib image_index = 0;
        with obj_luigib image_speed = 0.275;
        with obj_luigib sprite_index = spr_luigibgreenshellstance;
        if zgravityon = 0
        {
            z = 0;
            audio_play_sound(snd_throw,0,0);
        }  
    }  
    //Fire Flower
    if attacknum = 1
        visible = false;
}

//Luigi throws the item
if global.turn = 1
{
    //Green Shells
    if attacknum = 0
    {
        with obj_mariob image_index = 0;
        with obj_mariob image_speed = 0.275;
        with obj_mariob sprite_index = spr_mariobgreenshellstance;
        with obj_luigib image_index = 0;
        with obj_luigib image_speed = 0.275;
        with obj_luigib sprite_index = spr_luigibgreenshellkick;
        if zgravityon = 0
        {
            z = 0;
            audio_play_sound(snd_throw,0,0);
        }  
    }  
    //Fire Flower
    if attacknum = 1
        visible = false;
}
alarm[2] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Grow the item
if image_xscale &lt; 1 &amp;&amp; image_yscale &lt; 1
{
    image_xscale += 0.2;
    image_yscale += 0.2;
    alarm[0] = 2;
}
else
{
    if global.turn = 0
        with obj_mariob image_single = 18;
    else if global.turn = 1
        with obj_luigib image_single = 18;
    audio_play_sound(snd_badge,0,0);
    ready = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(global.turn)
{
    case 0:
        depth = obj_mariob.depth - 1;
        break;
    case 1:
        depth = obj_luigib.depth - 1;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Controls
if gamepad_button_check_pressed(0, global.buttonA) || keyboard_check_pressed(global.keyA) //A
    scr_Mbrosattack();
if gamepad_button_check_pressed(0, global.buttonB) || keyboard_check_pressed(global.keyB) //B
    scr_Lbrosattack();

//Make gravity
if zgravityon = 1
    zspeed += zgravity;
z += zspeed; //Changes the height of the jump (the greater z is, the higher Mario is)
if z &gt; 11
    falling = 1;
if z &lt;= 0
{
    if falling = 1
        visible = false;
    zspeed = 0;
    z = 0;
    zgravityon = 0;
    ground = 1;
}
if ground = 0 &amp;&amp; obj_mariob.moveto = 7 &amp;&amp; global.turn = 0
    x -= 1;
if ground = 0 &amp;&amp; obj_mariob.moveto = 10 &amp;&amp; global.turn = 0
{
    x -= 1;
    y += 3;
}
if ground = 0 &amp;&amp; obj_luigib.moveto = 7 &amp;&amp; global.turn = 1
    x -= 1;
if ground = 0 &amp;&amp; obj_luigib.moveto = 10 &amp;&amp; global.turn = 1
    y -= 3;

//Bros Attacks
switch (attacknum)
{
    case 0: //Green Shells
    {
        switch (phase)
        {
            case 1: //Heads to enemy from Mario
                if global.turn = 0 &amp;&amp; global.hitrank &lt; 2
                    mp_linear_step(obj_mariob.targetx,obj_mariob.targety,4,0);
                else if global.turn = 1 &amp;&amp; global.hitrank &lt; 2
                    mp_linear_step(obj_luigib.targetx,obj_luigib.targety,4,0);
                else if global.turn = 0 &amp;&amp; global.hitrank &gt; 1
                    mp_linear_step(obj_mariob.targetx,obj_mariob.targety,4.5,0);
                else if global.turn = 1 &amp;&amp; global.hitrank &gt; 1
                    mp_linear_step(obj_luigib.targetx,obj_luigib.targety,4.5,0);
            break;
            case 2: //Heads to Luigi from enemy
                if global.hitrank &lt; 2
                    mp_linear_step(obj_luigib.x-32,obj_luigib.y+4,4,0);
                else if global.hitrank &gt; 1
                    mp_linear_step(obj_luigib.x-32,obj_luigib.y+4,4.5,0);
            break;
            case 3: //Heads to enemy from Luigi
                if global.turn = 0 &amp;&amp; global.hitrank &lt; 2
                    mp_linear_step(obj_mariob.targetx,obj_mariob.targety,4,0);
                else if global.turn = 1 &amp;&amp; global.hitrank &lt; 2
                    mp_linear_step(obj_luigib.targetx,obj_luigib.targety,4,0);
                else if global.turn = 0 &amp;&amp; global.hitrank &gt; 1
                    mp_linear_step(obj_mariob.targetx,obj_mariob.targety,4.5,0);
                else if global.turn = 1 &amp;&amp; global.hitrank &gt; 1
                    mp_linear_step(obj_luigib.targetx,obj_luigib.targety,4.5,0);
            break;
            case 4: //Heads to Mario from enemy
            if global.hitrank &lt; 2
                mp_linear_step(obj_mariob.x-32,obj_mariob.y,4,0);
            else if global.hitrank &gt; 1
                mp_linear_step(obj_mariob.x-32,obj_mariob.y,4.5,0);
            break;
            case 5: //Head off screen (left)
            if global.hitrank &lt; 2
                mp_linear_step(x-32,y,4,0);
            else if global.hitrank &gt; 1
                mp_linear_step(x-32,y,4.5,0);
            break;
            case 6: //Head off screen (right)
                if global.turn = 0 &amp;&amp; global.hitrank &lt; 2
                    mp_linear_step(obj_mariob.targetx + room_width,obj_mariob.targety,4,0);
                else if global.turn = 1 &amp;&amp; global.hitrank &lt; 2
                    mp_linear_step(obj_luigib.targetx + room_width,obj_luigib.targety,4,0);
                else if global.turn = 0 &amp;&amp; global.hitrank &gt; 1
                    mp_linear_step(obj_mariob.targetx + room_width,obj_mariob.targety,4.5,0);
                else if global.turn = 1 &amp;&amp; global.hitrank &gt; 1
                    mp_linear_step(obj_luigib.targetx + room_width,obj_luigib.targety,4.5,0);
            break;
        }
        if x = obj_mariob.x-32 &amp;&amp; y = obj_mariob.y
        {
            obj_mariob.stance = 17;
            obj_mariob.image_index = 0;
            audio_play_sound(snd_mario_woah,0,0);
            phase = 5;
        }
        if x = obj_luigib.x-32 &amp;&amp; y = obj_luigib.y+4
        {
            obj_luigib.stance = 17;
            obj_luigib.image_index = 0;
            audio_play_sound(snd_luigi_auhhh,0,0);
            phase = 5;
        }
        if phase = 1 or phase = 3
        {
            if obj_mariob.targetchoose = 0 &amp;&amp; global.turn = 0
                phase = 6;
            if obj_luigib.targetchoose = 0 &amp;&amp; global.turn = 1
                phase = 6;
        }        
    }
    break;
    /*case 1: //Fire Flowers
        switch (phase)
        {
            case 1: //Mario's turn
                break;
            case 2: //Luigi's turn
                break;
            case 3: //Both Mario's and Luigi's turn
                break;
        }
        break;*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemysky">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 6;
if instance_exists(obj_rankbattle)
    with obj_rankbattle instance_destroy();
instance_create(x-48,y-48,obj_rankbattle);
with obj_rankbattle image_single = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemyspikedground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.hurt = 0
{
    other.hurt = 1;
    ID = other;
    if (obj_battlecontrol.enemyid[obj_mariob.targetchoose] = other &amp;&amp; global.turn = 0)
    or (obj_battlecontrol.enemyid[obj_luigib.targetchoose] = other &amp;&amp; global.turn = 1)
    {
        switch (attacknum)
        {
            case 0:
                event_user(0);
                break;
        }
    }
}

global.posx = x;
global.posy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemyground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.hurt = 0
{
    other.hurt = 1;
    ID = other;
    if (obj_battlecontrol.enemyid[obj_mariob.targetchoose] = other &amp;&amp; global.turn = 0)
    or (obj_battlecontrol.enemyid[obj_luigib.targetchoose] = other &amp;&amp; global.turn = 1)
    {
        switch (attacknum)
        {
            case 0:
                event_user(0);
                break;
        }
    }
}

global.posx = x;
global.posy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fire Flowers

global.damage = 0;
with obj_mariob event_user(5); //Determine luck
global.damage += round(global.Mpow/2 - ID.def/100); //Takes Mario's pow for damage
global.damage += round(global.Lpow/2 - ID.def/100); //Takes Luigi's pow for damage

if global.luckyhit = true //Lucky Hit
{
    audio_play_sound(snd_luckyhit,0,0);
    ID.hurt = 1;
    global.damage += global.Mlvl; //Adds certain damage based on what level Mario is
}

if amount &gt;= 44
    ID.hp += round(-global.damage); //Deals the damage based on Mario's pow
else if amount &gt;= 24 &amp;&amp; amount &lt; 44
    ID.hp += round(-global.damage/1.5); //Deals the damage based on Mario's pow
else if amount &gt;= 12 &amp;&amp; amount &lt; 24
    ID.hp += round(-global.damage/2); //Deals the damage based on Mario's pow
else if amount &gt;= 0 &amp;&amp; amount &lt; 12
    ID.hp += round(-global.damage/2.5); //Deals the damage based on Mario's pow
instance_create(x,y,obj_pointsbattle);

if !instance_exists(obj_rankbattle)
{
    if amount &gt;= 44
    {
        global.hitrank = 3;
        audio_play_sound(snd_excellenthit,0,0);
        alarm[3] = 2;
    }
    else if amount &gt;= 24 &amp;&amp; amount &lt; 44
    {
        audio_play_sound(snd_greathit,0,0);
        global.hitrank = 2;
    }
    else if amount &gt;= 12 &amp;&amp; amount &lt; 24
    {
        audio_play_sound(snd_goodhit,0,0);
        global.hitrank = 1;
    }
    else if amount &gt;= 0 &amp;&amp; amount &lt; 12
    {
        audio_play_sound(snd_okhit,0,0);
        global.hitrank = 0;
    }
    
    if amount &lt; 4
    {
        instance_create(x,y,obj_rankbattle);
        obj_rankbattle.image_single = global.hitrank;
        amount = 0;
    }
}
if !instance_exists(obj_pointsbattle)
{
    instance_create(x,y,obj_pointsbattle);
    global.totaldamage+= global.damage;
}
if ID.hurt = 1
    alarm[4] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Green Shells
switch (phase)
{
    case 1:
        with obj_mariob event_user(5); //Determine luck
        global.damage = round(global.Mpow/2 - other.def/100); //Takes Mario's pow for damage
        break;
    case 3:
        with obj_luigib event_user(5); //Determine Luck
        global.damage = round(global.Lpow/2 - other.def/100); //Takes Luigi's pow for damage
        break;
}

if global.luckyhit = true //Lucky Hit
{
    audio_play_sound(snd_luckyhit,0,0);
    other.hurt = 1;
    switch (phase)
    {
        case 1:
            global.damage+= global.Mlvl; //Adds certain damage based on what level Mario is
            break;
        case 3:
            global.damage+= global.Llvl; //Adds certain damage based on what level Luigi is
            break;
    }
    other.hp += -global.damage;
    instance_create(x,y,obj_pointsbattle);
}
else
    other.hp += -global.damage; //Deals the damage based on Mario's pow
if !instance_exists(obj_rankbattle)
{
    rank += 0.5;
    if rank &gt;= 3
    {
        global.hitrank = 3;
        audio_play_sound(snd_excellenthit,0,0);
        alarm[3] = 2;
    }
    else if rank = 2
    {
        audio_play_sound(snd_greathit,0,0);
        global.hitrank = 2;
    }
    else if rank = 1
    {
        global.hitrank = 1;
        audio_play_sound(snd_goodhit,0,0);
    }
    else if rank = 0
    {
        global.hitrank = 0;
        audio_play_sound(snd_okhit,0,0);
        audio_play_sound(snd_hit,0,0);
    }
    
    if rank = 0 or rank = 1 or rank = 2 or rank = 3
    {
        instance_create(x,y,obj_rankbattle);
        obj_rankbattle.image_single = global.hitrank;
    }
}
if !instance_exists(obj_pointsbattle)
{
    instance_create(x,y,obj_pointsbattle);
    global.totaldamage+= global.damage;
}
if other.hurt = 1
{
    switch (phase)
    {
        case 1:
            phase = 2;
            obj_mariob.sprite_index = spr_mariobgreenshellstance;
            obj_luigib.sprite_index = spr_luigibgreenshellstance2;                
            break;
        case 3:
            phase = 4;
            obj_mariob.sprite_index = spr_mariobgreenshellstance2;
            obj_luigib.sprite_index = spr_luigibgreenshellstance;     
            break;       
    }
    alarm[4] = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x &lt; 0
    alarm[3] = 50;
else if x &gt; room_width
    alarm[3] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw sprite
draw_sprite_ext(sprite_index,image_index,x,y-z,image_xscale,image_yscale,0,-1,1);

//Show A button
if global.turn = 0 &amp;&amp; ready = 1
    draw_sprite_ext(spr_mariochoose,-1,room_width-16,room_height-8,1,1,0,-1,1);
else if global.turn = 1 &amp;&amp; ready = 1
    draw_sprite_ext(spr_luigichoose,-1,room_width-16,room_height-8,1,1,0,-1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
