<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The image is going to zoom in, so its initial size should be VERY big and shrink until it gets very small.
//This is a variable to keep us from having to type "image_xscale/image_yscale" over and over again
scale = 0;
audio_stop_sound(global.music);
audio_stop_all();
ready = 0;
targetid = 0;
trigger = 0;
image_speed = .275;
global.roomin = room;
alarm[0] = 2;
if global.finalboss = true
    audio_play_sound(snd_bowser_showtime,0,0);
else if global.strike = 4
{
    audio_play_sound(snd_mario_mamamia,0,0);
    audio_play_sound(snd_luigi_mamamia,0,0);
}
else
    audio_play_sound(snd_mario_letsgo,0,0);
alarm[1] = 90;
speed = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Start the battle
if global.strike &gt; 0 &amp;&amp; global.strike &lt; 4
{
    //Attack all enemies in the battle
    if obj_battlecontrol.enemyid[0] &gt; 0
    {
        obj_mariob.targetx = obj_battlecontrol.enemyid[0].x;
        obj_mariob.targety = obj_battlecontrol.enemyid[0].y;
        obj_mariob.targetid = obj_battlecontrol.enemyid[0];
    }
    //Otherwise, choose the single enemy in the battle
    else if obj_battlecontrol.enemyid[1] &gt; 0
    {
        obj_mariob.targetx = obj_battlecontrol.enemyid[1].x;
        obj_mariob.targety = obj_battlecontrol.enemyid[1].y;
        obj_mariob.targetid = obj_battlecontrol.enemyid[1];
    }
    else if obj_battlecontrol.enemyid[2] &gt; 0
    {
        obj_mariob.targetx = obj_battlecontrol.enemyid[2].x;
        obj_mariob.targety = obj_battlecontrol.enemyid[2].y;
        obj_mariob.targetid = obj_battlecontrol.enemyid[2];
    }
    else if obj_battlecontrol.enemyid[3] &gt; 0
    {
        obj_mariob.targetx = obj_battlecontrol.enemyid[3].x;
        obj_mariob.targety = obj_battlecontrol.enemyid[3].y;
        obj_mariob.targetid = obj_battlecontrol.enemyid[3];
    }
    else if obj_battlecontrol.enemyid[4] &gt; 0
    {
        obj_mariob.targetx = obj_battlecontrol.enemyid[4].x;
        obj_mariob.targety = obj_battlecontrol.enemyid[4].y;
        obj_mariob.targetid = obj_battlecontrol.enemyid[4];
    }
    else
    {
        obj_mariob.targetx = obj_battlecontrol.enemyid[5].x;
        obj_mariob.targety = obj_battlecontrol.enemyid[5].y;
        obj_mariob.targetid = obj_battlecontrol.enemyid[5];
    }
}
else if global.strike &gt; 4
{
    //Attack all enemies in the battle
    if obj_battlecontrol.enemyid[0] &gt; 0
    {
        obj_luigib.targetx = obj_battlecontrol.enemyid[0].x;
        obj_luigib.targety = obj_battlecontrol.enemyid[0].y;
        obj_luigib.targetid = obj_battlecontrol.enemyid[0];
    }
    //Otherwise, choose the single enemy in the battle
    else if obj_battlecontrol.enemyid[1] &gt; 0
    {
        obj_luigib.targetx = obj_battlecontrol.enemyid[1].x;
        obj_luigib.targety = obj_battlecontrol.enemyid[1].y;
        obj_luigib.targetid = obj_battlecontrol.enemyid[1];
    }
    else if obj_battlecontrol.enemyid[2] &gt; 0
    {
        obj_luigib.targetx = obj_battlecontrol.enemyid[2].x;
        obj_luigib.targety = obj_battlecontrol.enemyid[2].y;
        obj_luigib.targetid = obj_battlecontrol.enemyid[2];
    }
    else if obj_battlecontrol.enemyid[3] &gt; 0
    {
        obj_luigib.targetx = obj_battlecontrol.enemyid[3].x;
        obj_luigib.targety = obj_battlecontrol.enemyid[3].y;
        obj_luigib.targetid = obj_battlecontrol.enemyid[3];
    }
    else if obj_battlecontrol.enemyid[4] &gt; 0
    {
        obj_luigib.targetx = obj_battlecontrol.enemyid[4].x;
        obj_luigib.targety = obj_battlecontrol.enemyid[4].y;
        obj_luigib.targetid = obj_battlecontrol.enemyid[4];
    }
    else
    {
        obj_luigib.targetx = obj_battlecontrol.enemyid[5].x;
        obj_luigib.targety = obj_battlecontrol.enemyid[5].y;
        obj_luigib.targetid = obj_battlecontrol.enemyid[5];
    }
}

//All Strikes
if global.strike = 7 //Luigi Hand 1st Strike
{
    obj_luigib.alarm[7] = 2;
    obj_luigib.phase = 0.25;
    obj_luigib.zspeed = 0;
    obj_luigib.stance = 0; //stance 0 means that he is not in a stance
    obj_luigib.control = 0;
    obj_mariob.phase = 0;
    global.turn = 1;
}
else if global.strike = 6 //Luigi Hammer 1st Strike
{
    obj_luigib.alarm[6] = 2;
    obj_luigib.phase = 0.25;
    obj_luigib.zspeed = 0;
    obj_luigib.stance = 0; //stance 0 means that he is not in a stance
    obj_luigib.control = 0;
    obj_mariob.phase = 0;
    global.turn = 1;
}
else if global.strike = 5 //Luigi Jump 1st Strike
{
    obj_luigib.alarm[5] = 2;
    obj_luigib.phase = 0.25;
    obj_luigib.zspeed = 0;
    obj_luigib.stance = 0; //stance 0 means that he is not in a stance
    obj_luigib.control = 0;
    obj_mariob.phase = 0;
    global.turn = 1;
}
else if global.strike = 4 //Enemy 1st Strike
    global.turn = 2;
else if global.strike = 3 //Mario Hand 1st Strike
{
    obj_mariob.alarm[7] = 2;
    obj_mariob.phase = 0.25;
    obj_mariob.zspeed = 0;
    obj_mariob.stance = 0; //stance 0 means that he is not in a stance
    obj_mariob.control = 0;
    obj_luigib.phase = 0;
    global.turn = 0;
}
else if global.strike = 2 //Mario Hammer 1st Strike
{
    obj_mariob.alarm[6] = 2;
    obj_mariob.phase = 0.25;
    obj_mariob.zspeed = 0;
    obj_mariob.stance = 0; //stance 0 means that he is not in a stance
    obj_mariob.control = 0;
    obj_luigib.phase = 0;
    global.turn = 0;
}
else if global.strike = 1 //Mario Jump 1st Strike
{
    obj_mariob.alarm[5] = 2;
    obj_mariob.phase = 0.25;
    obj_mariob.zspeed = 0;
    obj_mariob.stance = 0; //stance 0 means that he is not in a stance
    obj_mariob.control = 0;
    obj_luigib.phase = 0;
    global.turn = 0;
}
else //Neutral Encounter
    with obj_battlecontrol event_user(8);
//Play Battle Music
audio_sound_gain(global.music,0.7,0);
music_play(global.music);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Enter the Battle
room_goto(global.battleroom); //for now
//room_goto(global.battleroom);
if global.finalboss &lt;&gt; true &amp;&amp; global.strike &lt;&gt; 4
    audio_play_sound(snd_luigi_okeydokey,0,0);
alarm[2] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Now we can draw the effect
ready = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready &gt; 0
    scale += 0.075;
    
//This makes it stick in the center of the screen.
if global.finalboss = true
{
    x = view_xview[0]+160;
    y = view_yview[0]+136;
}
else
{
    x = view_xview[0]+160;
    y = view_yview[0]+120;
}

//Make image_xscale and image_yscale equal "scale"
//This is so that the sprite's bounding box will grow/shrink too
image_xscale = scale;
image_yscale = scale;

if scale &gt; 18
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_alpha = 1;
if ready = 1
    ready = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Prevent black circles from NOT drawing
//draw_set_alpha(1);

///Draw the circle
if ready = 0
    exit;
//Draw the sprite for the final boss
if global.finalboss = true
{
    //Draw the sprite
    if ready = 1
    {
        draw_sprite_ext(spr_battlestart,-1,x,y,scale,scale,0,-1,1);
        draw_sprite_ext(spr_bowserbattlestart,-1,x,y,scale,scale,0,-1,1);
    }
    if ready = 2
        draw_sprite_ext(spr_battlestart3,-1,x,y,scale,scale,0,-1,1);
}
else
{
    //Draw the sprite
    if ready = 1
    {
        draw_sprite_ext(spr_battlestart,-1,x,y,scale,scale,0,-1,1);
        draw_sprite_ext(spr_mariobattlestart,-1,x,y,scale,scale,0,-1,1);
    }
    if ready = 2
        draw_sprite_ext(spr_battlestart2,-1,x,y,scale,scale,0,-1,1);
}
/*else
{
    //Draw the sprite
    if ready = 1
    {
        draw_sprite_ext(spr_battlestart,-1,x,y,scale,scale,0,-1,1);
        draw_sprite_ext(spr_yoshibattlestart,-1,x,y,scale,scale,0,-1,1);
    }
    if ready = 2
        draw_sprite_ext(spr_battlestart4,-1,x,y,scale,scale,0,-1,1);
}*/

/*Now draw black rectangles on all 4 sides of the sprite to make the rest of the screen black

//Top part
draw_rectangle_color(view_xview[0]-1,view_yview[0]-1,view_xview[0]+view_wview[0],bbox_top,0,0,0,0,0);
//bottom part
draw_rectangle_color(view_xview[0]-1,bbox_bottom,view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],0,0,0,0,0);
//left part
draw_rectangle_color(view_xview[0]-1,bbox_top,bbox_left,bbox_bottom,0,0,0,0,0);
//right part
draw_rectangle_color(bbox_right,bbox_top,view_xview[0]+view_wview[0],bbox_bottom,0,0,0,0,0);*/

//If the sprite gets too small it disappears for some reason and leaves a "window" where you
//can see what's behind it. To prevent this, draw a small black square over the sprite once it gets really small
if scale &lt; 0.25
    draw_rectangle_color(bbox_left,bbox_top,bbox_right,bbox_bottom,0,0,0,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
