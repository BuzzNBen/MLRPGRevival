<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lplayer_3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>par_player</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0;
moving = 0;
xscale = 1;
z = 0;
zspeed = 0;
zgravity = 0;
landing = 0;
xscale = 1;
invincible = false;

jump = 0;
hammer = 0;
hand = 0;

electrodir = 0;
electromoving = 0;

x1 = x;
x2 = x;
x3 = x;
x4 = x;
x5 = x;
x6 = x;
x7 = x;
x8 = x;

y1 = y;
y2 = y;
y3 = y;
y4 = y;
y5 = y;
y6 = y;
y7 = y;
y8 = y;

dir0c = 1;
dir2c = 1;
dir4c = 1;
dir6c = 1;

blockid = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = true;
hspeed = 0;
vspeed = 0;
image_single = dir;
alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Invincibility Frames
if invincible = true
{
    visible = !visible;
    alarm[0] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y + z;

if instance_exists(obj_dark)
{
    size = 32;
    draw_set_blend_mode(bm_subtract);
    surface_set_target(global.light);
    draw_ellipse_color(x-size-view_xview,y-size-view_yview-z-8,x+size-view_xview,y+size-view_yview-z-8,c_white,c_black,false);
    surface_reset_target();
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//B Button/Key
if (gamepad_button_check(0, global.buttonB) || keyboard_check(global.keyB))
{
    if global.hand2 = 1 &amp;&amp; moving = 0 &amp;&amp; !otro.hammer = 1
    &amp;&amp; !otro.hand = 1 &amp;&amp; global.electrocute = 0 &amp;&amp;
    global.dontmove = 0 &amp;&amp; global.can = 1 &amp;&amp;
    global.zcan = 1 &amp;&amp; !instance_exists(obj_fire)
    &amp;&amp; !instance_exists(obj_thunder)
    {
        hand = 1;
        moving = 0;
    }
}
//Press Start Button/Key
if (gamepad_button_check_pressed(0, global.buttonStart) || keyboard_check_pressed(global.keyStart))
{
    if jump = 0 &amp;&amp; hammer = 0 &amp;&amp; hand = 0 &amp;&amp; otro.jump = 0
    &amp;&amp; otro.hammer = 0 &amp;&amp; otro.hand = 0 &amp;&amp; global.electrocute = 0
    &amp;&amp; global.spin = 0 &amp;&amp; !instance_exists(obj_fire) &amp;&amp; !instance_exists(obj_thunder)
    &amp;&amp; distance_to_object(obj_mplayer_mini) &gt; 19
    {
        if instance_exists(obj_mplayer_mini)
            audio_play_sound(snd_lplayer_okiedokie,0,0);
        instance_change(obj_lplayer_2,false);
    }
}
//Press B Button/Key
if (gamepad_button_check_pressed(0, global.buttonB) || keyboard_check_pressed(global.keyB))
{
    if !otro.hammer = 1 &amp;&amp; !otro.hand = 1 &amp;&amp; global.dontmove = 0
    &amp;&amp; !instance_exists(obj_fire) &amp;&amp; !instance_exists(obj_thunder)
    {
        if global.jump2 = 1 &amp;&amp; z = landing &amp;&amp; jump = 0
        {
            zspeed = 6;
            jump = 1;
            audio_play_sound(snd_jump,0,0);
        }
        if global.super = 1 &amp;&amp; instance_exists(obj_mplayer)
        {
            if global.zcan = 1
                global.spin = 1;
            if global.zcan = 0 &amp;&amp; z = landing
            {
                zspeed = 5;
                jump = 1;
                audio_play_sound(snd_jump,0,0);
            }
        }
          
        if global.hammer2 = 1 &amp;&amp; moving = 0 &amp;&amp; global.can = 1 &amp;&amp; global.zcan = 1
        {
            hammer = 1;
            moving = 2;
            audio_play_sound(snd_hammer,0,0);
        }
        
        if global.hand2 = 1 &amp;&amp; moving = 0 &amp;&amp; global.can = 1  &amp;&amp; global.zcan = 1 &amp;&amp; global.electrocute = 0
            instance_create(x,y,obj_thunder);
    }
}    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z+= zspeed;
zspeed-= zgravity;
if z &lt; landing
{
    z = landing;
    zspeed = 0;
    zgravity = 0;
}
if z &gt; landing
    zgravity = 1;

if instance_exists(obj_mplayer)
    otro = obj_mplayer;
if instance_exists(obj_mplayer_mini)
    otro = obj_mplayer_mini;

if moving = 1
{
    if instance_exists(obj_mplayer) &amp;&amp; global.electrocute = 0
    {
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 340 or point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &lt;= 20
            dir = 0;
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 20 &amp;&amp; point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &lt;= 70
            dir = 1;
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 70 &amp;&amp; point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &lt;= 110
            dir = 2;
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 110 &amp;&amp; point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1 )&lt;= 160
            dir = 3;
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 160 &amp;&amp; point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &lt;= 200
            dir = 4;
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 200 &amp;&amp; point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &lt;= 250
            dir = 5;
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 250 &amp;&amp; point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &lt;= 290
            dir = 6;
        if point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &gt; 290 &amp;&amp; point_direction(x,y,obj_mplayer.x1,obj_mplayer.y1) &lt;= 340
            dir = 7;
    }
    if instance_exists(obj_mplayer_mini)
    {
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 340 or point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &lt;= 20
            dir = 0;
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 20 &amp;&amp; point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &lt;= 70
            dir = 1;
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 70 &amp;&amp; point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &lt;= 110
            dir = 2;
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 110 &amp;&amp; point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &lt;= 160
            dir = 3;
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 160 &amp;&amp; point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &lt;= 200
            dir = 4;
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 200 &amp;&amp; point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1 )&lt;= 250
            dir = 5;
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 250 &amp;&amp; point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1 )&lt;= 290
            dir = 6;
        if point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &gt; 290 &amp;&amp; point_direction(x,y,obj_mplayer_mini.x1,obj_mplayer_mini.y1) &lt;= 340
            dir = 7;
    }
}


if global.electrocute = 1 &amp;&amp; instance_exists(obj_mplayer)
    electrodir = obj_mplayer.electrodir;

if instance_exists(obj_mplayer_mini)
    global.electrocute = 0;

if moving = 0
{
    if instance_exists(obj_mplayer)
        dir = obj_mplayer.dir;
    if instance_exists(obj_mplayer_mini)
        dir = obj_mplayer_mini.dir;
}

if instance_exists(obj_mplayer) &amp;&amp; !instance_exists(obj_mplayer_mini)
{
    if !hammer = 1 &amp;&amp; !hand = 1 &amp;&amp; !obj_mplayer.hammer = 1 &amp;&amp; !obj_mplayer.hand = 1
    &amp;&amp; !instance_exists(obj_fire) &amp;&amp; !instance_exists(obj_thunder) &amp;&amp; global.electrocute = 0
    {
        if keyboard_check(global.keyLeft)
        or keyboard_check(global.keyRight)
        or keyboard_check(global.keyUp)
        or keyboard_check(global.keyDown)
            moving = 1;
    }
    if global.electrocute = 1
    {
        if keyboard_check(global.keyLeft)
        or keyboard_check(global.keyRight)
        or keyboard_check(global.keyUp)
        or keyboard_check(global.keyDown)
        {
            electromoving = 1;
            moving = 1;
        }
    }
}
if !instance_exists(obj_mplayer) &amp;&amp; instance_exists(obj_mplayer_mini)
{
    if !hammer = 1 &amp;&amp; !hand = 1 &amp;&amp; !obj_mplayer_mini.hammer = 1
    &amp;&amp; !obj_mplayer_mini.hand = 1 &amp;&amp; !instance_exists(obj_fire)
    &amp;&amp; !instance_exists(obj_thunder)
    {
        if keyboard_check(global.keyLeft)
        or keyboard_check(global.keyRight)
        or keyboard_check(global.keyUp)
        or keyboard_check(global.keyDown)
            moving = 1;
    }
}

if global.electrocute = 0 &amp;&amp; !hammer = 1 &amp;&amp; !hand = 1
{
    if instance_exists(obj_mplayer)
    {
        if !obj_mplayer.hammer = 1 &amp;&amp; !obj_mplayer.hand = 1
        {
            if keyboard_check(global.keyLeft)
            &amp;&amp; keyboard_check(global.keyRight)
                moving = 0;
            if keyboard_check(global.keyUp)
            &amp;&amp; keyboard_check(global.keyDown)
                moving = 0;
        }
    }
    if instance_exists(obj_mplayer_mini)
    {
        if !obj_mplayer_mini.hammer = 1 &amp;&amp; !obj_mplayer_mini.hand = 1
        {
            if keyboard_check(global.keyLeft)
            &amp;&amp; keyboard_check(global.keyRight)
                moving = 0;
            if keyboard_check(global.keyUp)
            &amp;&amp; keyboard_check(global.keyDown)
                moving = 0;
        }
    }
}
if global.electrocute = 1
{
    if keyboard_check(global.keyLeft)
    &amp;&amp; keyboard_check(global.keyRight)
    {
        electromoving = 0;
        moving = 0;
    }
    if keyboard_check(global.keyUp)
    &amp;&amp; keyboard_check(global.keyDown)
    {
        electromoving = 0;
        moving = 0;
    }
}

if hammer = 0 &amp;&amp; hand = 0
{
    if instance_exists(obj_mplayer)
    {
        if obj_mplayer.moving = 1
        {
            if obj_mplayer.dir = 0 &amp;&amp; obj_mplayer.dir0c = 0
                moving = 0;
            if obj_mplayer.dir = 1 &amp;&amp; obj_mplayer.dir0c = 0 &amp;&amp; obj_mplayer.dir2c = 0
                moving = 0;
            if obj_mplayer.dir = 2 &amp;&amp; obj_mplayer.dir2c = 0
                moving = 0;
            if obj_mplayer.dir = 3 &amp;&amp; obj_mplayer.dir2c = 0 &amp;&amp; obj_mplayer.dir4c = 0
                moving = 0;
            if obj_mplayer.dir = 4 &amp;&amp; obj_mplayer.dir4c = 0
                moving = 0;
            if obj_mplayer.dir = 5 &amp;&amp; obj_mplayer.dir4c = 0 &amp;&amp; obj_mplayer.dir6c = 0
                moving = 0;
            if obj_mplayer.dir = 6 &amp;&amp; obj_mplayer.dir6c = 0
                moving = 0;
            if obj_mplayer.dir = 7 &amp;&amp; obj_mplayer.dir6c = 0 &amp;&amp; obj_mplayer.dir0c = 0
                moving = 0;
        }
    }
    if instance_exists(obj_mplayer_mini)
    {
        if obj_mplayer_mini.moving = 1
        {
            if obj_mplayer_mini.dir = 0 &amp;&amp; obj_mplayer_mini.dir0c = 0
                moving = 0;
            if obj_mplayer_mini.dir = 1 &amp;&amp; obj_mplayer_mini.dir0c = 0 &amp;&amp; obj_mplayer_mini.dir2c = 0
                moving = 0;
            if obj_mplayer_mini.dir = 2 &amp;&amp; obj_mplayer_mini.dir2c = 0
                moving = 0;
            if obj_mplayer_mini.dir = 3 &amp;&amp; obj_mplayer_mini.dir2c = 0 &amp;&amp; obj_mplayer_mini.dir4c = 0
                moving = 0;
            if obj_mplayer_mini.dir = 4 &amp;&amp; obj_mplayer_mini.dir4c = 0
                moving = 0;
            if obj_mplayer_mini.dir = 5 &amp;&amp; obj_mplayer_mini.dir4c = 0 &amp;&amp; obj_mplayer_mini.dir6c = 0
                moving = 0;
            if obj_mplayer_mini.dir = 6 &amp;&amp; obj_mplayer_mini.dir6c = 0
                moving = 0;
            if obj_mplayer_mini.dir = 7 &amp;&amp; obj_mplayer_mini.dir6c = 0 &amp;&amp; obj_mplayer_mini.dir0c = 0
                moving = 0;
        }
    }
}

if landing = z &amp;&amp; jump = 0 &amp;&amp; hammer = 0 &amp;&amp; hand = 0 &amp;&amp; global.electrocute = 0
{
    switch (dir)
    {
        case 0:
            sprite_index = spr_lplayer_3;
            xscale = 1;
        break;
        case 1:
            sprite_index = spr_lplayer_4;
            xscale = 1;
        break;
        case 2:
            sprite_index = spr_lplayer_5;
            xscale = 1;
        break;
        case 3:
            sprite_index = spr_lplayer_4;
            xscale = -1;
        break;
        case 4:
            sprite_index = spr_lplayer_3;
            xscale = -1;
        break;
        case 5:
            sprite_index = spr_lplayer_2;
            xscale = -1;
        break;
        case 6:
            sprite_index = spr_lplayer_1;
            xscale = 1;
        break;
        case 7:
            sprite_index = spr_lplayer_2;
            xscale = 1;
        break;
    }
}

if jump = 1 &amp;&amp; zspeed &gt;0
{
    switch (dir)
    {
        case 0:
            sprite_index = spr_lplayer_0;
            image_index = 2;
            xscale = 1;
        break;
        case 1:
            sprite_index = spr_lplayer_0;
            image_index = 3;
            xscale = 1;
        break;
        case 2:
            sprite_index = spr_lplayer_0;
            image_index = 4;
            xscale = 1;
        break;
        case 3:
            sprite_index = spr_lplayer_0;
            image_index = 3;
            xscale = -1;
        break;
        case 4:
            sprite_index = spr_lplayer_0;
            image_index = 2;
            xscale = -1;
        break;
        case 5:
            sprite_index = spr_lplayer_0;
            image_index = 1;
            xscale = -1;
        break;
        case 6:
            sprite_index = spr_lplayer_0;
            image_index = 0;
            xscale = 1;
        break;
        case 7:
            sprite_index = spr_lplayer_0;
            image_index = 1;
            xscale = 1;
        break;
    }
}

if jump = 1 &amp;&amp; zspeed &lt;= 0
{
    switch (dir)
    {
        case 0:
            sprite_index = spr_lplayer_0;
            image_index = 2;
            xscale = 1;
        break;
        case 1:
            sprite_index = spr_lplayer_0;
            image_index = 3;
            xscale = 1;
        break;
        case 2:
            sprite_index = spr_lplayer_0;
            image_index = 4;
            xscale = 1;
        break;
        case 3:
            sprite_index = spr_lplayer_0;
            image_index = 3;
            xscale = -1;
        break;
        case 4:
            sprite_index = spr_lplayer_0;
            image_index = 2;
            xscale = -1;
        break;
        case 5:
            sprite_index = spr_lplayer_0;
            image_index = 1;
            xscale = -1;
        break;
        case 6:
            sprite_index = spr_lplayer_0;
            image_index = 0;
            xscale = 1;
        break;
        case 7:
            sprite_index = spr_lplayer_0;
            image_index = 1;
            xscale = 1;
        break;
    }
}

if landing = z
    jump = 0;

switch (global.spin3)
{
    case 1:
        x = otro.x;
        y = otro.y;
        z = otro.z;
        visible = false;
    break;
    case 0:
        visible = true;
    break;
}

if hammer = 1 &amp;&amp; moving = 2
{
    switch (dir)
    {
        case 0:
            sprite_index = spr_lplayer_8;
            xscale = 1;
        break;
        case 1:
            sprite_index = spr_lplayer_9;
            xscale = 1;
        break;
        case 2:
            sprite_index = spr_lplayer_10;
            xscale = 1;
        break;
        case 3:
            sprite_index = spr_lplayer_9;
            xscale = -1;
        break;
        case 4:
            sprite_index = spr_lplayer_8;
            xscale = -1;
        break;
        case 5:
            sprite_index = spr_lplayer_7;
            xscale = -1;
        break;
        case 6:
            sprite_index = spr_lplayer_6;
            xscale = 1;
        break;
        case 7:
            sprite_index = spr_lplayer_7;
            xscale = 1;
        break;
    }
}
if hammer = 1 &amp;&amp; image_index &gt; 11
{
    hammer = 0;
    moving = 0;
}

if hammer = 1 &amp;&amp; image_index &gt; 5
{
    if instance_exists (obj_mplayer)
        global.mini = 1;
    if instance_exists (obj_mplayer_mini)
        global.mini = 0;
}

if hand = 1 &amp;&amp; keyboard_check(global.keyB)
{
    switch (dir)
    {
        case 0:
            sprite_index = spr_lplayer_13;
            xscale = 1;
        break;
        case 1:
            sprite_index = spr_lplayer_14;
            xscale = 1;
        break;
        case 2:
            sprite_index = spr_lplayer_15;
            xscale = 1;
        break;
        case 3:
            sprite_index = spr_lplayer_14;
            xscale = -1;
        break;
        case 4:
            sprite_index = spr_lplayer_13;
            xscale = -1;
        break;
        case 5:
            sprite_index = spr_lplayer_12;
            xscale = -1;
        break;
        case 6:
            sprite_index = spr_lplayer_11;
            xscale = 1;
        break;
        case 7:
            sprite_index = spr_lplayer_12;
            xscale = 1;
        break;
    }
}
if hand = 1 &amp;&amp; moving = 0 &amp;&amp; not keyboard_check(global.keyB)
{
    hand = 1;
    moving = 3;
    global.thunder = 1;
}
if global.thunder = 1 &amp;&amp; not keyboard_check(global.keyB)
{
    moving = 3;
    if image_index &gt; 4
    {
        global.thunder = 0;
        moving = 0;
        hand = 0;
    }
}

if landing = z &amp;&amp; global.electrocute = 1
{
    switch (dir)
    {
        case 0:
            sprite_index = spr_lplayer_18;
            xscale = 1;
        break;
        case 1:
            sprite_index = spr_lplayer_19;
            xscale = 1;
        break;
        case 2:
            sprite_index = spr_lplayer_20;
            xscale = 1;
        break;
        case 3:
            sprite_index = spr_lplayer_19;
            xscale = -1;
        break;
        case 4:
            sprite_index = spr_lplayer_18;
            xscale = -1;
        break;
        case 5:
            sprite_index = spr_lplayer_17;
            xscale = -1;
        break;
        case 6:
            sprite_index = spr_lplayer_16;
            xscale = 1;
        break;
        case 7:
            sprite_index = spr_lplayer_17;
            xscale = 1;
        break;
    }
}

  
if instance_exists(obj_mplayer)
{
    if dir = obj_mplayer.dir
        global.can = 1;
    else
        global.can = 0;
}
if instance_exists(obj_mplayer_mini)
{
    if dir = obj_mplayer_mini.dir
        global.can = 1;
    else
        global.can = 0;
}
if instance_exists(obj_mplayer)
{
    if z = obj_mplayer.z
        global.zcan = 1;
    else
        global.zcan = 0;
}
if instance_exists(obj_mplayer_mini)
{
    if z = obj_mplayer_mini.z
        global.zcan = 1;
    else
        global.zcan = 0;
}

if not keyboard_check(global.keyLeft) &amp;&amp; not keyboard_check(global.keyRight)
&amp;&amp; not keyboard_check(global.keyUp) &amp;&amp; not keyboard_check(global.keyDown)
&amp;&amp; !hammer = 1 &amp;&amp; !hand = 1 &amp;&amp; global.electrocute = 0
    moving = 0;

if not keyboard_check(global.keyLeft) &amp;&amp; not keyboard_check(global.keyRight)
&amp;&amp; not keyboard_check(global.keyUp) &amp;&amp; not keyboard_check(global.keyDown)
&amp;&amp; global.electrocute = 1
{
    electromoving = 0;
    moving = 0;
}

switch (moving)
{
    case 0:
        image_speed = 0;
        image_index = 0;
    break;
    case 1:
        image_speed = 0.6;
    break;
    case 2:
        image_speed = 0.6;
    break;
    case 3:
        image_speed = 0.5;
    break;
}

//Determine distance to Mario
if instance_exists(obj_mplayer)
{
    if distance_to_object(obj_mplayer) &gt; 19
    {
        dir0c = 0;
        dir4c = 0;
        dir6c = 0;
        dir2c = 0;
    }
}

//Luigi's movements with Mario
if instance_exists(obj_mplayer)
{
    if moving = 1 &amp;&amp; hammer = 0 &amp;&amp; obj_mplayer.hammer = 0 &amp;&amp; hand = 0 &amp;&amp; obj_mplayer.hand = 0 &amp;&amp; global.electrocute = 0
    {
        scr_overworld_movement();
    }
    
    if global.electrocute = 1 &amp;&amp; electromoving = 1
    {
        scr_hand_movement();
        /*if electrodir = 0 &amp;&amp; dir0c = 1 {x+=3}    
        if electrodir = 1 {if dir0c = 1 &amp;&amp; dir2c = 1 {x+=2 y-=2}
        else {if dir0c = 1 &amp;&amp; dir2c = 0 {x+=3}
        if dir0c = 0 &amp;&amp; dir2c = 1 {y-=3}}}
        if electrodir = 2 &amp;&amp; dir2c = 1 {y-=3}     
        if electrodir = 3 {if dir2c = 1 &amp;&amp; dir4c = 1 {x-=2 y-=2}
        else {if dir2c = 1 &amp;&amp; dir4c = 0 {y-=3}
        if dir2c = 0 &amp;&amp; dir4c = 1 {x-=3}}}
        if electrodir = 4 &amp;&amp; dir4c = 1 {x-=3} 
        if electrodir = 5 {if dir4c = 1 &amp;&amp; dir6c = 1 {x-=2 y+=2}
        else {if dir4c = 1 &amp;&amp; dir6c = 0 {x-=3}
        if dir4c = 0 &amp;&amp; dir6c = 1 {y+=3}}}
        if electrodir = 6 &amp;&amp; dir6c = 1 {y+=3}
        if electrodir = 7 {if dir6c = 1 &amp;&amp; dir0c = 1 {x+=2 y+=2}
        else {if dir6c = 1 &amp;&amp; dir0c = 0 {y+=3}
        if dir6c = 0 &amp;&amp; dir0c = 1 {x+=3}}}*/
    }
}

//Luigi's movements with Mario when mini
if instance_exists(obj_mplayer_mini)
{
    if moving = 1 &amp;&amp; hammer = 0 &amp;&amp; obj_mplayer_mini.hammer = 0 &amp;&amp; hand = 0 &amp;&amp; obj_mplayer_mini.hand = 0 &amp;&amp; global.dontmove = 0
    {
        scr_overworld_movement();
    }
}

dir0c = 1;
dir2c = 1;
dir4c = 1;
dir6c = 1;

//Collisions
if not collision_rectangle(x-8,y-4,x+8,y+8,obj_z16,0,1) &amp;&amp; z &gt; 0
    landing = 0;
scr_collision_checking();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_zmask">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z &gt;= other.z
    landing = other.z;
if z+20 &gt;= other.z-24 &amp;&amp; landing &lt; other.z
    zspeed = -2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fix animation errors while walking
if sprite_index = spr_lplayer_1 || sprite_index = spr_lplayer_2
|| sprite_index = spr_lplayer_3 || sprite_index = spr_lplayer_4
|| sprite_index = spr_lplayer_5
    image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dir = 0 or dir = 1 or dir = 7
{
    draw_sprite(spr_shadow,zgravity,x-6,y-landing);
    draw_sprite_ext(sprite_index,image_index,x-6,y-z,xscale,1,0,c_white,1);
}
else if dir = 2
{
    draw_sprite(spr_shadow,zgravity,x,(y+6)-landing);
    draw_sprite_ext(sprite_index,image_index,x,(y+6)-z,xscale,1,0,c_white,1);
}
else if dir = 6
{
    draw_sprite(spr_shadow,zgravity,x,(y-6)-landing);
    draw_sprite_ext(sprite_index,image_index,x,(y-6)-z,xscale,1,0,c_white,1);
}
else if dir = 3 or dir = 4 or dir = 5
{
    draw_sprite(spr_shadow,zgravity,x+6,y-landing);
    draw_sprite_ext(sprite_index,image_index,x+6,y-z,xscale,1,0,c_white,1);
}
 

/*Directions
dir = 0 is Right
dir = 1 is Up Right
dir = 2 is Up
dir = 3 is Up Left
dir = 4 is Left
dir = 5 is Down Left
dir = 6 is Down
dir = 7 is Down Right
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
