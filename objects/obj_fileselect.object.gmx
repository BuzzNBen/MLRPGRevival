<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ready = 0;
image_speed = 0.15;
selection = 1; //0 is Back, 1 is File A, 2 is File B, 3 is Credits
deletion = 180;
action = 0; //0 is File Select, 1 is Start, 2 is Copy,3 is Erase, 4 is Cancel
textspeed = -0.5; //0 is not moving, -0.5 is moving left, -1 is L + left, 1 is R + right
heldL = 0;
heldR = 0;
Mlvl[1] = 0;
Llvl[1] = 0;
Mlvl[2] = 0;
Llvl[2] = 0;
scr_filemessages();
alpha[0] = 1;
alpha[1] = 0.6;
alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Game or Return to Title Screen
global.saveMessage = -1;
global.flag = -1;
global.coins = 0;
if selection = 1
{
    if (file_exists("ML_RPG_SaveA.sav"))
        scr_fileload("ML_RPG_SaveA.sav");
    room_goto(rmMarioBrosHouse);                      
}
else if selection = 2
{
    if (file_exists("ML_RPG_SaveB.sav"))
        scr_fileload("ML_RPG_SaveB.sav");
    room_goto(rmMarioBrosHouse);                      
}
else if selection = 3
    room_goto(rmCredits);
else if selection = 0
    room_goto(rm_TitleScreen);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 0
    audio_play_sound(mus_FileSelect,1,1);
ready = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (selection)
{
    case 0:
        alpha[0] = 0.6;
        alpha[1] = 0.6;    
        global.file = 0;
    break;    
    case 1:
        alpha[0] = 1;
        alpha[1] = 0.6;
        global.file = 1;
    break;
    case 2:
        alpha[0] = 0.6;
        alpha[1] = 1;
        global.file = 2;
    break;
    case 3:
        alpha[0] = 0.6;
        alpha[1] = 0.6;
        global.file = 0;
    break;
}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if textspeed &lt;&gt; 0
    textspeed -= 0.5;
if ready = 1 &amp;&amp; action = 0
{
    if gamepad_button_check_pressed(0, global.buttonLeft) || keyboard_check_pressed(global.keyLeft) //Left
    {
        switch (selection)
        {
            case 0:
                exit;
            break;
            case 1:
                audio_play_sound(snd_select,0,0);
                selection = 0;
            break;     
            case 2:
                audio_play_sound(snd_select,0,0);
                selection = 0;
            break;
            case 3:
                audio_play_sound(snd_select,0,0);
                selection = 2;
            break;       
        }
        deletion = 180;
        textspeed = 204;
    }
    if gamepad_button_check_pressed(0, global.buttonUp) || keyboard_check_pressed(global.keyUp) //Up
    {
        switch (selection)
        {
            case 0:
                audio_play_sound(snd_select,0,0);
                selection = 1;
            break;
            case 1:
                exit;
            break;     
            case 2:
                audio_play_sound(snd_select,0,0);
                selection = 1;
            break;
            case 3:
                audio_play_sound(snd_select,0,0);
                selection = 1;
            break;       
        }
        deletion = 180;
        textspeed = 204;
    }
    if gamepad_button_check_pressed(0, global.buttonRight) || keyboard_check_pressed(global.keyRight) //Right
    {
        switch (selection)
        {
            case 0:
                audio_play_sound(snd_select,0,0);
                selection = 2;
            break;
            case 1:
                audio_play_sound(snd_select,0,0);
                selection = 3;
            break;     
            case 2:
                audio_play_sound(snd_select,0,0);
                selection = 3;
            break;
            case 3:
                exit;
            break;       
        }
        deletion = 180;
        textspeed = 204;
    }
    if gamepad_button_check_pressed(0, global.buttonDown) || keyboard_check_pressed(global.keyDown) //Down
    {
        switch (selection)
        {
            case 0:
                exit;
            break;
            case 1:
                audio_play_sound(snd_select,0,0);
                selection = 2;
            break;     
            case 2:
                audio_play_sound(snd_select,0,0);
                selection = 3;
            break;
            case 3:
                exit;
            break;       
        }
        deletion = 180;
        textspeed = 204;
    }
}
else if ready = 1 &amp;&amp; action &gt; 0
{
    if gamepad_button_check_pressed(0, global.buttonUp) || keyboard_check_pressed(global.keyUp) //Up
    {
        audio_play_sound(snd_select,0,0);
        if action = 1
            action = 4;
        else
            action -= 1;
    }
    if gamepad_button_check_pressed(0, global.buttonDown) || keyboard_check_pressed(global.keyDown) //Down
    {
        audio_play_sound(snd_select,0,0);
        if action = 4
            action = 1;
        else
            action += 1;
    }
}

//Press Start or A
if gamepad_button_check_pressed(0, global.buttonA) || keyboard_check_pressed(global.keyA) //A
|| gamepad_button_check_pressed(0, global.buttonStart) || keyboard_check_pressed(global.keyStart) //Start
{
    event_user(0);
}

//L + R Text Speed
if gamepad_button_check(0, global.buttonTriggerL) || keyboard_check(global.keyTriggerL) //L
{
    heldL = 1;
    textspeed -= 1;
}
if gamepad_button_check(0, global.buttonTriggerR) || keyboard_check(global.keyTriggerR) //R
{
    heldR = 1;
    textspeed += 2;
}
if gamepad_button_check_released(0, global.buttonTriggerL) || keyboard_check_released(global.keyTriggerL) //L
{
    if heldL = 1
        heldL = 0;
    if textspeed = -2 || textspeed = 0
        textspeed -= 0.5;
}
if gamepad_button_check_released(0, global.buttonTriggerR) || keyboard_check_released(global.keyTriggerR) //R
{
    if heldR = 1
        heldR = 0;
    if textspeed = 2 || textspeed = 0
        textspeed -= 0.5;
}
//Press Y
if gamepad_button_check(0, global.buttonY) || keyboard_check(global.keyY) //Y
{
    if selection = 1 &amp;&amp; file_exists("ML_RPG_SaveA.sav")
        deletion -= 1;
    else if selection = 2 &amp;&amp; file_exists("ML_RPG_SaveB.sav")
        deletion -= 1;    
    if deletion &lt;= 0
    {
        deletion = 180;
        event_user(1);
    }
}
if gamepad_button_check_released(0, global.buttonY) || keyboard_check_released(global.keyY) //Y
{
    if deletion &gt; 0 &amp;&amp; selection &lt; 180
        deletion = 180;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Level of Bros if File Exists
if file_exists("ML_RPG_SaveA.sav")
{
    var file = file_text_open_read("ML_RPG_SaveA.sav");
    repeat(70)
    {
        file_text_readln(file);
    }
    Mlvl[1] = real(base64_decode(file_text_read_string(file)));
    repeat(12)
    {
        file_text_readln(file);
    }
    Llvl[1] = real(base64_decode(file_text_read_string(file)));
    file_text_close(file);
}
if file_exists("ML_RPG_SaveB.sav")
{
    var file = file_text_open_read("ML_RPG_SaveB.sav");
    repeat(70)
    {
        file_text_readln(file);
    }
    Mlvl[2] = real(base64_decode(file_text_read_string(file)));
    repeat(12)
    {
        file_text_readln(file);
    }
    Llvl[2] = real(base64_decode(file_text_read_string(file)));
    file_text_close(file);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Save Album Messages if File Exists
if selection = 1 &amp;&amp; file_exists("ML_RPG_SaveA.sav")
{
    var file = file_text_open_read("ML_RPG_SaveA.sav");
    global.saveMessage = real(base64_decode(file_text_read_string(file)));
    draw_text(textspeed + 204,42,message[global.saveMessage]);
    file_text_readln(file);
    file_text_readln(file);
    file_text_readln(file);
    global.coins = real(base64_decode(file_text_read_string(file)));
    file_text_close(file);
}
if selection = 2 &amp;&amp; file_exists("ML_RPG_SaveB.sav")
{
    var file = file_text_open_read("ML_RPG_SaveB.sav");
    global.saveMessage = real(base64_decode(file_text_read_string(file)));
    draw_text(textspeed + 204,42,message[global.saveMessage]);
    file_text_readln(file);
    file_text_readln(file);
    file_text_readln(file);
    global.coins = real(base64_decode(file_text_read_string(file)));
    file_text_close(file);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 1
{
    if selection = 1 &amp;&amp; file_exists("ML_RPG_SaveA.sav")
    {
        ready = 2;
        action = 0;
        audio_play_sound(snd_delete_file,1,0);
        file_delete("ML_RPG_SaveA.sav");
        alarm[0] = 90;
    }
    if selection = 2 &amp;&amp; file_exists("ML_RPG_SaveB.sav")
    {
        ready = 2;
        action = 0;
        audio_play_sound(snd_delete_file,1,0);
        file_delete("ML_RPG_SaveB.sav");
        alarm[0] = 90;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Selection
if ready = 1
{
    if selection = 0 || selection = 3
    {
        ready = 0;
        audio_stop_all();
        audio_play_sound(snd_confirm,1,0);
        
        alarm[1] = 90;
    }
    else if action = 1 //Start Game
    {
        ready = 0;
        audio_stop_all();
        audio_play_sound(snd_confirm,1,0);
        
        alarm[1] = 90;
    }    
    else if action = 2 //Copy File
    {
        if global.file = 1 &amp;&amp; file_exists("ML_RPG_SaveA.sav") &amp;&amp; !file_exists("ML_RPG_SaveB.sav")
            audio_play_sound(snd_confirm,1,0);
        else if global.file = 2 &amp;&amp; file_exists("ML_RPG_SaveB.sav") &amp;&amp; !file_exists("ML_RPG_SaveA.sav")
            audio_play_sound(snd_confirm,1,0);
        else
            audio_play_sound(snd_incorrect,1,0);
    }
    else if action = 3 //Erase File
    {
        if global.file = 1 &amp;&amp; file_exists("ML_RPG_SaveA.sav")
            event_user(1);
        else if global.file = 2 &amp;&amp; file_exists("ML_RPG_SaveB.sav")
            event_user(1);
        else
            audio_play_sound(snd_incorrect,1,0);
    }
    else if action = 4 //Back
    {
        audio_play_sound(snd_cancel,1,0);
        action = 0;
    }
    else if action = 0
    {
        audio_play_sound(snd_confirm,1,0);
        action = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw World Map
draw_sprite_ext(spr_map,0,-6,65,0.7,0.7,0,-1,1);
draw_sprite(spr_filemapbros,0,96,116);

//Draw Back Button
if selection = 0
{
    draw_sprite_ext(spr_fileback,0,0,216,1,1,0,-1,1);
    draw_sprite_ext(spr_filecredits,0,426,216,1,1,0,-1,0.6);
}
else if selection &gt; 0 &amp;&amp; selection &lt; 3
{
    draw_sprite_ext(spr_fileback,0,0,216,1,1,0,-1,0.6);
    draw_sprite_ext(spr_filecredits,0,426,216,1,1,0,-1,0.6);
}
else if selection = 3
{
    draw_sprite_ext(spr_fileback,0,0,216,1,1,0,-1,0.6);
    draw_sprite_ext(spr_filecredits,0,426,216,1,1,0,-1,1);
}

//Draw Coin Bar
draw_sprite(spr_filecoinbar,0,0,8);
if selection = 1 &amp;&amp; file_exists("ML_RPG_SaveA.sav")
    scr_draw_numbers(24,0,global.coins,5,1,1,0,c_yellow,1);
if selection = 2 &amp;&amp; file_exists("ML_RPG_SaveB.sav")
    scr_draw_numbers(24,0,global.coins,5,1,1,0,c_yellow,1);

//Draw Location Bar
draw_sprite(spr_enemyhud,0,416,16);

//Draw Text Bar
draw_sprite_ext(spr_levelupbardisplay,0,68,48,8,1,0,-1,0.7);

//Draw Text
draw_set_font(fnt_enemyname);
draw_set_color(c_white);
event_user(2);
draw_set_color(c_black);
draw_set_halign(fa_right);
draw_text(420,6,"Mushroom Castle Courtyard"); //Draw's Location Name (for now)
draw_set_halign(fa_left);
//Drawing save file text from an ini list?

//Draw L+R
draw_sprite_ext(spr_fileLkey,heldL,10,41,1,1,0,-1,1);
draw_sprite_ext(spr_fileRkey,heldR,400,41,1,1,0,-1,1);

//Draw File Icons
draw_sprite_ext(spr_filebar,0,192,64,1,1,0,-1,alpha[0]); //File A
draw_sprite_ext(spr_filebar,0,192,140,1,1,0,-1,alpha[1]); //File B

//Draw File Stars and Numbers
draw_sprite(spr_filestar,0,192,64); //File A
scr_draw_numbers(197,72,1,1,0.85,0.85,0,c_white,1);
draw_sprite(spr_filestar,0,192,140); //File B
scr_draw_numbers(197,148,2,1,0.85,0.85,0,c_white,1);

//Display File Information
if file_exists("ML_RPG_SaveA.sav") &amp;&amp; action = 0
{
    event_user(3);  
    //Draw Mario Levels
    draw_sprite_ext(spr_lvl,0,244,128,1,1,0,-1,alpha[0]);
    scr_draw_numbers_empty(278,116,Mlvl[1],2,1,1,0,-1,alpha[0]);   
    //Draw Luigi Levels 
    draw_sprite_ext(spr_lvl,0,326,128,1,1,0,-1,alpha[0]);
    scr_draw_numbers_empty(360,116,Llvl[1],2,1,1,0,-1,alpha[0]);
    //Draw Red Circle
    draw_sprite_ext(spr_winstrikedisplay,0,282,88,1,1,0,-1,alpha[0]);
    //Draw Green Circle
    draw_sprite_ext(spr_winstrikedisplay,1,360,88,1,1,0,-1,alpha[0]);
    //Draw Mario Sprite
    draw_sprite_ext(spr_mplayer_0,0,282,112,1,1,0,-1,alpha[0]);
    //Draw Luigi Sprite
    draw_sprite_ext(spr_lplayer_0,0,360,112,1,1,0,-1,alpha[0]);
    //Draw Mario Name
    draw_sprite_ext(spr_bronames,0,282,110,1,1,0,-1,alpha[0]);
    //Draw Luigi Name
    draw_sprite_ext(spr_bronames,1,360,110,1,1,0,-1,alpha[0]);
}
if action &gt; 0 &amp;&amp; selection = 1
{
    switch (action)
    {
        case 1:
            draw_sprite(spr_dialog_pointer,-1,260,80);
            draw_sprite(spr_fileoptions,0,275,80);
            draw_sprite(spr_fileoptions,1,275,92);
            draw_sprite(spr_fileoptions,2,275,104);
            draw_sprite(spr_fileoptions,3,275,116);
        break;
        case 2:
            draw_sprite(spr_dialog_pointer,-1,260,92);
            draw_sprite(spr_fileoptions,0,275,80);
            draw_sprite(spr_fileoptions,1,275,92);
            draw_sprite(spr_fileoptions,2,275,104);
            draw_sprite(spr_fileoptions,3,275,116);
        break;
        case 3:
            draw_sprite(spr_dialog_pointer,-1,260,104);
            draw_sprite(spr_fileoptions,0,275,80);
            draw_sprite(spr_fileoptions,1,275,92);
            draw_sprite(spr_fileoptions,2,275,104);
            draw_sprite(spr_fileoptions,3,275,116);
        break;
        case 4:
            draw_sprite(spr_dialog_pointer,-1,260,116);
            draw_sprite(spr_fileoptions,0,275,80);
            draw_sprite(spr_fileoptions,1,275,92);
            draw_sprite(spr_fileoptions,2,275,104);
            draw_sprite(spr_fileoptions,3,275,116);
        break;
    }
}
if file_exists("ML_RPG_SaveB.sav") &amp;&amp; action = 0
{
    event_user(3);
    //Draw Mario Levels
    draw_sprite_ext(spr_lvl,0,244,128+76,1,1,0,-1,alpha[1]);
    scr_draw_numbers_empty(278,116+76,Mlvl[2],2,1,1,0,-1,alpha[1]);   
    //Draw Luigi Levels 
    draw_sprite_ext(spr_lvl,0,326,128+76,1,1,0,-1,alpha[1]);
    scr_draw_numbers_empty(360,116+76,Llvl[2],2,1,1,0,-1,alpha[1]);   
    //Draw Red Circle
    draw_sprite_ext(spr_winstrikedisplay,0,282,88+76,1,1,0,-1,alpha[1]);
    //Draw Green Circle
    draw_sprite_ext(spr_winstrikedisplay,1,360,88+76,1,1,0,-1,alpha[1]);
    //Draw Mario Sprite
    draw_sprite_ext(spr_mplayer_0,0,282,112+76,1,1,0,-1,alpha[1]);
    //Draw Luigi Sprite
    draw_sprite_ext(spr_lplayer_0,0,360,112+76,1,1,0,-1,alpha[1]);
    //Draw Mario Name
    draw_sprite_ext(spr_bronames,0,282,110+76,1,1,0,-1,alpha[1]);
    //Draw Luigi Name
    draw_sprite_ext(spr_bronames,1,360,110+76,1,1,0,-1,alpha[1]);
}
if action &gt; 0 &amp;&amp; selection = 2
{
    switch (action)
    {
        case 1:
            draw_sprite(spr_dialog_pointer,-1,260,80+76);
            draw_sprite(spr_fileoptions,0,275,80+76);
            draw_sprite(spr_fileoptions,1,275,92+76);
            draw_sprite(spr_fileoptions,2,275,104+76);
            draw_sprite(spr_fileoptions,3,275,116+76);
        break;
        case 2:
            draw_sprite(spr_dialog_pointer,-1,260,92+76);
            draw_sprite(spr_fileoptions,0,275,80+76);
            draw_sprite(spr_fileoptions,1,275,92+76);
            draw_sprite(spr_fileoptions,2,275,104+76);
            draw_sprite(spr_fileoptions,3,275,116+76);
        break;
        case 3:
            draw_sprite(spr_dialog_pointer,-1,260,104+76);
            draw_sprite(spr_fileoptions,0,275,80+76);
            draw_sprite(spr_fileoptions,1,275,92+76);
            draw_sprite(spr_fileoptions,2,275,104+76);
            draw_sprite(spr_fileoptions,3,275,116+76);
        break;
        case 4:
            draw_sprite(spr_dialog_pointer,-1,260,116+76);
            draw_sprite(spr_fileoptions,0,275,80+76);
            draw_sprite(spr_fileoptions,1,275,92+76);
            draw_sprite(spr_fileoptions,2,275,104+76);
            draw_sprite(spr_fileoptions,3,275,116+76);
        break;
    }
}
if !file_exists("ML_RPG_SaveA.sav") &amp;&amp; action = 0
    draw_sprite_ext(spr_filenewfile,0,308,98,1,1,0,-1,alpha[0]); //NEW FILE
if !file_exists("ML_RPG_SaveB.sav") &amp;&amp; action = 0
    draw_sprite_ext(spr_filenewfile,0,308,174,1,1,0,-1,alpha[1]); //NEW FILE
    
if deletion &lt; 180 &amp;&amp; deletion &gt; 0
{
    if selection = 1 &amp;&amp; file_exists("ML_RPG_SaveA.sav")
    {
        scr_draw_numbers_empty(room_width/2 - 16,room_height/2,deletion,2,1,1,0,c_red,alpha[0]);
        draw_sprite(spr_screenmask,2,0,0);
    }
    if selection = 2 &amp;&amp; file_exists("ML_RPG_SaveB.sav")
    {
        scr_draw_numbers_empty(room_width/2 - 16,room_height/2,deletion,2,1,1,0,c_red,alpha[0]);
        draw_sprite(spr_screenmask,2,0,0);
    }    
}
    
//Show A button
//draw_sprite_ext(spr_mariochoose,-1,room_width-16,room_height-8,1,1,0,-1,_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
